// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FlexGrid allows the limitWidth prop to be unset 1`] = `
.c2 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-flex-basis: 0;
  -ms-flex-preferred-size: 0;
  flex-basis: 0;
  max-width: 100%;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  padding-left: 1rem;
  padding-right: 1rem;
}

.c1 {
  width: 100%;
  margin: 0 auto;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin: 0 auto;
  width: 100%;
}

@media (max-width:575px) {
  .c2 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:576px) {
  .c2 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:768px) {
  .c2 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:992px) {
  .c2 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:1200px) {
  .c2 {
    display: block;
    text-align: inherit;
  }
}

@media (max-width:575px) {
  .c1 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:576px) {
  .c1 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:768px) {
  .c1 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:992px) {
  .c1 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:1200px) {
  .c1 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (max-width:575px) {
  .c0 {
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:576px) {
  .c0 {
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:768px) {
  .c0 {
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:992px) {
  .c0 {
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:1200px) {
  .c0 {
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

<FlexGrid__StyledGrid
  limitWidth={false}
  outsideGutter={true}
  reverseLevel={
    Array [
      false,
      false,
      false,
      false,
      false,
    ]
  }
>
  <StyledComponent
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "FlexGrid__StyledGrid-sc-1da2tb5-0",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            [Function],
          ],
        },
        "displayName": "FlexGrid__StyledGrid",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "FlexGrid__StyledGrid-sc-1da2tb5-0",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
    limitWidth={false}
    outsideGutter={true}
    reverseLevel={
      Array [
        false,
        false,
        false,
        false,
        false,
      ]
    }
  >
    <div
      className="c0"
    >
      <Row
        id="row-1"
      >
        <Row__StyledRow
          id="row-1"
          reverseLevel={
            Array [
              false,
              false,
              false,
              false,
              false,
            ]
          }
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "Row__StyledRow-sc-1goz0ht-0",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    [Function],
                    [Function],
                    [Function],
                    [Function],
                  ],
                },
                "displayName": "Row__StyledRow",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "Row__StyledRow-sc-1goz0ht-0",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            id="row-1"
            reverseLevel={
              Array [
                false,
                false,
                false,
                false,
                false,
              ]
            }
          >
            <div
              className="c1"
              id="row-1"
            >
              <Col
                id="col-1"
              >
                <Col__StyledCol
                  gutter={true}
                  hiddenLevel={
                    Array [
                      false,
                      false,
                      false,
                      false,
                      false,
                    ]
                  }
                  horizontalAlignLevel={
                    Array [
                      "inherit",
                      "inherit",
                      "inherit",
                      "inherit",
                      "inherit",
                    ]
                  }
                  id="col-1"
                  xs={true}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Col__StyledCol-sc-15yvjc7-0",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            [Function],
                            [Function],
                            [Function],
                          ],
                        },
                        "displayName": "Col__StyledCol",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Col__StyledCol-sc-15yvjc7-0",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    gutter={true}
                    hiddenLevel={
                      Array [
                        false,
                        false,
                        false,
                        false,
                        false,
                      ]
                    }
                    horizontalAlignLevel={
                      Array [
                        "inherit",
                        "inherit",
                        "inherit",
                        "inherit",
                        "inherit",
                      ]
                    }
                    id="col-1"
                    xs={true}
                  >
                    <div
                      className="c2"
                      id="col-1"
                    >
                      1st column content
                    </div>
                  </StyledComponent>
                </Col__StyledCol>
              </Col>
              <Col
                id="col-2"
              >
                <Col__StyledCol
                  gutter={true}
                  hiddenLevel={
                    Array [
                      false,
                      false,
                      false,
                      false,
                      false,
                    ]
                  }
                  horizontalAlignLevel={
                    Array [
                      "inherit",
                      "inherit",
                      "inherit",
                      "inherit",
                      "inherit",
                    ]
                  }
                  id="col-2"
                  xs={true}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Col__StyledCol-sc-15yvjc7-0",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            [Function],
                            [Function],
                            [Function],
                          ],
                        },
                        "displayName": "Col__StyledCol",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Col__StyledCol-sc-15yvjc7-0",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    gutter={true}
                    hiddenLevel={
                      Array [
                        false,
                        false,
                        false,
                        false,
                        false,
                      ]
                    }
                    horizontalAlignLevel={
                      Array [
                        "inherit",
                        "inherit",
                        "inherit",
                        "inherit",
                        "inherit",
                      ]
                    }
                    id="col-2"
                    xs={true}
                  >
                    <div
                      className="c2"
                      id="col-2"
                    >
                      2nd column content
                    </div>
                  </StyledComponent>
                </Col__StyledCol>
              </Col>
            </div>
          </StyledComponent>
        </Row__StyledRow>
      </Row>
    </div>
  </StyledComponent>
</FlexGrid__StyledGrid>
`;

exports[`FlexGrid can have limited width at various viewport sizes 1`] = `
.c2 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-flex-basis: 0;
  -ms-flex-preferred-size: 0;
  flex-basis: 0;
  max-width: 100%;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  padding-left: 1rem;
  padding-right: 1rem;
}

.c1 {
  width: 100%;
  margin: 0 auto;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin: 0 auto;
  width: 100%;
}

@media (max-width:575px) {
  .c2 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:576px) {
  .c2 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:768px) {
  .c2 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:992px) {
  .c2 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:1200px) {
  .c2 {
    display: block;
    text-align: inherit;
  }
}

@media (max-width:575px) {
  .c1 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:576px) {
  .c1 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:768px) {
  .c1 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:992px) {
  .c1 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:1200px) {
  .c1 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (max-width:575px) {
  .c0 {
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:576px) {
  .c0 {
    max-width: 36rem;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:768px) {
  .c0 {
    max-width: 48rem;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:992px) {
  .c0 {
    max-width: 62rem;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:1200px) {
  .c0 {
    max-width: 75rem;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

<FlexGrid__StyledGrid
  limitWidth={true}
  outsideGutter={true}
  reverseLevel={
    Array [
      false,
      false,
      false,
      false,
      false,
    ]
  }
>
  <StyledComponent
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "FlexGrid__StyledGrid-sc-1da2tb5-0",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            [Function],
          ],
        },
        "displayName": "FlexGrid__StyledGrid",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "FlexGrid__StyledGrid-sc-1da2tb5-0",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
    limitWidth={true}
    outsideGutter={true}
    reverseLevel={
      Array [
        false,
        false,
        false,
        false,
        false,
      ]
    }
  >
    <div
      className="c0"
    >
      <Row
        id="row-1"
      >
        <Row__StyledRow
          id="row-1"
          reverseLevel={
            Array [
              false,
              false,
              false,
              false,
              false,
            ]
          }
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "Row__StyledRow-sc-1goz0ht-0",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    [Function],
                    [Function],
                    [Function],
                    [Function],
                  ],
                },
                "displayName": "Row__StyledRow",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "Row__StyledRow-sc-1goz0ht-0",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            id="row-1"
            reverseLevel={
              Array [
                false,
                false,
                false,
                false,
                false,
              ]
            }
          >
            <div
              className="c1"
              id="row-1"
            >
              <Col
                id="col-1"
              >
                <Col__StyledCol
                  gutter={true}
                  hiddenLevel={
                    Array [
                      false,
                      false,
                      false,
                      false,
                      false,
                    ]
                  }
                  horizontalAlignLevel={
                    Array [
                      "inherit",
                      "inherit",
                      "inherit",
                      "inherit",
                      "inherit",
                    ]
                  }
                  id="col-1"
                  xs={true}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Col__StyledCol-sc-15yvjc7-0",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            [Function],
                            [Function],
                            [Function],
                          ],
                        },
                        "displayName": "Col__StyledCol",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Col__StyledCol-sc-15yvjc7-0",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    gutter={true}
                    hiddenLevel={
                      Array [
                        false,
                        false,
                        false,
                        false,
                        false,
                      ]
                    }
                    horizontalAlignLevel={
                      Array [
                        "inherit",
                        "inherit",
                        "inherit",
                        "inherit",
                        "inherit",
                      ]
                    }
                    id="col-1"
                    xs={true}
                  >
                    <div
                      className="c2"
                      id="col-1"
                    >
                      1st column content
                    </div>
                  </StyledComponent>
                </Col__StyledCol>
              </Col>
              <Col
                id="col-2"
              >
                <Col__StyledCol
                  gutter={true}
                  hiddenLevel={
                    Array [
                      false,
                      false,
                      false,
                      false,
                      false,
                    ]
                  }
                  horizontalAlignLevel={
                    Array [
                      "inherit",
                      "inherit",
                      "inherit",
                      "inherit",
                      "inherit",
                    ]
                  }
                  id="col-2"
                  xs={true}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Col__StyledCol-sc-15yvjc7-0",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            [Function],
                            [Function],
                            [Function],
                          ],
                        },
                        "displayName": "Col__StyledCol",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Col__StyledCol-sc-15yvjc7-0",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    gutter={true}
                    hiddenLevel={
                      Array [
                        false,
                        false,
                        false,
                        false,
                        false,
                      ]
                    }
                    horizontalAlignLevel={
                      Array [
                        "inherit",
                        "inherit",
                        "inherit",
                        "inherit",
                        "inherit",
                      ]
                    }
                    id="col-2"
                    xs={true}
                  >
                    <div
                      className="c2"
                      id="col-2"
                    >
                      2nd column content
                    </div>
                  </StyledComponent>
                </Col__StyledCol>
              </Col>
            </div>
          </StyledComponent>
        </Row__StyledRow>
      </Row>
    </div>
  </StyledComponent>
</FlexGrid__StyledGrid>
`;

exports[`FlexGrid renders 1`] = `
.c2 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-flex-basis: 0;
  -ms-flex-preferred-size: 0;
  flex-basis: 0;
  max-width: 100%;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  padding-left: 1rem;
  padding-right: 1rem;
}

.c1 {
  width: 100%;
  margin: 0 auto;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin: 0 auto;
  width: 100%;
}

@media (max-width:575px) {
  .c2 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:576px) {
  .c2 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:768px) {
  .c2 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:992px) {
  .c2 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:1200px) {
  .c2 {
    display: block;
    text-align: inherit;
  }
}

@media (max-width:575px) {
  .c1 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:576px) {
  .c1 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:768px) {
  .c1 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:992px) {
  .c1 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:1200px) {
  .c1 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (max-width:575px) {
  .c0 {
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:576px) {
  .c0 {
    max-width: 36rem;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:768px) {
  .c0 {
    max-width: 48rem;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:992px) {
  .c0 {
    max-width: 62rem;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:1200px) {
  .c0 {
    max-width: 75rem;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

<div
  class="c0"
>
  <div
    class="c1"
  >
    <div
      class="c2"
    >
      1st column content
    </div>
    <div
      class="c2"
    >
      2nd column content
    </div>
  </div>
</div>
`;

exports[`FlexGrid renders with no outside gutter 1`] = `
.c2 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-flex-basis: 0;
  -ms-flex-preferred-size: 0;
  flex-basis: 0;
  max-width: 100%;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  padding-left: 1rem;
  padding-right: 1rem;
}

.c1 {
  width: 100%;
  margin: 0 auto;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin: 0 -1rem;
}

@media (max-width:575px) {
  .c2 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:576px) {
  .c2 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:768px) {
  .c2 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:992px) {
  .c2 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:1200px) {
  .c2 {
    display: block;
    text-align: inherit;
  }
}

@media (max-width:575px) {
  .c1 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:576px) {
  .c1 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:768px) {
  .c1 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:992px) {
  .c1 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:1200px) {
  .c1 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (max-width:575px) {
  .c0 {
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:576px) {
  .c0 {
    max-width: 36rem;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:768px) {
  .c0 {
    max-width: 48rem;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:992px) {
  .c0 {
    max-width: 62rem;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:1200px) {
  .c0 {
    max-width: 75rem;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

<FlexGrid__StyledGrid
  limitWidth={true}
  outsideGutter={false}
  reverseLevel={
    Array [
      false,
      false,
      false,
      false,
      false,
    ]
  }
>
  <StyledComponent
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "FlexGrid__StyledGrid-sc-1da2tb5-0",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            [Function],
          ],
        },
        "displayName": "FlexGrid__StyledGrid",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "FlexGrid__StyledGrid-sc-1da2tb5-0",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
    limitWidth={true}
    outsideGutter={false}
    reverseLevel={
      Array [
        false,
        false,
        false,
        false,
        false,
      ]
    }
  >
    <div
      className="c0"
    >
      <Row
        id="row-1"
      >
        <Row__StyledRow
          id="row-1"
          reverseLevel={
            Array [
              false,
              false,
              false,
              false,
              false,
            ]
          }
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "Row__StyledRow-sc-1goz0ht-0",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    [Function],
                    [Function],
                    [Function],
                    [Function],
                  ],
                },
                "displayName": "Row__StyledRow",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "Row__StyledRow-sc-1goz0ht-0",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            id="row-1"
            reverseLevel={
              Array [
                false,
                false,
                false,
                false,
                false,
              ]
            }
          >
            <div
              className="c1"
              id="row-1"
            >
              <Col
                id="col-1"
              >
                <Col__StyledCol
                  gutter={true}
                  hiddenLevel={
                    Array [
                      false,
                      false,
                      false,
                      false,
                      false,
                    ]
                  }
                  horizontalAlignLevel={
                    Array [
                      "inherit",
                      "inherit",
                      "inherit",
                      "inherit",
                      "inherit",
                    ]
                  }
                  id="col-1"
                  xs={true}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Col__StyledCol-sc-15yvjc7-0",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            [Function],
                            [Function],
                            [Function],
                          ],
                        },
                        "displayName": "Col__StyledCol",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Col__StyledCol-sc-15yvjc7-0",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    gutter={true}
                    hiddenLevel={
                      Array [
                        false,
                        false,
                        false,
                        false,
                        false,
                      ]
                    }
                    horizontalAlignLevel={
                      Array [
                        "inherit",
                        "inherit",
                        "inherit",
                        "inherit",
                        "inherit",
                      ]
                    }
                    id="col-1"
                    xs={true}
                  >
                    <div
                      className="c2"
                      id="col-1"
                    >
                      1st column content
                    </div>
                  </StyledComponent>
                </Col__StyledCol>
              </Col>
              <Col
                id="col-2"
              >
                <Col__StyledCol
                  gutter={true}
                  hiddenLevel={
                    Array [
                      false,
                      false,
                      false,
                      false,
                      false,
                    ]
                  }
                  horizontalAlignLevel={
                    Array [
                      "inherit",
                      "inherit",
                      "inherit",
                      "inherit",
                      "inherit",
                    ]
                  }
                  id="col-2"
                  xs={true}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Col__StyledCol-sc-15yvjc7-0",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            [Function],
                            [Function],
                            [Function],
                          ],
                        },
                        "displayName": "Col__StyledCol",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Col__StyledCol-sc-15yvjc7-0",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    gutter={true}
                    hiddenLevel={
                      Array [
                        false,
                        false,
                        false,
                        false,
                        false,
                      ]
                    }
                    horizontalAlignLevel={
                      Array [
                        "inherit",
                        "inherit",
                        "inherit",
                        "inherit",
                        "inherit",
                      ]
                    }
                    id="col-2"
                    xs={true}
                  >
                    <div
                      className="c2"
                      id="col-2"
                    >
                      2nd column content
                    </div>
                  </StyledComponent>
                </Col__StyledCol>
              </Col>
            </div>
          </StyledComponent>
        </Row__StyledRow>
      </Row>
    </div>
  </StyledComponent>
</FlexGrid__StyledGrid>
`;

exports[`FlexGrid supports responsive reversal 1`] = `
.c2 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-flex-basis: 0;
  -ms-flex-preferred-size: 0;
  flex-basis: 0;
  max-width: 100%;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  padding-left: 1rem;
  padding-right: 1rem;
}

.c1 {
  width: 100%;
  margin: 0 auto;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin: 0 auto;
  width: 100%;
}

@media (max-width:575px) {
  .c2 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:576px) {
  .c2 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:768px) {
  .c2 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:992px) {
  .c2 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:1200px) {
  .c2 {
    display: block;
    text-align: inherit;
  }
}

@media (max-width:575px) {
  .c1 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:576px) {
  .c1 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:768px) {
  .c1 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:992px) {
  .c1 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:1200px) {
  .c1 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (max-width:575px) {
  .c0 {
    -webkit-flex-direction: column-reverse;
    -ms-flex-direction: column-reverse;
    flex-direction: column-reverse;
  }
}

@media (min-width:576px) {
  .c0 {
    max-width: 36rem;
    -webkit-flex-direction: column-reverse;
    -ms-flex-direction: column-reverse;
    flex-direction: column-reverse;
  }
}

@media (min-width:768px) {
  .c0 {
    max-width: 48rem;
    -webkit-flex-direction: column-reverse;
    -ms-flex-direction: column-reverse;
    flex-direction: column-reverse;
  }
}

@media (min-width:992px) {
  .c0 {
    max-width: 62rem;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:1200px) {
  .c0 {
    max-width: 75rem;
    -webkit-flex-direction: column-reverse;
    -ms-flex-direction: column-reverse;
    flex-direction: column-reverse;
  }
}

<FlexGrid__StyledGrid
  limitWidth={true}
  outsideGutter={true}
  reverseLevel={
    Array [
      true,
      true,
      true,
      false,
      true,
    ]
  }
>
  <StyledComponent
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "FlexGrid__StyledGrid-sc-1da2tb5-0",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            [Function],
          ],
        },
        "displayName": "FlexGrid__StyledGrid",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "FlexGrid__StyledGrid-sc-1da2tb5-0",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
    limitWidth={true}
    outsideGutter={true}
    reverseLevel={
      Array [
        true,
        true,
        true,
        false,
        true,
      ]
    }
  >
    <div
      className="c0"
    >
      <Row
        id="row-1"
      >
        <Row__StyledRow
          id="row-1"
          reverseLevel={
            Array [
              false,
              false,
              false,
              false,
              false,
            ]
          }
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "Row__StyledRow-sc-1goz0ht-0",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    [Function],
                    [Function],
                    [Function],
                    [Function],
                  ],
                },
                "displayName": "Row__StyledRow",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "Row__StyledRow-sc-1goz0ht-0",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            id="row-1"
            reverseLevel={
              Array [
                false,
                false,
                false,
                false,
                false,
              ]
            }
          >
            <div
              className="c1"
              id="row-1"
            >
              <Col
                id="col-1"
              >
                <Col__StyledCol
                  gutter={true}
                  hiddenLevel={
                    Array [
                      false,
                      false,
                      false,
                      false,
                      false,
                    ]
                  }
                  horizontalAlignLevel={
                    Array [
                      "inherit",
                      "inherit",
                      "inherit",
                      "inherit",
                      "inherit",
                    ]
                  }
                  id="col-1"
                  xs={true}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Col__StyledCol-sc-15yvjc7-0",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            [Function],
                            [Function],
                            [Function],
                          ],
                        },
                        "displayName": "Col__StyledCol",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Col__StyledCol-sc-15yvjc7-0",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    gutter={true}
                    hiddenLevel={
                      Array [
                        false,
                        false,
                        false,
                        false,
                        false,
                      ]
                    }
                    horizontalAlignLevel={
                      Array [
                        "inherit",
                        "inherit",
                        "inherit",
                        "inherit",
                        "inherit",
                      ]
                    }
                    id="col-1"
                    xs={true}
                  >
                    <div
                      className="c2"
                      id="col-1"
                    >
                      1st column content
                    </div>
                  </StyledComponent>
                </Col__StyledCol>
              </Col>
              <Col
                id="col-2"
              >
                <Col__StyledCol
                  gutter={true}
                  hiddenLevel={
                    Array [
                      false,
                      false,
                      false,
                      false,
                      false,
                    ]
                  }
                  horizontalAlignLevel={
                    Array [
                      "inherit",
                      "inherit",
                      "inherit",
                      "inherit",
                      "inherit",
                    ]
                  }
                  id="col-2"
                  xs={true}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Col__StyledCol-sc-15yvjc7-0",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            [Function],
                            [Function],
                            [Function],
                          ],
                        },
                        "displayName": "Col__StyledCol",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Col__StyledCol-sc-15yvjc7-0",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    gutter={true}
                    hiddenLevel={
                      Array [
                        false,
                        false,
                        false,
                        false,
                        false,
                      ]
                    }
                    horizontalAlignLevel={
                      Array [
                        "inherit",
                        "inherit",
                        "inherit",
                        "inherit",
                        "inherit",
                      ]
                    }
                    id="col-2"
                    xs={true}
                  >
                    <div
                      className="c2"
                      id="col-2"
                    >
                      2nd column content
                    </div>
                  </StyledComponent>
                </Col__StyledCol>
              </Col>
            </div>
          </StyledComponent>
        </Row__StyledRow>
      </Row>
    </div>
  </StyledComponent>
</FlexGrid__StyledGrid>
`;
