// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`YoutubeVideo renders 1`] = `
.c0 {
  width: 100%;
  min-width: 288px;
  outline: none;
}

.c1 {
  padding-top: 56.25%;
  position: relative;
}

.c2 {
  background-image: url(https://img.youtube.com/vi/ppF-fn37SDs/maxresdefault.jpg);
  background-size: cover;
  background-position: center;
  position: absolute;
  top: 0;
  width: 100%;
  height: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  cursor: pointer;
  fill: rgba(255,255,255,0);
  -webkit-transition: background-color 0.2s fill 0.2s;
  transition: background-color 0.2s fill 0.2s;
}

.c2 #bigButton {
  background-color: rgba(42,44,46,0.9);
  -webkit-transition: background-color 0.2s;
  transition: background-color 0.2s;
}

.c2:hover {
  fill: rgba(255,255,255,1);
  -webkit-transition: fill 0.2s;
  transition: fill 0.2s;
}

.c2:hover #bigButton {
  background-color: rgba(42,44,46,1);
  -webkit-transition: background-color 0.2s;
  transition: background-color 0.2s;
}

.c3 {
  width: 150px;
  height: 150px;
  border-radius: 50%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c4 svg>path {
  fill: inherit;
}

.c5 {
  padding-top: 2px;
}

@media (min-width:768px) {
  .c3 {
    width: 200px;
    height: 200px;
  }
}

<YoutubeVideo
  aspectRatio="16:9"
  beginMuted={false}
  defaultVolume={1}
  videoId="ppF-fn37SDs"
  videoLength={30}
>
  <YoutubeVideo__StyledPlayerContainer
    data-testid="youtubePlayer"
    id="videoPlayerContainer"
  >
    <StyledComponent
      data-testid="youtubePlayer"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "YoutubeVideo__StyledPlayerContainer-sc-2hs0xc-0",
            "isStatic": true,
            "lastClassName": "c0",
            "rules": Array [
              "width: 100%; min-width: 288px; outline: none;",
            ],
          },
          "displayName": "YoutubeVideo__StyledPlayerContainer",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "YoutubeVideo__StyledPlayerContainer-sc-2hs0xc-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      id="videoPlayerContainer"
    >
      <div
        className="c0"
        data-testid="youtubePlayer"
        id="videoPlayerContainer"
      >
        <YoutubeVideo__AspectLimiter
          data-testid="aspectLimiter"
        >
          <StyledComponent
            data-testid="aspectLimiter"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "YoutubeVideo__AspectLimiter-sc-2hs0xc-1",
                  "isStatic": true,
                  "lastClassName": "c1",
                  "rules": Array [
                    "padding-top: 56.25%; position: relative;",
                  ],
                },
                "displayName": "YoutubeVideo__AspectLimiter",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "YoutubeVideo__AspectLimiter-sc-2hs0xc-1",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c1"
              data-testid="aspectLimiter"
            >
              <VideoSplash
                onClick={[Function]}
                poster="https://img.youtube.com/vi/ppF-fn37SDs/maxresdefault.jpg"
                videoLength={30}
              >
                <VideoSplash__SplashBackground
                  aria-label="Play video. Video length is 0 minutes and 30 seconds long"
                  onClick={[Function]}
                  poster="https://img.youtube.com/vi/ppF-fn37SDs/maxresdefault.jpg"
                  role="button"
                  tabIndex="0"
                >
                  <StyledComponent
                    aria-label="Play video. Video length is 0 minutes and 30 seconds long"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "VideoSplash__SplashBackground-eou7dk-0",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            [Function],
                          ],
                        },
                        "displayName": "VideoSplash__SplashBackground",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "VideoSplash__SplashBackground-eou7dk-0",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onClick={[Function]}
                    poster="https://img.youtube.com/vi/ppF-fn37SDs/maxresdefault.jpg"
                    role="button"
                    tabIndex="0"
                  >
                    <div
                      aria-label="Play video. Video length is 0 minutes and 30 seconds long"
                      className="c2"
                      onClick={[Function]}
                      poster="https://img.youtube.com/vi/ppF-fn37SDs/maxresdefault.jpg"
                      role="button"
                      tabIndex="0"
                    >
                      <VideoSplash__BigPlayButton
                        id="bigButton"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "VideoSplash__BigPlayButton-eou7dk-1",
                                "isStatic": true,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "width: 150px; height: 150px; border-radius: 50%; display: flex; align-items: center; justify-content: center; flex-direction: column; @media (min-width: 768px) {
  width: 200px; height: 200px;
}",
                                ],
                              },
                              "displayName": "VideoSplash__BigPlayButton",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "VideoSplash__BigPlayButton-eou7dk-1",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          id="bigButton"
                        >
                          <div
                            className="c3"
                            id="bigButton"
                          >
                            <VideoSplash__PlayIconContainer>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "VideoSplash__PlayIconContainer-eou7dk-2",
                                      "isStatic": true,
                                      "lastClassName": "c4",
                                      "rules": Array [
                                        "svg>path {
  fill: inherit;
}",
                                      ],
                                    },
                                    "displayName": "VideoSplash__PlayIconContainer",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "VideoSplash__PlayIconContainer-eou7dk-2",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <span
                                  className="c4"
                                >
                                  <Play>
                                    <svg
                                      enableBackground="new 0 0 21 24"
                                      height="24px"
                                      id="Layer_1"
                                      version="1.1"
                                      viewBox="0 0 21 24"
                                      width="21px"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <g
                                        id="Page-1"
                                      >
                                        <g
                                          id="Video---Play-inactive"
                                          transform="translate(-445.000000, -222.000000)"
                                        >
                                          <path
                                            d="M446.9,223c-0.1,0-0.1,0-0.2,0.1c-0.1,0.1-0.2,0.2-0.2,0.3v21.2c0,0.1,0.1,0.3,0.2,0.3 c0.1,0.1,0.3,0.1,0.4,0l17.7-10.6c0.1-0.1,0.2-0.2,0.2-0.3c0-0.1-0.1-0.3-0.2-0.3l-17.7-10.6C447,223,446.9,223,446.9,223 M446.9,246c-0.2,0-0.5-0.1-0.7-0.2c-0.4-0.2-0.7-0.7-0.7-1.2v-21.2c0-0.5,0.3-1,0.7-1.2c0.4-0.2,1-0.2,1.4,0l17.7,10.6 c0.4,0.2,0.7,0.7,0.7,1.2c0,0.5-0.3,0.9-0.7,1.2l-17.7,10.6C447.4,245.9,447.1,246,446.9,246"
                                            fill="#FFFFFF"
                                            id="play"
                                          />
                                        </g>
                                      </g>
                                      <path
                                        d="M1.7,0.7c-0.1,0-0.1,0-0.2,0.1C1.4,0.8,1.3,1,1.3,1.1v21.7c0,0.1,0.1,0.3,0.2,0.3c0.1,0.1,0.3,0.1,0.4,0 L20,12.3c0.1-0.1,0.2-0.2,0.2-0.3c0-0.1-0.1-0.3-0.2-0.3L1.9,0.8C1.8,0.7,1.8,0.7,1.7,0.7"
                                        fill="none"
                                      />
                                    </svg>
                                  </Play>
                                </span>
                              </StyledComponent>
                            </VideoSplash__PlayIconContainer>
                            <Box
                              inline={false}
                              tag="div"
                              vertical={1}
                            >
                              <div
                                className="TDS_Box-modules__verticalPadding-1___3lZ5x"
                              >
                                <Paragraph
                                  align="center"
                                  bold={true}
                                  invert={true}
                                  size="medium"
                                >
                                  <p
                                    className="TDS_Typography-modules__wordBreak___3dmWU TDS_Spacing-modules__noSpacing___XPYDG TDS_Typography-modules__invertedColor___2axxL TDS_Typography-modules__medium___1DC1g TDS_Typography-modules__wordBreak___3dmWU TDS_Typography-modules__boldFont___2MqlI TDS_Typography-modules__wordBreak___3dmWU TDS_Paragraph-modules__centerAlign___19QxM"
                                  >
                                    Watch the video
                                  </p>
                                </Paragraph>
                              </div>
                            </Box>
                            <Box
                              inline={false}
                              tag="div"
                              vertical={1}
                            >
                              <div
                                className="TDS_Box-modules__verticalPadding-1___3lZ5x"
                              >
                                <Box
                                  between={2}
                                  inline={true}
                                  tag="div"
                                >
                                  <div
                                    className="TDS_Box-modules__betweenRightMargin-2___20pzC TDS_Box-modules__inline___jTHcz"
                                  >
                                    <VideoSplash__IconAdjust>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "VideoSplash__IconAdjust-eou7dk-3",
                                              "isStatic": true,
                                              "lastClassName": "c5",
                                              "rules": Array [
                                                "padding-top: 2px;",
                                              ],
                                            },
                                            "displayName": "VideoSplash__IconAdjust",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "VideoSplash__IconAdjust-eou7dk-3",
                                            "target": "span",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <span
                                          className="c5"
                                        >
                                          <Time
                                            size={16}
                                            variant="inverted"
                                          >
                                            <SVGIcon
                                              size={16}
                                              variant="inverted"
                                            >
                                              <i
                                                aria-hidden="true"
                                                className="TDS_Icon-modules__svgVariantInverted___qgAgj TDS_Icon-modules__svgSize16___1gZvO"
                                              >
                                                <svg
                                                  height="24"
                                                  viewBox="0 0 24 24"
                                                  width="24"
                                                  xmlns="http://www.w3.org/2000/svg"
                                                >
                                                  <defs>
                                                    <path
                                                      d="M16.5049,11.4668 C16.8189,11.4668 17.0379,11.6868 17.0379,11.9998 C17.0379,12.3138 16.8189,12.5328 16.5049,12.5328 L11.9999,12.5328 C11.6869,12.5328 11.4669,12.3138 11.4669,11.9998 L11.4669,3.8098 C11.4669,3.4958 11.6869,3.2768 11.9999,3.2768 C12.3139,3.2768 12.5329,3.4958 12.5329,3.8098 L12.5329,11.4668 L16.5049,11.4668 Z M12,22.9336 C18.029,22.9336 22.934,18.0296 22.934,11.9996 C22.934,5.9716 18.029,1.0666 12,1.0666 C5.972,1.0666 1.066,5.9716 1.066,11.9996 C1.066,18.0296 5.972,22.9336 12,22.9336 Z M12,-0.0004 C18.616,-0.0004 24,5.3836 24,11.9996 C24,18.6166 18.616,23.9996 12,23.9996 C5.383,23.9996 0,18.6166 0,11.9996 C0,5.3836 5.383,-0.0004 12,-0.0004 Z"
                                                      id="time-a"
                                                    />
                                                  </defs>
                                                  <use
                                                    fillRule="evenodd"
                                                    xlinkHref="#time-a"
                                                  />
                                                </svg>
                                              </i>
                                            </SVGIcon>
                                          </Time>
                                        </span>
                                      </StyledComponent>
                                    </VideoSplash__IconAdjust>
                                    <Paragraph
                                      align="left"
                                      bold={false}
                                      data-testid="timestamp"
                                      invert={true}
                                      size="medium"
                                    >
                                      <p
                                        className="TDS_Typography-modules__wordBreak___3dmWU TDS_Spacing-modules__noSpacing___XPYDG TDS_Typography-modules__invertedColor___2axxL TDS_Typography-modules__medium___1DC1g TDS_Typography-modules__wordBreak___3dmWU TDS_Typography-modules__mediumFont___2ULml TDS_Paragraph-modules__leftAlign___KgwhE"
                                        data-testid="timestamp"
                                      >
                                        0:30
                                      </p>
                                    </Paragraph>
                                  </div>
                                </Box>
                              </div>
                            </Box>
                          </div>
                        </StyledComponent>
                      </VideoSplash__BigPlayButton>
                    </div>
                  </StyledComponent>
                </VideoSplash__SplashBackground>
              </VideoSplash>
            </div>
          </StyledComponent>
        </YoutubeVideo__AspectLimiter>
      </div>
    </StyledComponent>
  </YoutubeVideo__StyledPlayerContainer>
</YoutubeVideo>
`;
