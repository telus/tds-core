// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Spinner does not render a large secondary spinner 1`] = `
.c0 {
  color: #2a2c2e;
  word-wrap: break-word;
  font-size: 0.875rem;
  -webkit-letter-spacing: -0.6px;
  -moz-letter-spacing: -0.6px;
  -ms-letter-spacing: -0.6px;
  letter-spacing: -0.6px;
  line-height: 1.42857;
  font-weight: 500;
}

.c0 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

<div
  aria-live="assertive"
  className="relative inline"
  data-testid="container"
>
  <SpinnerSvg
    a11yLabel="Loading content"
    overlay={true}
    size="large"
    tip="Loading content"
    variant="secondary"
  >
    <div
      className="container centered"
      data-testid="spinner"
    >
      <svg
        aria-labelledby="spinner-title-5"
        aria-live="assertive"
        className="largeSvg"
        data-testid="svg"
        height="100"
        role="alert"
        viewBox="0 0 100 100"
        width="100"
      >
        <title
          id="spinner-title-5"
        >
          Loading content
        </title>
        <circle
          className="primaryCircle"
          cx="50"
          cy="50"
          fill="none"
          r="20"
          strokeDasharray="89, 200"
          strokeDashoffset="0"
          strokeLinecap="round"
          strokeWidth="4"
        />
      </svg>
      <div
        className="tip"
      >
        <Text
          block={false}
          bold={false}
          invert={false}
          size="small"
        >
          <Text__StyledText
            block={false}
            bold={false}
            invert={false}
            size="small"
          >
            <StyledComponent
              block={false}
              bold={false}
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "Text__StyledText-sc-1m0rr67-0",
                    "isStatic": false,
                    "lastClassName": "c0",
                    "rules": Array [
                      [Function],
                      [Function],
                      [Function],
                      [Function],
                      [Function],
                      "sup {",
                      "top: -0.5em;",
                      "font-size: 0.875rem;",
                      "position: relative;",
                      "vertical-align: baseline;",
                      "padding-left: 0.1em;",
                      "}",
                    ],
                  },
                  "displayName": "Text__StyledText",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "Text__StyledText-sc-1m0rr67-0",
                  "target": "span",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              invert={false}
              size="small"
            >
              <span
                className="c0"
                size="small"
              >
                Loading content
              </span>
            </StyledComponent>
          </Text__StyledText>
        </Text>
      </div>
    </div>
  </SpinnerSvg>
  <div
    className="overlay"
    data-testid="overlay"
  />
  <div
    aira-hidden="true"
    className="opaque"
    onFocus={[Function]}
  >
    <span>
      Overlay me with the spinner
    </span>
  </div>
</div>
`;

exports[`Spinner renders 1`] = `
.c0 {
  color: #2a2c2e;
  word-wrap: break-word;
  font-size: 0.875rem;
  -webkit-letter-spacing: -0.6px;
  -moz-letter-spacing: -0.6px;
  -ms-letter-spacing: -0.6px;
  letter-spacing: -0.6px;
  line-height: 1.42857;
  font-weight: 500;
}

.c0 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

<div
  class="container"
  data-testid="spinner"
>
  <svg
    aria-labelledby="spinner-title-1"
    aria-live="assertive"
    class="largeSvg"
    data-testid="svg"
    height="100"
    role="alert"
    viewBox="0 0 100 100"
    width="100"
  >
    <title
      id="spinner-title-1"
    >
      Loading content
    </title>
    <circle
      class="primaryCircle"
      cx="50"
      cy="50"
      fill="none"
      r="20"
      stroke-dasharray="89, 200"
      stroke-dashoffset="0"
      stroke-linecap="round"
      stroke-width="4"
    />
  </svg>
  <div
    class="tip"
  >
    <span
      class="c0"
    >
      Loading content
    </span>
  </div>
</div>
`;

exports[`Spinner renders a small secondary spinner 1`] = `
<div
  aria-live="assertive"
  className="relative inline"
  data-testid="container"
>
  <SpinnerSvg
    a11yLabel="Loading content"
    overlay={true}
    size="small"
    variant="secondary"
  >
    <div
      className="container centered"
      data-testid="spinner"
    >
      <svg
        aria-labelledby="spinner-title-4"
        aria-live="assertive"
        className="smallSvg"
        data-testid="svg"
        height="50"
        role="alert"
        viewBox="0 0 100 100"
        width="50"
      >
        <title
          id="spinner-title-4"
        >
          Loading content
        </title>
        <circle
          className="secondaryCircle"
          cx="50"
          cy="50"
          fill="none"
          r="20"
          strokeDasharray="89, 200"
          strokeDashoffset="0"
          strokeLinecap="round"
          strokeWidth="4"
        />
      </svg>
    </div>
  </SpinnerSvg>
  <div
    className="overlay"
    data-testid="overlay"
  />
  <div
    aira-hidden="true"
    className="opaque"
    onFocus={[Function]}
  >
    <span>
      Overlay me with the spinner
    </span>
  </div>
</div>
`;

exports[`Spinner renders a small spinner 1`] = `
<div
  aria-live="assertive"
  className="relative inline"
  data-testid="container"
>
  <SpinnerSvg
    a11yLabel="Loading content"
    overlay={true}
    size="small"
    variant="primary"
  >
    <div
      className="container centered"
      data-testid="spinner"
    >
      <svg
        aria-labelledby="spinner-title-3"
        aria-live="assertive"
        className="smallSvg"
        data-testid="svg"
        height="50"
        role="alert"
        viewBox="0 0 100 100"
        width="50"
      >
        <title
          id="spinner-title-3"
        >
          Loading content
        </title>
        <circle
          className="primaryCircle"
          cx="50"
          cy="50"
          fill="none"
          r="20"
          strokeDasharray="89, 200"
          strokeDashoffset="0"
          strokeLinecap="round"
          strokeWidth="4"
        />
      </svg>
    </div>
  </SpinnerSvg>
  <div
    className="overlay"
    data-testid="overlay"
  />
  <div
    aira-hidden="true"
    className="opaque"
    onFocus={[Function]}
  >
    <span>
      Overlay me with the spinner
    </span>
  </div>
</div>
`;

exports[`Spinner renders with children 1`] = `
.c0 {
  color: #2a2c2e;
  word-wrap: break-word;
  font-size: 0.875rem;
  -webkit-letter-spacing: -0.6px;
  -moz-letter-spacing: -0.6px;
  -ms-letter-spacing: -0.6px;
  letter-spacing: -0.6px;
  line-height: 1.42857;
  font-weight: 500;
}

.c0 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

<div
  aria-live="assertive"
  class="relative"
  data-testid="container"
>
  <div
    class="container centered"
    data-testid="spinner"
  >
    <svg
      aria-labelledby="spinner-title-2"
      aria-live="assertive"
      class="largeSvg"
      data-testid="svg"
      height="100"
      role="alert"
      viewBox="0 0 100 100"
      width="100"
    >
      <title
        id="spinner-title-2"
      >
        Loading content
      </title>
      <circle
        class="primaryCircle"
        cx="50"
        cy="50"
        fill="none"
        r="20"
        stroke-dasharray="89, 200"
        stroke-dashoffset="0"
        stroke-linecap="round"
        stroke-width="4"
      />
    </svg>
    <div
      class="tip"
    >
      <span
        class="c0"
      >
        Loading content
      </span>
    </div>
  </div>
  <div
    class="overlay"
    data-testid="overlay"
  />
  <div
    aira-hidden="true"
    class="opaque"
  >
    <span>
      Overlay me with the spinner
    </span>
  </div>
</div>
`;
