// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Spinner does not render a large secondary spinner 1`] = `
Array [
  .c5 {
  color: #2a2c2e;
  word-wrap: break-word;
  font-size: 0.875rem;
  -webkit-letter-spacing: -0.6px;
  -moz-letter-spacing: -0.6px;
  -ms-letter-spacing: -0.6px;
  letter-spacing: -0.6px;
  line-height: 1.42857;
  font-weight: 500;
}

.c5 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

.c1 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
  z-index: 1600;
}

.c2 {
  -webkit-animation: cZxgpV 1.8s linear infinite;
  animation: cZxgpV 1.8s linear infinite;
}

.c3 {
  -webkit-animation: drFgOE 1.7s ease-in-out infinite 0s;
  animation: drFgOE 1.7s ease-in-out infinite 0s;
  stroke: #2B8000;
}

.c4 {
  margin-top: -1.5rem;
}

.c0 {
  position: relative;
  display: block;
}

.c6 {
  position: absolute;
  width: 100%;
  height: 100%;
  z-index: 1400;
}

.c7 {
  opacity: 0.06;
}

@media (min-width:768px) {
  .c0 {
    display: inline-block;
  }
}

<Spinner__SpinnerContainer
    aria-live="assertive"
    data-testid="container"
    fullScreen={false}
    inline={true}
  >
    <StyledComponent
      aria-live="assertive"
      data-testid="container"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Spinner__SpinnerContainer-sc-12sh5b7-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              [Function],
            ],
          },
          "displayName": "Spinner__SpinnerContainer",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Spinner__SpinnerContainer-sc-12sh5b7-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      fullScreen={false}
      inline={true}
    >
      <div
        aria-live="assertive"
        className="c0"
        data-testid="container"
      >
        <SpinnerSvg
          a11yLabel="Loading content"
          overlay={true}
          size="large"
          tip="Loading content"
          variant="secondary"
        >
          <SpinnerSvg__SvgContainer
            data-testid="spinner"
            overlay={true}
          >
            <StyledComponent
              data-testid="spinner"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "SpinnerSvg__SvgContainer-sc-6yts5w-0",
                    "isStatic": false,
                    "lastClassName": "c1",
                    "rules": Array [
                      [Function],
                    ],
                  },
                  "displayName": "SpinnerSvg__SvgContainer",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "SpinnerSvg__SvgContainer-sc-6yts5w-0",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              overlay={true}
            >
              <div
                className="c1"
                data-testid="spinner"
              >
                <SpinnerSvg__StyledSvg
                  aria-labelledby="spinner-title-5"
                  aria-live="assertive"
                  data-testid="svg"
                  height="100"
                  role="alert"
                  viewBox="0 0 100 100"
                  width="100"
                >
                  <StyledComponent
                    aria-labelledby="spinner-title-5"
                    aria-live="assertive"
                    data-testid="svg"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "SpinnerSvg__StyledSvg-sc-6yts5w-1",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "animation:",
                            Keyframes {
                              "id": "sc-keyframes-cZxgpV",
                              "inject": [Function],
                              "name": "cZxgpV",
                              "rules": Array [
                                "@-webkit-keyframes cZxgpV{100%{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}",
                                "@keyframes cZxgpV{100%{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}",
                              ],
                              "toString": [Function],
                            },
                            " 1.8s linear infinite;",
                            [Function],
                            " ",
                            [Function],
                          ],
                        },
                        "displayName": "SpinnerSvg__StyledSvg",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "SpinnerSvg__StyledSvg-sc-6yts5w-1",
                        "target": "svg",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    height="100"
                    role="alert"
                    viewBox="0 0 100 100"
                    width="100"
                  >
                    <svg
                      aria-labelledby="spinner-title-5"
                      aria-live="assertive"
                      className="c2"
                      data-testid="svg"
                      height="100"
                      role="alert"
                      viewBox="0 0 100 100"
                      width="100"
                    >
                      <title
                        id="spinner-title-5"
                      >
                        Loading content
                      </title>
                      <SpinnerSvg__SvgCircle
                        cx="50"
                        cy="50"
                        fill="none"
                        r="20"
                        strokeDasharray="89, 200"
                        strokeDashoffset="0"
                        strokeLinecap="round"
                        strokeWidth="4"
                        variant="primary"
                      >
                        <StyledComponent
                          cx="50"
                          cy="50"
                          fill="none"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "SpinnerSvg__SvgCircle-sc-6yts5w-2",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "animation:",
                                  Keyframes {
                                    "id": "sc-keyframes-drFgOE",
                                    "inject": [Function],
                                    "name": "drFgOE",
                                    "rules": Array [
                                      "@-webkit-keyframes drFgOE{0%{stroke-dasharray:1,200;stroke-dashoffset:0;}50%{stroke-dasharray:89,200;stroke-dashoffset:-35;}100%{stroke-dasharray:89,200;stroke-dashoffset:-124;}}",
                                      "@keyframes drFgOE{0%{stroke-dasharray:1,200;stroke-dashoffset:0;}50%{stroke-dasharray:89,200;stroke-dashoffset:-35;}100%{stroke-dasharray:89,200;stroke-dashoffset:-124;}}",
                                    ],
                                    "toString": [Function],
                                  },
                                  " 1.7s ease-in-out infinite 0s;",
                                  [Function],
                                  " ",
                                  [Function],
                                ],
                              },
                              "displayName": "SpinnerSvg__SvgCircle",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "SpinnerSvg__SvgCircle-sc-6yts5w-2",
                              "target": "circle",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          r="20"
                          strokeDasharray="89, 200"
                          strokeDashoffset="0"
                          strokeLinecap="round"
                          strokeWidth="4"
                          variant="primary"
                        >
                          <circle
                            className="c3"
                            cx="50"
                            cy="50"
                            fill="none"
                            r="20"
                            strokeDasharray="89, 200"
                            strokeDashoffset="0"
                            strokeLinecap="round"
                            strokeWidth="4"
                          />
                        </StyledComponent>
                      </SpinnerSvg__SvgCircle>
                    </svg>
                  </StyledComponent>
                </SpinnerSvg__StyledSvg>
                <SpinnerSvg__TipContainer
                  tabIndex="-1"
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "SpinnerSvg__TipContainer-sc-6yts5w-3",
                          "isStatic": true,
                          "lastClassName": "c4",
                          "rules": Array [
                            "margin-top: -1.5rem;",
                          ],
                        },
                        "displayName": "SpinnerSvg__TipContainer",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "SpinnerSvg__TipContainer-sc-6yts5w-3",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    tabIndex="-1"
                  >
                    <div
                      className="c4"
                      tabIndex="-1"
                    >
                      <Text
                        block={false}
                        bold={false}
                        invert={false}
                        size="small"
                      >
                        <Text__StyledText
                          block={false}
                          bold={false}
                          invert={false}
                          size="small"
                        >
                          <StyledComponent
                            block={false}
                            bold={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "Text__StyledText-sc-1m0rr67-0",
                                  "isStatic": false,
                                  "lastClassName": "c5",
                                  "rules": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    "sup {",
                                    "top: -0.5em;",
                                    "font-size: 0.875rem;",
                                    "position: relative;",
                                    "vertical-align: baseline;",
                                    "padding-left: 0.1em;",
                                    "}",
                                  ],
                                },
                                "displayName": "Text__StyledText",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "Text__StyledText-sc-1m0rr67-0",
                                "target": "span",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            invert={false}
                            size="small"
                          >
                            <span
                              className="c5"
                              size="small"
                            >
                              Loading content
                            </span>
                          </StyledComponent>
                        </Text__StyledText>
                      </Text>
                    </div>
                  </StyledComponent>
                </SpinnerSvg__TipContainer>
              </div>
            </StyledComponent>
          </SpinnerSvg__SvgContainer>
        </SpinnerSvg>
        <Spinner__ContentOverlay
          data-testid="overlay"
        >
          <StyledComponent
            data-testid="overlay"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "Spinner__ContentOverlay-sc-12sh5b7-1",
                  "isStatic": true,
                  "lastClassName": "c6",
                  "rules": Array [
                    "position: absolute;",
                    "width: 100%;",
                    "height: 100%;",
                    "z-index: 1400;",
                  ],
                },
                "displayName": "Spinner__ContentOverlay",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "Spinner__ContentOverlay-sc-12sh5b7-1",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c6"
              data-testid="overlay"
            />
          </StyledComponent>
        </Spinner__ContentOverlay>
        <Spinner__OpaqueContainer
          inert="true"
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "Spinner__OpaqueContainer-sc-12sh5b7-3",
                  "isStatic": true,
                  "lastClassName": "c7",
                  "rules": Array [
                    "opacity: 0.06;",
                  ],
                },
                "displayName": "Spinner__OpaqueContainer",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "Spinner__OpaqueContainer-sc-12sh5b7-3",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            inert="true"
          >
            <div
              className="c7"
            >
              <span
                aria-hidden="true"
                key=".0"
                tabIndex="-1"
              >
                Overlay me with the spinner
              </span>
            </div>
          </StyledComponent>
        </Spinner__OpaqueContainer>
      </div>
    </StyledComponent>
  </Spinner__SpinnerContainer>,
  .c5 {
  color: #2a2c2e;
  word-wrap: break-word;
  font-size: 0.875rem;
  -webkit-letter-spacing: -0.6px;
  -moz-letter-spacing: -0.6px;
  -ms-letter-spacing: -0.6px;
  letter-spacing: -0.6px;
  line-height: 1.42857;
  font-weight: 500;
}

.c5 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

.c1 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
  z-index: 1600;
}

.c2 {
  -webkit-animation: cZxgpV 1.8s linear infinite;
  animation: cZxgpV 1.8s linear infinite;
}

.c3 {
  -webkit-animation: drFgOE 1.7s ease-in-out infinite 0s;
  animation: drFgOE 1.7s ease-in-out infinite 0s;
  stroke: #2B8000;
}

.c4 {
  margin-top: -1.5rem;
}

.c0 {
  position: relative;
  display: block;
}

.c6 {
  position: absolute;
  width: 100%;
  height: 100%;
  z-index: 1400;
}

.c7 {
  opacity: 0.06;
}

@media (min-width:768px) {
  .c0 {
    display: inline-block;
  }
}

<StyledComponent
    aria-live="assertive"
    data-testid="container"
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "Spinner__SpinnerContainer-sc-12sh5b7-0",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            [Function],
          ],
        },
        "displayName": "Spinner__SpinnerContainer",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "Spinner__SpinnerContainer-sc-12sh5b7-0",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
    fullScreen={false}
    inline={true}
  >
    <div
      aria-live="assertive"
      className="c0"
      data-testid="container"
    >
      <SpinnerSvg
        a11yLabel="Loading content"
        overlay={true}
        size="large"
        tip="Loading content"
        variant="secondary"
      >
        <SpinnerSvg__SvgContainer
          data-testid="spinner"
          overlay={true}
        >
          <StyledComponent
            data-testid="spinner"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "SpinnerSvg__SvgContainer-sc-6yts5w-0",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    [Function],
                  ],
                },
                "displayName": "SpinnerSvg__SvgContainer",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "SpinnerSvg__SvgContainer-sc-6yts5w-0",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            overlay={true}
          >
            <div
              className="c1"
              data-testid="spinner"
            >
              <SpinnerSvg__StyledSvg
                aria-labelledby="spinner-title-5"
                aria-live="assertive"
                data-testid="svg"
                height="100"
                role="alert"
                viewBox="0 0 100 100"
                width="100"
              >
                <StyledComponent
                  aria-labelledby="spinner-title-5"
                  aria-live="assertive"
                  data-testid="svg"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "SpinnerSvg__StyledSvg-sc-6yts5w-1",
                        "isStatic": false,
                        "lastClassName": "c2",
                        "rules": Array [
                          "animation:",
                          Keyframes {
                            "id": "sc-keyframes-cZxgpV",
                            "inject": [Function],
                            "name": "cZxgpV",
                            "rules": Array [
                              "@-webkit-keyframes cZxgpV{100%{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}",
                              "@keyframes cZxgpV{100%{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}",
                            ],
                            "toString": [Function],
                          },
                          " 1.8s linear infinite;",
                          [Function],
                          " ",
                          [Function],
                        ],
                      },
                      "displayName": "SpinnerSvg__StyledSvg",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "SpinnerSvg__StyledSvg-sc-6yts5w-1",
                      "target": "svg",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  height="100"
                  role="alert"
                  viewBox="0 0 100 100"
                  width="100"
                >
                  <svg
                    aria-labelledby="spinner-title-5"
                    aria-live="assertive"
                    className="c2"
                    data-testid="svg"
                    height="100"
                    role="alert"
                    viewBox="0 0 100 100"
                    width="100"
                  >
                    <title
                      id="spinner-title-5"
                    >
                      Loading content
                    </title>
                    <SpinnerSvg__SvgCircle
                      cx="50"
                      cy="50"
                      fill="none"
                      r="20"
                      strokeDasharray="89, 200"
                      strokeDashoffset="0"
                      strokeLinecap="round"
                      strokeWidth="4"
                      variant="primary"
                    >
                      <StyledComponent
                        cx="50"
                        cy="50"
                        fill="none"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "SpinnerSvg__SvgCircle-sc-6yts5w-2",
                              "isStatic": false,
                              "lastClassName": "c3",
                              "rules": Array [
                                "animation:",
                                Keyframes {
                                  "id": "sc-keyframes-drFgOE",
                                  "inject": [Function],
                                  "name": "drFgOE",
                                  "rules": Array [
                                    "@-webkit-keyframes drFgOE{0%{stroke-dasharray:1,200;stroke-dashoffset:0;}50%{stroke-dasharray:89,200;stroke-dashoffset:-35;}100%{stroke-dasharray:89,200;stroke-dashoffset:-124;}}",
                                    "@keyframes drFgOE{0%{stroke-dasharray:1,200;stroke-dashoffset:0;}50%{stroke-dasharray:89,200;stroke-dashoffset:-35;}100%{stroke-dasharray:89,200;stroke-dashoffset:-124;}}",
                                  ],
                                  "toString": [Function],
                                },
                                " 1.7s ease-in-out infinite 0s;",
                                [Function],
                                " ",
                                [Function],
                              ],
                            },
                            "displayName": "SpinnerSvg__SvgCircle",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "SpinnerSvg__SvgCircle-sc-6yts5w-2",
                            "target": "circle",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        r="20"
                        strokeDasharray="89, 200"
                        strokeDashoffset="0"
                        strokeLinecap="round"
                        strokeWidth="4"
                        variant="primary"
                      >
                        <circle
                          className="c3"
                          cx="50"
                          cy="50"
                          fill="none"
                          r="20"
                          strokeDasharray="89, 200"
                          strokeDashoffset="0"
                          strokeLinecap="round"
                          strokeWidth="4"
                        />
                      </StyledComponent>
                    </SpinnerSvg__SvgCircle>
                  </svg>
                </StyledComponent>
              </SpinnerSvg__StyledSvg>
              <SpinnerSvg__TipContainer
                tabIndex="-1"
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "SpinnerSvg__TipContainer-sc-6yts5w-3",
                        "isStatic": true,
                        "lastClassName": "c4",
                        "rules": Array [
                          "margin-top: -1.5rem;",
                        ],
                      },
                      "displayName": "SpinnerSvg__TipContainer",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "SpinnerSvg__TipContainer-sc-6yts5w-3",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  tabIndex="-1"
                >
                  <div
                    className="c4"
                    tabIndex="-1"
                  >
                    <Text
                      block={false}
                      bold={false}
                      invert={false}
                      size="small"
                    >
                      <Text__StyledText
                        block={false}
                        bold={false}
                        invert={false}
                        size="small"
                      >
                        <StyledComponent
                          block={false}
                          bold={false}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Text__StyledText-sc-1m0rr67-0",
                                "isStatic": false,
                                "lastClassName": "c5",
                                "rules": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  "sup {",
                                  "top: -0.5em;",
                                  "font-size: 0.875rem;",
                                  "position: relative;",
                                  "vertical-align: baseline;",
                                  "padding-left: 0.1em;",
                                  "}",
                                ],
                              },
                              "displayName": "Text__StyledText",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "Text__StyledText-sc-1m0rr67-0",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          invert={false}
                          size="small"
                        >
                          <span
                            className="c5"
                            size="small"
                          >
                            Loading content
                          </span>
                        </StyledComponent>
                      </Text__StyledText>
                    </Text>
                  </div>
                </StyledComponent>
              </SpinnerSvg__TipContainer>
            </div>
          </StyledComponent>
        </SpinnerSvg__SvgContainer>
      </SpinnerSvg>
      <Spinner__ContentOverlay
        data-testid="overlay"
      >
        <StyledComponent
          data-testid="overlay"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "Spinner__ContentOverlay-sc-12sh5b7-1",
                "isStatic": true,
                "lastClassName": "c6",
                "rules": Array [
                  "position: absolute;",
                  "width: 100%;",
                  "height: 100%;",
                  "z-index: 1400;",
                ],
              },
              "displayName": "Spinner__ContentOverlay",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "Spinner__ContentOverlay-sc-12sh5b7-1",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div
            className="c6"
            data-testid="overlay"
          />
        </StyledComponent>
      </Spinner__ContentOverlay>
      <Spinner__OpaqueContainer
        inert="true"
      >
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "Spinner__OpaqueContainer-sc-12sh5b7-3",
                "isStatic": true,
                "lastClassName": "c7",
                "rules": Array [
                  "opacity: 0.06;",
                ],
              },
              "displayName": "Spinner__OpaqueContainer",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "Spinner__OpaqueContainer-sc-12sh5b7-3",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          inert="true"
        >
          <div
            className="c7"
          >
            <span
              aria-hidden="true"
              key=".0"
              tabIndex="-1"
            >
              Overlay me with the spinner
            </span>
          </div>
        </StyledComponent>
      </Spinner__OpaqueContainer>
    </div>
  </StyledComponent>,
  .c5 {
  color: #2a2c2e;
  word-wrap: break-word;
  font-size: 0.875rem;
  -webkit-letter-spacing: -0.6px;
  -moz-letter-spacing: -0.6px;
  -ms-letter-spacing: -0.6px;
  letter-spacing: -0.6px;
  line-height: 1.42857;
  font-weight: 500;
}

.c5 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

.c1 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
  z-index: 1600;
}

.c2 {
  -webkit-animation: cZxgpV 1.8s linear infinite;
  animation: cZxgpV 1.8s linear infinite;
}

.c3 {
  -webkit-animation: drFgOE 1.7s ease-in-out infinite 0s;
  animation: drFgOE 1.7s ease-in-out infinite 0s;
  stroke: #2B8000;
}

.c4 {
  margin-top: -1.5rem;
}

.c0 {
  position: relative;
  display: block;
}

.c6 {
  position: absolute;
  width: 100%;
  height: 100%;
  z-index: 1400;
}

.c7 {
  opacity: 0.06;
}

@media (min-width:768px) {
  .c0 {
    display: inline-block;
  }
}

<div
    aria-live="assertive"
    className="c0"
    data-testid="container"
  >
    <SpinnerSvg
      a11yLabel="Loading content"
      overlay={true}
      size="large"
      tip="Loading content"
      variant="secondary"
    >
      <SpinnerSvg__SvgContainer
        data-testid="spinner"
        overlay={true}
      >
        <StyledComponent
          data-testid="spinner"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "SpinnerSvg__SvgContainer-sc-6yts5w-0",
                "isStatic": false,
                "lastClassName": "c1",
                "rules": Array [
                  [Function],
                ],
              },
              "displayName": "SpinnerSvg__SvgContainer",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "SpinnerSvg__SvgContainer-sc-6yts5w-0",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          overlay={true}
        >
          <div
            className="c1"
            data-testid="spinner"
          >
            <SpinnerSvg__StyledSvg
              aria-labelledby="spinner-title-5"
              aria-live="assertive"
              data-testid="svg"
              height="100"
              role="alert"
              viewBox="0 0 100 100"
              width="100"
            >
              <StyledComponent
                aria-labelledby="spinner-title-5"
                aria-live="assertive"
                data-testid="svg"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "SpinnerSvg__StyledSvg-sc-6yts5w-1",
                      "isStatic": false,
                      "lastClassName": "c2",
                      "rules": Array [
                        "animation:",
                        Keyframes {
                          "id": "sc-keyframes-cZxgpV",
                          "inject": [Function],
                          "name": "cZxgpV",
                          "rules": Array [
                            "@-webkit-keyframes cZxgpV{100%{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}",
                            "@keyframes cZxgpV{100%{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}",
                          ],
                          "toString": [Function],
                        },
                        " 1.8s linear infinite;",
                        [Function],
                        " ",
                        [Function],
                      ],
                    },
                    "displayName": "SpinnerSvg__StyledSvg",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "SpinnerSvg__StyledSvg-sc-6yts5w-1",
                    "target": "svg",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                height="100"
                role="alert"
                viewBox="0 0 100 100"
                width="100"
              >
                <svg
                  aria-labelledby="spinner-title-5"
                  aria-live="assertive"
                  className="c2"
                  data-testid="svg"
                  height="100"
                  role="alert"
                  viewBox="0 0 100 100"
                  width="100"
                >
                  <title
                    id="spinner-title-5"
                  >
                    Loading content
                  </title>
                  <SpinnerSvg__SvgCircle
                    cx="50"
                    cy="50"
                    fill="none"
                    r="20"
                    strokeDasharray="89, 200"
                    strokeDashoffset="0"
                    strokeLinecap="round"
                    strokeWidth="4"
                    variant="primary"
                  >
                    <StyledComponent
                      cx="50"
                      cy="50"
                      fill="none"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "SpinnerSvg__SvgCircle-sc-6yts5w-2",
                            "isStatic": false,
                            "lastClassName": "c3",
                            "rules": Array [
                              "animation:",
                              Keyframes {
                                "id": "sc-keyframes-drFgOE",
                                "inject": [Function],
                                "name": "drFgOE",
                                "rules": Array [
                                  "@-webkit-keyframes drFgOE{0%{stroke-dasharray:1,200;stroke-dashoffset:0;}50%{stroke-dasharray:89,200;stroke-dashoffset:-35;}100%{stroke-dasharray:89,200;stroke-dashoffset:-124;}}",
                                  "@keyframes drFgOE{0%{stroke-dasharray:1,200;stroke-dashoffset:0;}50%{stroke-dasharray:89,200;stroke-dashoffset:-35;}100%{stroke-dasharray:89,200;stroke-dashoffset:-124;}}",
                                ],
                                "toString": [Function],
                              },
                              " 1.7s ease-in-out infinite 0s;",
                              [Function],
                              " ",
                              [Function],
                            ],
                          },
                          "displayName": "SpinnerSvg__SvgCircle",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "SpinnerSvg__SvgCircle-sc-6yts5w-2",
                          "target": "circle",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      r="20"
                      strokeDasharray="89, 200"
                      strokeDashoffset="0"
                      strokeLinecap="round"
                      strokeWidth="4"
                      variant="primary"
                    >
                      <circle
                        className="c3"
                        cx="50"
                        cy="50"
                        fill="none"
                        r="20"
                        strokeDasharray="89, 200"
                        strokeDashoffset="0"
                        strokeLinecap="round"
                        strokeWidth="4"
                      />
                    </StyledComponent>
                  </SpinnerSvg__SvgCircle>
                </svg>
              </StyledComponent>
            </SpinnerSvg__StyledSvg>
            <SpinnerSvg__TipContainer
              tabIndex="-1"
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "SpinnerSvg__TipContainer-sc-6yts5w-3",
                      "isStatic": true,
                      "lastClassName": "c4",
                      "rules": Array [
                        "margin-top: -1.5rem;",
                      ],
                    },
                    "displayName": "SpinnerSvg__TipContainer",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "SpinnerSvg__TipContainer-sc-6yts5w-3",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                tabIndex="-1"
              >
                <div
                  className="c4"
                  tabIndex="-1"
                >
                  <Text
                    block={false}
                    bold={false}
                    invert={false}
                    size="small"
                  >
                    <Text__StyledText
                      block={false}
                      bold={false}
                      invert={false}
                      size="small"
                    >
                      <StyledComponent
                        block={false}
                        bold={false}
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Text__StyledText-sc-1m0rr67-0",
                              "isStatic": false,
                              "lastClassName": "c5",
                              "rules": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                "sup {",
                                "top: -0.5em;",
                                "font-size: 0.875rem;",
                                "position: relative;",
                                "vertical-align: baseline;",
                                "padding-left: 0.1em;",
                                "}",
                              ],
                            },
                            "displayName": "Text__StyledText",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Text__StyledText-sc-1m0rr67-0",
                            "target": "span",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        invert={false}
                        size="small"
                      >
                        <span
                          className="c5"
                          size="small"
                        >
                          Loading content
                        </span>
                      </StyledComponent>
                    </Text__StyledText>
                  </Text>
                </div>
              </StyledComponent>
            </SpinnerSvg__TipContainer>
          </div>
        </StyledComponent>
      </SpinnerSvg__SvgContainer>
    </SpinnerSvg>
    <Spinner__ContentOverlay
      data-testid="overlay"
    >
      <StyledComponent
        data-testid="overlay"
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Spinner__ContentOverlay-sc-12sh5b7-1",
              "isStatic": true,
              "lastClassName": "c6",
              "rules": Array [
                "position: absolute;",
                "width: 100%;",
                "height: 100%;",
                "z-index: 1400;",
              ],
            },
            "displayName": "Spinner__ContentOverlay",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Spinner__ContentOverlay-sc-12sh5b7-1",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className="c6"
          data-testid="overlay"
        />
      </StyledComponent>
    </Spinner__ContentOverlay>
    <Spinner__OpaqueContainer
      inert="true"
    >
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Spinner__OpaqueContainer-sc-12sh5b7-3",
              "isStatic": true,
              "lastClassName": "c7",
              "rules": Array [
                "opacity: 0.06;",
              ],
            },
            "displayName": "Spinner__OpaqueContainer",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Spinner__OpaqueContainer-sc-12sh5b7-3",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        inert="true"
      >
        <div
          className="c7"
        >
          <span
            aria-hidden="true"
            key=".0"
            tabIndex="-1"
          >
            Overlay me with the spinner
          </span>
        </div>
      </StyledComponent>
    </Spinner__OpaqueContainer>
  </div>,
]
`;

exports[`Spinner overlaying content can be fullscreen 1`] = `
<Spinner__FullscreenOverlay
  data-testid="overlay"
>
  <Spinner__SpinnerContainer
    aria-live="assertive"
    data-testid="container"
    fullScreen={true}
    inline={false}
  >
    <SpinnerSvg
      a11yLabel="Loading page"
      overlay={true}
      size="large"
      tip="Loading page"
      variant="primary"
    />
  </Spinner__SpinnerContainer>
</Spinner__FullscreenOverlay>
`;

exports[`Spinner overlaying content places the spinner on top of the content while spinning 1`] = `
Array [
  .c4 {
  color: #2a2c2e;
  word-wrap: break-word;
  font-size: 0.875rem;
  -webkit-letter-spacing: -0.6px;
  -moz-letter-spacing: -0.6px;
  -ms-letter-spacing: -0.6px;
  letter-spacing: -0.6px;
  line-height: 1.42857;
  font-weight: 500;
}

.c4 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
  z-index: 1600;
}

.c1 {
  -webkit-animation: cZxgpV 1.8s linear infinite;
  animation: cZxgpV 1.8s linear infinite;
}

.c2 {
  -webkit-animation: drFgOE 1.7s ease-in-out infinite 0s;
  animation: drFgOE 1.7s ease-in-out infinite 0s;
  stroke: #2B8000;
}

.c3 {
  margin-top: -1.5rem;
}

<SpinnerSvg__SvgContainer
    data-testid="spinner"
    overlay={true}
  >
    <StyledComponent
      data-testid="spinner"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "SpinnerSvg__SvgContainer-sc-6yts5w-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              [Function],
            ],
          },
          "displayName": "SpinnerSvg__SvgContainer",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "SpinnerSvg__SvgContainer-sc-6yts5w-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      overlay={true}
    >
      <div
        className="c0"
        data-testid="spinner"
      >
        <SpinnerSvg__StyledSvg
          aria-labelledby="spinner-title-9"
          aria-live="assertive"
          data-testid="svg"
          height="100"
          role="alert"
          viewBox="0 0 100 100"
          width="100"
        >
          <StyledComponent
            aria-labelledby="spinner-title-9"
            aria-live="assertive"
            data-testid="svg"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "SpinnerSvg__StyledSvg-sc-6yts5w-1",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "animation:",
                    Keyframes {
                      "id": "sc-keyframes-cZxgpV",
                      "inject": [Function],
                      "name": "cZxgpV",
                      "rules": Array [
                        "@-webkit-keyframes cZxgpV{100%{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}",
                        "@keyframes cZxgpV{100%{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}",
                      ],
                      "toString": [Function],
                    },
                    " 1.8s linear infinite;",
                    [Function],
                    " ",
                    [Function],
                  ],
                },
                "displayName": "SpinnerSvg__StyledSvg",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "SpinnerSvg__StyledSvg-sc-6yts5w-1",
                "target": "svg",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            height="100"
            role="alert"
            viewBox="0 0 100 100"
            width="100"
          >
            <svg
              aria-labelledby="spinner-title-9"
              aria-live="assertive"
              className="c1"
              data-testid="svg"
              height="100"
              role="alert"
              viewBox="0 0 100 100"
              width="100"
            >
              <title
                id="spinner-title-9"
              >
                Loading content
              </title>
              <SpinnerSvg__SvgCircle
                cx="50"
                cy="50"
                fill="none"
                r="20"
                strokeDasharray="89, 200"
                strokeDashoffset="0"
                strokeLinecap="round"
                strokeWidth="4"
                variant="primary"
              >
                <StyledComponent
                  cx="50"
                  cy="50"
                  fill="none"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "SpinnerSvg__SvgCircle-sc-6yts5w-2",
                        "isStatic": false,
                        "lastClassName": "c2",
                        "rules": Array [
                          "animation:",
                          Keyframes {
                            "id": "sc-keyframes-drFgOE",
                            "inject": [Function],
                            "name": "drFgOE",
                            "rules": Array [
                              "@-webkit-keyframes drFgOE{0%{stroke-dasharray:1,200;stroke-dashoffset:0;}50%{stroke-dasharray:89,200;stroke-dashoffset:-35;}100%{stroke-dasharray:89,200;stroke-dashoffset:-124;}}",
                              "@keyframes drFgOE{0%{stroke-dasharray:1,200;stroke-dashoffset:0;}50%{stroke-dasharray:89,200;stroke-dashoffset:-35;}100%{stroke-dasharray:89,200;stroke-dashoffset:-124;}}",
                            ],
                            "toString": [Function],
                          },
                          " 1.7s ease-in-out infinite 0s;",
                          [Function],
                          " ",
                          [Function],
                        ],
                      },
                      "displayName": "SpinnerSvg__SvgCircle",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "SpinnerSvg__SvgCircle-sc-6yts5w-2",
                      "target": "circle",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  r="20"
                  strokeDasharray="89, 200"
                  strokeDashoffset="0"
                  strokeLinecap="round"
                  strokeWidth="4"
                  variant="primary"
                >
                  <circle
                    className="c2"
                    cx="50"
                    cy="50"
                    fill="none"
                    r="20"
                    strokeDasharray="89, 200"
                    strokeDashoffset="0"
                    strokeLinecap="round"
                    strokeWidth="4"
                  />
                </StyledComponent>
              </SpinnerSvg__SvgCircle>
            </svg>
          </StyledComponent>
        </SpinnerSvg__StyledSvg>
        <SpinnerSvg__TipContainer
          tabIndex="-1"
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "SpinnerSvg__TipContainer-sc-6yts5w-3",
                  "isStatic": true,
                  "lastClassName": "c3",
                  "rules": Array [
                    "margin-top: -1.5rem;",
                  ],
                },
                "displayName": "SpinnerSvg__TipContainer",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "SpinnerSvg__TipContainer-sc-6yts5w-3",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            tabIndex="-1"
          >
            <div
              className="c3"
              tabIndex="-1"
            >
              <Text
                block={false}
                bold={false}
                invert={false}
                size="small"
              >
                <Text__StyledText
                  block={false}
                  bold={false}
                  invert={false}
                  size="small"
                >
                  <StyledComponent
                    block={false}
                    bold={false}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Text__StyledText-sc-1m0rr67-0",
                          "isStatic": false,
                          "lastClassName": "c4",
                          "rules": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            "sup {",
                            "top: -0.5em;",
                            "font-size: 0.875rem;",
                            "position: relative;",
                            "vertical-align: baseline;",
                            "padding-left: 0.1em;",
                            "}",
                          ],
                        },
                        "displayName": "Text__StyledText",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Text__StyledText-sc-1m0rr67-0",
                        "target": "span",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    invert={false}
                    size="small"
                  >
                    <span
                      className="c4"
                      size="small"
                    >
                      Loading content
                    </span>
                  </StyledComponent>
                </Text__StyledText>
              </Text>
            </div>
          </StyledComponent>
        </SpinnerSvg__TipContainer>
      </div>
    </StyledComponent>
  </SpinnerSvg__SvgContainer>,
  .c4 {
  color: #2a2c2e;
  word-wrap: break-word;
  font-size: 0.875rem;
  -webkit-letter-spacing: -0.6px;
  -moz-letter-spacing: -0.6px;
  -ms-letter-spacing: -0.6px;
  letter-spacing: -0.6px;
  line-height: 1.42857;
  font-weight: 500;
}

.c4 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
  z-index: 1600;
}

.c1 {
  -webkit-animation: cZxgpV 1.8s linear infinite;
  animation: cZxgpV 1.8s linear infinite;
}

.c2 {
  -webkit-animation: drFgOE 1.7s ease-in-out infinite 0s;
  animation: drFgOE 1.7s ease-in-out infinite 0s;
  stroke: #2B8000;
}

.c3 {
  margin-top: -1.5rem;
}

<StyledComponent
    data-testid="spinner"
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "SpinnerSvg__SvgContainer-sc-6yts5w-0",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            [Function],
          ],
        },
        "displayName": "SpinnerSvg__SvgContainer",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "SpinnerSvg__SvgContainer-sc-6yts5w-0",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
    overlay={true}
  >
    <div
      className="c0"
      data-testid="spinner"
    >
      <SpinnerSvg__StyledSvg
        aria-labelledby="spinner-title-9"
        aria-live="assertive"
        data-testid="svg"
        height="100"
        role="alert"
        viewBox="0 0 100 100"
        width="100"
      >
        <StyledComponent
          aria-labelledby="spinner-title-9"
          aria-live="assertive"
          data-testid="svg"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "SpinnerSvg__StyledSvg-sc-6yts5w-1",
                "isStatic": false,
                "lastClassName": "c1",
                "rules": Array [
                  "animation:",
                  Keyframes {
                    "id": "sc-keyframes-cZxgpV",
                    "inject": [Function],
                    "name": "cZxgpV",
                    "rules": Array [
                      "@-webkit-keyframes cZxgpV{100%{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}",
                      "@keyframes cZxgpV{100%{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}",
                    ],
                    "toString": [Function],
                  },
                  " 1.8s linear infinite;",
                  [Function],
                  " ",
                  [Function],
                ],
              },
              "displayName": "SpinnerSvg__StyledSvg",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "SpinnerSvg__StyledSvg-sc-6yts5w-1",
              "target": "svg",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          height="100"
          role="alert"
          viewBox="0 0 100 100"
          width="100"
        >
          <svg
            aria-labelledby="spinner-title-9"
            aria-live="assertive"
            className="c1"
            data-testid="svg"
            height="100"
            role="alert"
            viewBox="0 0 100 100"
            width="100"
          >
            <title
              id="spinner-title-9"
            >
              Loading content
            </title>
            <SpinnerSvg__SvgCircle
              cx="50"
              cy="50"
              fill="none"
              r="20"
              strokeDasharray="89, 200"
              strokeDashoffset="0"
              strokeLinecap="round"
              strokeWidth="4"
              variant="primary"
            >
              <StyledComponent
                cx="50"
                cy="50"
                fill="none"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "SpinnerSvg__SvgCircle-sc-6yts5w-2",
                      "isStatic": false,
                      "lastClassName": "c2",
                      "rules": Array [
                        "animation:",
                        Keyframes {
                          "id": "sc-keyframes-drFgOE",
                          "inject": [Function],
                          "name": "drFgOE",
                          "rules": Array [
                            "@-webkit-keyframes drFgOE{0%{stroke-dasharray:1,200;stroke-dashoffset:0;}50%{stroke-dasharray:89,200;stroke-dashoffset:-35;}100%{stroke-dasharray:89,200;stroke-dashoffset:-124;}}",
                            "@keyframes drFgOE{0%{stroke-dasharray:1,200;stroke-dashoffset:0;}50%{stroke-dasharray:89,200;stroke-dashoffset:-35;}100%{stroke-dasharray:89,200;stroke-dashoffset:-124;}}",
                          ],
                          "toString": [Function],
                        },
                        " 1.7s ease-in-out infinite 0s;",
                        [Function],
                        " ",
                        [Function],
                      ],
                    },
                    "displayName": "SpinnerSvg__SvgCircle",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "SpinnerSvg__SvgCircle-sc-6yts5w-2",
                    "target": "circle",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                r="20"
                strokeDasharray="89, 200"
                strokeDashoffset="0"
                strokeLinecap="round"
                strokeWidth="4"
                variant="primary"
              >
                <circle
                  className="c2"
                  cx="50"
                  cy="50"
                  fill="none"
                  r="20"
                  strokeDasharray="89, 200"
                  strokeDashoffset="0"
                  strokeLinecap="round"
                  strokeWidth="4"
                />
              </StyledComponent>
            </SpinnerSvg__SvgCircle>
          </svg>
        </StyledComponent>
      </SpinnerSvg__StyledSvg>
      <SpinnerSvg__TipContainer
        tabIndex="-1"
      >
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "SpinnerSvg__TipContainer-sc-6yts5w-3",
                "isStatic": true,
                "lastClassName": "c3",
                "rules": Array [
                  "margin-top: -1.5rem;",
                ],
              },
              "displayName": "SpinnerSvg__TipContainer",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "SpinnerSvg__TipContainer-sc-6yts5w-3",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          tabIndex="-1"
        >
          <div
            className="c3"
            tabIndex="-1"
          >
            <Text
              block={false}
              bold={false}
              invert={false}
              size="small"
            >
              <Text__StyledText
                block={false}
                bold={false}
                invert={false}
                size="small"
              >
                <StyledComponent
                  block={false}
                  bold={false}
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "Text__StyledText-sc-1m0rr67-0",
                        "isStatic": false,
                        "lastClassName": "c4",
                        "rules": Array [
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          [Function],
                          "sup {",
                          "top: -0.5em;",
                          "font-size: 0.875rem;",
                          "position: relative;",
                          "vertical-align: baseline;",
                          "padding-left: 0.1em;",
                          "}",
                        ],
                      },
                      "displayName": "Text__StyledText",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "Text__StyledText-sc-1m0rr67-0",
                      "target": "span",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  invert={false}
                  size="small"
                >
                  <span
                    className="c4"
                    size="small"
                  >
                    Loading content
                  </span>
                </StyledComponent>
              </Text__StyledText>
            </Text>
          </div>
        </StyledComponent>
      </SpinnerSvg__TipContainer>
    </div>
  </StyledComponent>,
  .c4 {
  color: #2a2c2e;
  word-wrap: break-word;
  font-size: 0.875rem;
  -webkit-letter-spacing: -0.6px;
  -moz-letter-spacing: -0.6px;
  -ms-letter-spacing: -0.6px;
  letter-spacing: -0.6px;
  line-height: 1.42857;
  font-weight: 500;
}

.c4 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
  z-index: 1600;
}

.c1 {
  -webkit-animation: cZxgpV 1.8s linear infinite;
  animation: cZxgpV 1.8s linear infinite;
}

.c2 {
  -webkit-animation: drFgOE 1.7s ease-in-out infinite 0s;
  animation: drFgOE 1.7s ease-in-out infinite 0s;
  stroke: #2B8000;
}

.c3 {
  margin-top: -1.5rem;
}

<div
    className="c0"
    data-testid="spinner"
  >
    <SpinnerSvg__StyledSvg
      aria-labelledby="spinner-title-9"
      aria-live="assertive"
      data-testid="svg"
      height="100"
      role="alert"
      viewBox="0 0 100 100"
      width="100"
    >
      <StyledComponent
        aria-labelledby="spinner-title-9"
        aria-live="assertive"
        data-testid="svg"
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "SpinnerSvg__StyledSvg-sc-6yts5w-1",
              "isStatic": false,
              "lastClassName": "c1",
              "rules": Array [
                "animation:",
                Keyframes {
                  "id": "sc-keyframes-cZxgpV",
                  "inject": [Function],
                  "name": "cZxgpV",
                  "rules": Array [
                    "@-webkit-keyframes cZxgpV{100%{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}",
                    "@keyframes cZxgpV{100%{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}",
                  ],
                  "toString": [Function],
                },
                " 1.8s linear infinite;",
                [Function],
                " ",
                [Function],
              ],
            },
            "displayName": "SpinnerSvg__StyledSvg",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "SpinnerSvg__StyledSvg-sc-6yts5w-1",
            "target": "svg",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        height="100"
        role="alert"
        viewBox="0 0 100 100"
        width="100"
      >
        <svg
          aria-labelledby="spinner-title-9"
          aria-live="assertive"
          className="c1"
          data-testid="svg"
          height="100"
          role="alert"
          viewBox="0 0 100 100"
          width="100"
        >
          <title
            id="spinner-title-9"
          >
            Loading content
          </title>
          <SpinnerSvg__SvgCircle
            cx="50"
            cy="50"
            fill="none"
            r="20"
            strokeDasharray="89, 200"
            strokeDashoffset="0"
            strokeLinecap="round"
            strokeWidth="4"
            variant="primary"
          >
            <StyledComponent
              cx="50"
              cy="50"
              fill="none"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "SpinnerSvg__SvgCircle-sc-6yts5w-2",
                    "isStatic": false,
                    "lastClassName": "c2",
                    "rules": Array [
                      "animation:",
                      Keyframes {
                        "id": "sc-keyframes-drFgOE",
                        "inject": [Function],
                        "name": "drFgOE",
                        "rules": Array [
                          "@-webkit-keyframes drFgOE{0%{stroke-dasharray:1,200;stroke-dashoffset:0;}50%{stroke-dasharray:89,200;stroke-dashoffset:-35;}100%{stroke-dasharray:89,200;stroke-dashoffset:-124;}}",
                          "@keyframes drFgOE{0%{stroke-dasharray:1,200;stroke-dashoffset:0;}50%{stroke-dasharray:89,200;stroke-dashoffset:-35;}100%{stroke-dasharray:89,200;stroke-dashoffset:-124;}}",
                        ],
                        "toString": [Function],
                      },
                      " 1.7s ease-in-out infinite 0s;",
                      [Function],
                      " ",
                      [Function],
                    ],
                  },
                  "displayName": "SpinnerSvg__SvgCircle",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "SpinnerSvg__SvgCircle-sc-6yts5w-2",
                  "target": "circle",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              r="20"
              strokeDasharray="89, 200"
              strokeDashoffset="0"
              strokeLinecap="round"
              strokeWidth="4"
              variant="primary"
            >
              <circle
                className="c2"
                cx="50"
                cy="50"
                fill="none"
                r="20"
                strokeDasharray="89, 200"
                strokeDashoffset="0"
                strokeLinecap="round"
                strokeWidth="4"
              />
            </StyledComponent>
          </SpinnerSvg__SvgCircle>
        </svg>
      </StyledComponent>
    </SpinnerSvg__StyledSvg>
    <SpinnerSvg__TipContainer
      tabIndex="-1"
    >
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "SpinnerSvg__TipContainer-sc-6yts5w-3",
              "isStatic": true,
              "lastClassName": "c3",
              "rules": Array [
                "margin-top: -1.5rem;",
              ],
            },
            "displayName": "SpinnerSvg__TipContainer",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "SpinnerSvg__TipContainer-sc-6yts5w-3",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        tabIndex="-1"
      >
        <div
          className="c3"
          tabIndex="-1"
        >
          <Text
            block={false}
            bold={false}
            invert={false}
            size="small"
          >
            <Text__StyledText
              block={false}
              bold={false}
              invert={false}
              size="small"
            >
              <StyledComponent
                block={false}
                bold={false}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "Text__StyledText-sc-1m0rr67-0",
                      "isStatic": false,
                      "lastClassName": "c4",
                      "rules": Array [
                        [Function],
                        [Function],
                        [Function],
                        [Function],
                        [Function],
                        "sup {",
                        "top: -0.5em;",
                        "font-size: 0.875rem;",
                        "position: relative;",
                        "vertical-align: baseline;",
                        "padding-left: 0.1em;",
                        "}",
                      ],
                    },
                    "displayName": "Text__StyledText",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "Text__StyledText-sc-1m0rr67-0",
                    "target": "span",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                invert={false}
                size="small"
              >
                <span
                  className="c4"
                  size="small"
                >
                  Loading content
                </span>
              </StyledComponent>
            </Text__StyledText>
          </Text>
        </div>
      </StyledComponent>
    </SpinnerSvg__TipContainer>
  </div>,
]
`;

exports[`Spinner passes additional attributes to svg element 1`] = `
Array [
  .c0 {
  -webkit-animation: cZxgpV 1.8s linear infinite;
  animation: cZxgpV 1.8s linear infinite;
}

.c1 {
  -webkit-animation: drFgOE 1.7s ease-in-out infinite 0s;
  animation: drFgOE 1.7s ease-in-out infinite 0s;
  stroke: #2B8000;
}

<SpinnerSvg__StyledSvg
    aria-labelledby="spinner-title-11"
    aria-live="assertive"
    data-some-attr="some value"
    data-testid="svg"
    height="100"
    id="the-spinner"
    role="alert"
    viewBox="0 0 100 100"
    width="100"
  >
    <StyledComponent
      aria-labelledby="spinner-title-11"
      aria-live="assertive"
      data-some-attr="some value"
      data-testid="svg"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "SpinnerSvg__StyledSvg-sc-6yts5w-1",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "animation:",
              Keyframes {
                "id": "sc-keyframes-cZxgpV",
                "inject": [Function],
                "name": "cZxgpV",
                "rules": Array [
                  "@-webkit-keyframes cZxgpV{100%{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}",
                  "@keyframes cZxgpV{100%{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}",
                ],
                "toString": [Function],
              },
              " 1.8s linear infinite;",
              [Function],
              " ",
              [Function],
            ],
          },
          "displayName": "SpinnerSvg__StyledSvg",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "SpinnerSvg__StyledSvg-sc-6yts5w-1",
          "target": "svg",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      height="100"
      id="the-spinner"
      role="alert"
      viewBox="0 0 100 100"
      width="100"
    >
      <svg
        aria-labelledby="spinner-title-11"
        aria-live="assertive"
        className="c0"
        data-some-attr="some value"
        data-testid="svg"
        height="100"
        id="the-spinner"
        role="alert"
        viewBox="0 0 100 100"
        width="100"
      >
        <title
          id="spinner-title-11"
        >
          Loading content
        </title>
        <SpinnerSvg__SvgCircle
          cx="50"
          cy="50"
          fill="none"
          r="20"
          strokeDasharray="89, 200"
          strokeDashoffset="0"
          strokeLinecap="round"
          strokeWidth="4"
          variant="primary"
        >
          <StyledComponent
            cx="50"
            cy="50"
            fill="none"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "SpinnerSvg__SvgCircle-sc-6yts5w-2",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "animation:",
                    Keyframes {
                      "id": "sc-keyframes-drFgOE",
                      "inject": [Function],
                      "name": "drFgOE",
                      "rules": Array [
                        "@-webkit-keyframes drFgOE{0%{stroke-dasharray:1,200;stroke-dashoffset:0;}50%{stroke-dasharray:89,200;stroke-dashoffset:-35;}100%{stroke-dasharray:89,200;stroke-dashoffset:-124;}}",
                        "@keyframes drFgOE{0%{stroke-dasharray:1,200;stroke-dashoffset:0;}50%{stroke-dasharray:89,200;stroke-dashoffset:-35;}100%{stroke-dasharray:89,200;stroke-dashoffset:-124;}}",
                      ],
                      "toString": [Function],
                    },
                    " 1.7s ease-in-out infinite 0s;",
                    [Function],
                    " ",
                    [Function],
                  ],
                },
                "displayName": "SpinnerSvg__SvgCircle",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "SpinnerSvg__SvgCircle-sc-6yts5w-2",
                "target": "circle",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            r="20"
            strokeDasharray="89, 200"
            strokeDashoffset="0"
            strokeLinecap="round"
            strokeWidth="4"
            variant="primary"
          >
            <circle
              className="c1"
              cx="50"
              cy="50"
              fill="none"
              r="20"
              strokeDasharray="89, 200"
              strokeDashoffset="0"
              strokeLinecap="round"
              strokeWidth="4"
            />
          </StyledComponent>
        </SpinnerSvg__SvgCircle>
      </svg>
    </StyledComponent>
  </SpinnerSvg__StyledSvg>,
  .c0 {
  -webkit-animation: cZxgpV 1.8s linear infinite;
  animation: cZxgpV 1.8s linear infinite;
}

.c1 {
  -webkit-animation: drFgOE 1.7s ease-in-out infinite 0s;
  animation: drFgOE 1.7s ease-in-out infinite 0s;
  stroke: #2B8000;
}

<StyledComponent
    aria-labelledby="spinner-title-11"
    aria-live="assertive"
    data-some-attr="some value"
    data-testid="svg"
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "SpinnerSvg__StyledSvg-sc-6yts5w-1",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            "animation:",
            Keyframes {
              "id": "sc-keyframes-cZxgpV",
              "inject": [Function],
              "name": "cZxgpV",
              "rules": Array [
                "@-webkit-keyframes cZxgpV{100%{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}",
                "@keyframes cZxgpV{100%{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}",
              ],
              "toString": [Function],
            },
            " 1.8s linear infinite;",
            [Function],
            " ",
            [Function],
          ],
        },
        "displayName": "SpinnerSvg__StyledSvg",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "SpinnerSvg__StyledSvg-sc-6yts5w-1",
        "target": "svg",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
    height="100"
    id="the-spinner"
    role="alert"
    viewBox="0 0 100 100"
    width="100"
  >
    <svg
      aria-labelledby="spinner-title-11"
      aria-live="assertive"
      className="c0"
      data-some-attr="some value"
      data-testid="svg"
      height="100"
      id="the-spinner"
      role="alert"
      viewBox="0 0 100 100"
      width="100"
    >
      <title
        id="spinner-title-11"
      >
        Loading content
      </title>
      <SpinnerSvg__SvgCircle
        cx="50"
        cy="50"
        fill="none"
        r="20"
        strokeDasharray="89, 200"
        strokeDashoffset="0"
        strokeLinecap="round"
        strokeWidth="4"
        variant="primary"
      >
        <StyledComponent
          cx="50"
          cy="50"
          fill="none"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "SpinnerSvg__SvgCircle-sc-6yts5w-2",
                "isStatic": false,
                "lastClassName": "c1",
                "rules": Array [
                  "animation:",
                  Keyframes {
                    "id": "sc-keyframes-drFgOE",
                    "inject": [Function],
                    "name": "drFgOE",
                    "rules": Array [
                      "@-webkit-keyframes drFgOE{0%{stroke-dasharray:1,200;stroke-dashoffset:0;}50%{stroke-dasharray:89,200;stroke-dashoffset:-35;}100%{stroke-dasharray:89,200;stroke-dashoffset:-124;}}",
                      "@keyframes drFgOE{0%{stroke-dasharray:1,200;stroke-dashoffset:0;}50%{stroke-dasharray:89,200;stroke-dashoffset:-35;}100%{stroke-dasharray:89,200;stroke-dashoffset:-124;}}",
                    ],
                    "toString": [Function],
                  },
                  " 1.7s ease-in-out infinite 0s;",
                  [Function],
                  " ",
                  [Function],
                ],
              },
              "displayName": "SpinnerSvg__SvgCircle",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "SpinnerSvg__SvgCircle-sc-6yts5w-2",
              "target": "circle",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          r="20"
          strokeDasharray="89, 200"
          strokeDashoffset="0"
          strokeLinecap="round"
          strokeWidth="4"
          variant="primary"
        >
          <circle
            className="c1"
            cx="50"
            cy="50"
            fill="none"
            r="20"
            strokeDasharray="89, 200"
            strokeDashoffset="0"
            strokeLinecap="round"
            strokeWidth="4"
          />
        </StyledComponent>
      </SpinnerSvg__SvgCircle>
    </svg>
  </StyledComponent>,
  .c0 {
  -webkit-animation: cZxgpV 1.8s linear infinite;
  animation: cZxgpV 1.8s linear infinite;
}

.c1 {
  -webkit-animation: drFgOE 1.7s ease-in-out infinite 0s;
  animation: drFgOE 1.7s ease-in-out infinite 0s;
  stroke: #2B8000;
}

<svg
    aria-labelledby="spinner-title-11"
    aria-live="assertive"
    className="c0"
    data-some-attr="some value"
    data-testid="svg"
    height="100"
    id="the-spinner"
    role="alert"
    viewBox="0 0 100 100"
    width="100"
  >
    <title
      id="spinner-title-11"
    >
      Loading content
    </title>
    <SpinnerSvg__SvgCircle
      cx="50"
      cy="50"
      fill="none"
      r="20"
      strokeDasharray="89, 200"
      strokeDashoffset="0"
      strokeLinecap="round"
      strokeWidth="4"
      variant="primary"
    >
      <StyledComponent
        cx="50"
        cy="50"
        fill="none"
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "SpinnerSvg__SvgCircle-sc-6yts5w-2",
              "isStatic": false,
              "lastClassName": "c1",
              "rules": Array [
                "animation:",
                Keyframes {
                  "id": "sc-keyframes-drFgOE",
                  "inject": [Function],
                  "name": "drFgOE",
                  "rules": Array [
                    "@-webkit-keyframes drFgOE{0%{stroke-dasharray:1,200;stroke-dashoffset:0;}50%{stroke-dasharray:89,200;stroke-dashoffset:-35;}100%{stroke-dasharray:89,200;stroke-dashoffset:-124;}}",
                    "@keyframes drFgOE{0%{stroke-dasharray:1,200;stroke-dashoffset:0;}50%{stroke-dasharray:89,200;stroke-dashoffset:-35;}100%{stroke-dasharray:89,200;stroke-dashoffset:-124;}}",
                  ],
                  "toString": [Function],
                },
                " 1.7s ease-in-out infinite 0s;",
                [Function],
                " ",
                [Function],
              ],
            },
            "displayName": "SpinnerSvg__SvgCircle",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "SpinnerSvg__SvgCircle-sc-6yts5w-2",
            "target": "circle",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        r="20"
        strokeDasharray="89, 200"
        strokeDashoffset="0"
        strokeLinecap="round"
        strokeWidth="4"
        variant="primary"
      >
        <circle
          className="c1"
          cx="50"
          cy="50"
          fill="none"
          r="20"
          strokeDasharray="89, 200"
          strokeDashoffset="0"
          strokeLinecap="round"
          strokeWidth="4"
        />
      </StyledComponent>
    </SpinnerSvg__SvgCircle>
  </svg>,
]
`;

exports[`Spinner renders 1`] = `
.c4 {
  color: #2a2c2e;
  word-wrap: break-word;
  font-size: 0.875rem;
  -webkit-letter-spacing: -0.6px;
  -moz-letter-spacing: -0.6px;
  -ms-letter-spacing: -0.6px;
  letter-spacing: -0.6px;
  line-height: 1.42857;
  font-weight: 500;
}

.c4 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

.c0 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c1 {
  -webkit-animation: cZxgpV 1.8s linear infinite;
  animation: cZxgpV 1.8s linear infinite;
}

.c2 {
  -webkit-animation: drFgOE 1.7s ease-in-out infinite 0s;
  animation: drFgOE 1.7s ease-in-out infinite 0s;
  stroke: #2B8000;
}

.c3 {
  margin-top: -1.5rem;
}

<div
  class="c0"
  data-testid="spinner"
>
  <svg
    aria-labelledby="spinner-title-1"
    aria-live="assertive"
    class="c1"
    data-testid="svg"
    height="100"
    role="alert"
    viewBox="0 0 100 100"
    width="100"
  >
    <title
      id="spinner-title-1"
    >
      Loading content
    </title>
    <circle
      class="c2"
      cx="50"
      cy="50"
      fill="none"
      r="20"
      stroke-dasharray="89, 200"
      stroke-dashoffset="0"
      stroke-linecap="round"
      stroke-width="4"
    />
  </svg>
  <div
    class="c3"
    tabindex="-1"
  >
    <span
      class="c4"
    >
      Loading content
    </span>
  </div>
</div>
`;

exports[`Spinner renders a small secondary spinner 1`] = `
Array [
  .c1 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
  z-index: 1600;
}

.c2 {
  -webkit-animation: cZxgpV 1.8s linear infinite;
  animation: cZxgpV 1.8s linear infinite;
}

.c3 {
  -webkit-animation: drFgOE 1.7s ease-in-out infinite 0s;
  animation: drFgOE 1.7s ease-in-out infinite 0s;
  stroke: #4b286d;
}

.c0 {
  position: relative;
  display: block;
}

.c4 {
  position: absolute;
  width: 100%;
  height: 100%;
  z-index: 1400;
}

.c5 {
  opacity: 0.06;
}

@media (min-width:768px) {
  .c0 {
    display: inline-block;
  }
}

<Spinner__SpinnerContainer
    aria-live="assertive"
    data-testid="container"
    fullScreen={false}
    inline={true}
  >
    <StyledComponent
      aria-live="assertive"
      data-testid="container"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Spinner__SpinnerContainer-sc-12sh5b7-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              [Function],
            ],
          },
          "displayName": "Spinner__SpinnerContainer",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Spinner__SpinnerContainer-sc-12sh5b7-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      fullScreen={false}
      inline={true}
    >
      <div
        aria-live="assertive"
        className="c0"
        data-testid="container"
      >
        <SpinnerSvg
          a11yLabel="Loading content"
          overlay={true}
          size="small"
          variant="secondary"
        >
          <SpinnerSvg__SvgContainer
            data-testid="spinner"
            overlay={true}
          >
            <StyledComponent
              data-testid="spinner"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "SpinnerSvg__SvgContainer-sc-6yts5w-0",
                    "isStatic": false,
                    "lastClassName": "c1",
                    "rules": Array [
                      [Function],
                    ],
                  },
                  "displayName": "SpinnerSvg__SvgContainer",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "SpinnerSvg__SvgContainer-sc-6yts5w-0",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              overlay={true}
            >
              <div
                className="c1"
                data-testid="spinner"
              >
                <SpinnerSvg__StyledSvg
                  aria-labelledby="spinner-title-4"
                  aria-live="assertive"
                  data-testid="svg"
                  height="50"
                  role="alert"
                  viewBox="0 0 100 100"
                  width="50"
                >
                  <StyledComponent
                    aria-labelledby="spinner-title-4"
                    aria-live="assertive"
                    data-testid="svg"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "SpinnerSvg__StyledSvg-sc-6yts5w-1",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "animation:",
                            Keyframes {
                              "id": "sc-keyframes-cZxgpV",
                              "inject": [Function],
                              "name": "cZxgpV",
                              "rules": Array [
                                "@-webkit-keyframes cZxgpV{100%{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}",
                                "@keyframes cZxgpV{100%{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}",
                              ],
                              "toString": [Function],
                            },
                            " 1.8s linear infinite;",
                            [Function],
                            " ",
                            [Function],
                          ],
                        },
                        "displayName": "SpinnerSvg__StyledSvg",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "SpinnerSvg__StyledSvg-sc-6yts5w-1",
                        "target": "svg",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    height="50"
                    role="alert"
                    viewBox="0 0 100 100"
                    width="50"
                  >
                    <svg
                      aria-labelledby="spinner-title-4"
                      aria-live="assertive"
                      className="c2"
                      data-testid="svg"
                      height="50"
                      role="alert"
                      viewBox="0 0 100 100"
                      width="50"
                    >
                      <title
                        id="spinner-title-4"
                      >
                        Loading content
                      </title>
                      <SpinnerSvg__SvgCircle
                        cx="50"
                        cy="50"
                        fill="none"
                        r="20"
                        strokeDasharray="89, 200"
                        strokeDashoffset="0"
                        strokeLinecap="round"
                        strokeWidth="4"
                        variant="secondary"
                      >
                        <StyledComponent
                          cx="50"
                          cy="50"
                          fill="none"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "SpinnerSvg__SvgCircle-sc-6yts5w-2",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "animation:",
                                  Keyframes {
                                    "id": "sc-keyframes-drFgOE",
                                    "inject": [Function],
                                    "name": "drFgOE",
                                    "rules": Array [
                                      "@-webkit-keyframes drFgOE{0%{stroke-dasharray:1,200;stroke-dashoffset:0;}50%{stroke-dasharray:89,200;stroke-dashoffset:-35;}100%{stroke-dasharray:89,200;stroke-dashoffset:-124;}}",
                                      "@keyframes drFgOE{0%{stroke-dasharray:1,200;stroke-dashoffset:0;}50%{stroke-dasharray:89,200;stroke-dashoffset:-35;}100%{stroke-dasharray:89,200;stroke-dashoffset:-124;}}",
                                    ],
                                    "toString": [Function],
                                  },
                                  " 1.7s ease-in-out infinite 0s;",
                                  [Function],
                                  " ",
                                  [Function],
                                ],
                              },
                              "displayName": "SpinnerSvg__SvgCircle",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "SpinnerSvg__SvgCircle-sc-6yts5w-2",
                              "target": "circle",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          r="20"
                          strokeDasharray="89, 200"
                          strokeDashoffset="0"
                          strokeLinecap="round"
                          strokeWidth="4"
                          variant="secondary"
                        >
                          <circle
                            className="c3"
                            cx="50"
                            cy="50"
                            fill="none"
                            r="20"
                            strokeDasharray="89, 200"
                            strokeDashoffset="0"
                            strokeLinecap="round"
                            strokeWidth="4"
                          />
                        </StyledComponent>
                      </SpinnerSvg__SvgCircle>
                    </svg>
                  </StyledComponent>
                </SpinnerSvg__StyledSvg>
              </div>
            </StyledComponent>
          </SpinnerSvg__SvgContainer>
        </SpinnerSvg>
        <Spinner__ContentOverlay
          data-testid="overlay"
        >
          <StyledComponent
            data-testid="overlay"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "Spinner__ContentOverlay-sc-12sh5b7-1",
                  "isStatic": true,
                  "lastClassName": "c4",
                  "rules": Array [
                    "position: absolute;",
                    "width: 100%;",
                    "height: 100%;",
                    "z-index: 1400;",
                  ],
                },
                "displayName": "Spinner__ContentOverlay",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "Spinner__ContentOverlay-sc-12sh5b7-1",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c4"
              data-testid="overlay"
            />
          </StyledComponent>
        </Spinner__ContentOverlay>
        <Spinner__OpaqueContainer
          inert="true"
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "Spinner__OpaqueContainer-sc-12sh5b7-3",
                  "isStatic": true,
                  "lastClassName": "c5",
                  "rules": Array [
                    "opacity: 0.06;",
                  ],
                },
                "displayName": "Spinner__OpaqueContainer",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "Spinner__OpaqueContainer-sc-12sh5b7-3",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            inert="true"
          >
            <div
              className="c5"
            >
              <span
                aria-hidden="true"
                key=".0"
                tabIndex="-1"
              >
                Overlay me with the spinner
              </span>
            </div>
          </StyledComponent>
        </Spinner__OpaqueContainer>
      </div>
    </StyledComponent>
  </Spinner__SpinnerContainer>,
  .c1 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
  z-index: 1600;
}

.c2 {
  -webkit-animation: cZxgpV 1.8s linear infinite;
  animation: cZxgpV 1.8s linear infinite;
}

.c3 {
  -webkit-animation: drFgOE 1.7s ease-in-out infinite 0s;
  animation: drFgOE 1.7s ease-in-out infinite 0s;
  stroke: #4b286d;
}

.c0 {
  position: relative;
  display: block;
}

.c4 {
  position: absolute;
  width: 100%;
  height: 100%;
  z-index: 1400;
}

.c5 {
  opacity: 0.06;
}

@media (min-width:768px) {
  .c0 {
    display: inline-block;
  }
}

<StyledComponent
    aria-live="assertive"
    data-testid="container"
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "Spinner__SpinnerContainer-sc-12sh5b7-0",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            [Function],
          ],
        },
        "displayName": "Spinner__SpinnerContainer",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "Spinner__SpinnerContainer-sc-12sh5b7-0",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
    fullScreen={false}
    inline={true}
  >
    <div
      aria-live="assertive"
      className="c0"
      data-testid="container"
    >
      <SpinnerSvg
        a11yLabel="Loading content"
        overlay={true}
        size="small"
        variant="secondary"
      >
        <SpinnerSvg__SvgContainer
          data-testid="spinner"
          overlay={true}
        >
          <StyledComponent
            data-testid="spinner"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "SpinnerSvg__SvgContainer-sc-6yts5w-0",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    [Function],
                  ],
                },
                "displayName": "SpinnerSvg__SvgContainer",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "SpinnerSvg__SvgContainer-sc-6yts5w-0",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            overlay={true}
          >
            <div
              className="c1"
              data-testid="spinner"
            >
              <SpinnerSvg__StyledSvg
                aria-labelledby="spinner-title-4"
                aria-live="assertive"
                data-testid="svg"
                height="50"
                role="alert"
                viewBox="0 0 100 100"
                width="50"
              >
                <StyledComponent
                  aria-labelledby="spinner-title-4"
                  aria-live="assertive"
                  data-testid="svg"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "SpinnerSvg__StyledSvg-sc-6yts5w-1",
                        "isStatic": false,
                        "lastClassName": "c2",
                        "rules": Array [
                          "animation:",
                          Keyframes {
                            "id": "sc-keyframes-cZxgpV",
                            "inject": [Function],
                            "name": "cZxgpV",
                            "rules": Array [
                              "@-webkit-keyframes cZxgpV{100%{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}",
                              "@keyframes cZxgpV{100%{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}",
                            ],
                            "toString": [Function],
                          },
                          " 1.8s linear infinite;",
                          [Function],
                          " ",
                          [Function],
                        ],
                      },
                      "displayName": "SpinnerSvg__StyledSvg",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "SpinnerSvg__StyledSvg-sc-6yts5w-1",
                      "target": "svg",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  height="50"
                  role="alert"
                  viewBox="0 0 100 100"
                  width="50"
                >
                  <svg
                    aria-labelledby="spinner-title-4"
                    aria-live="assertive"
                    className="c2"
                    data-testid="svg"
                    height="50"
                    role="alert"
                    viewBox="0 0 100 100"
                    width="50"
                  >
                    <title
                      id="spinner-title-4"
                    >
                      Loading content
                    </title>
                    <SpinnerSvg__SvgCircle
                      cx="50"
                      cy="50"
                      fill="none"
                      r="20"
                      strokeDasharray="89, 200"
                      strokeDashoffset="0"
                      strokeLinecap="round"
                      strokeWidth="4"
                      variant="secondary"
                    >
                      <StyledComponent
                        cx="50"
                        cy="50"
                        fill="none"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "SpinnerSvg__SvgCircle-sc-6yts5w-2",
                              "isStatic": false,
                              "lastClassName": "c3",
                              "rules": Array [
                                "animation:",
                                Keyframes {
                                  "id": "sc-keyframes-drFgOE",
                                  "inject": [Function],
                                  "name": "drFgOE",
                                  "rules": Array [
                                    "@-webkit-keyframes drFgOE{0%{stroke-dasharray:1,200;stroke-dashoffset:0;}50%{stroke-dasharray:89,200;stroke-dashoffset:-35;}100%{stroke-dasharray:89,200;stroke-dashoffset:-124;}}",
                                    "@keyframes drFgOE{0%{stroke-dasharray:1,200;stroke-dashoffset:0;}50%{stroke-dasharray:89,200;stroke-dashoffset:-35;}100%{stroke-dasharray:89,200;stroke-dashoffset:-124;}}",
                                  ],
                                  "toString": [Function],
                                },
                                " 1.7s ease-in-out infinite 0s;",
                                [Function],
                                " ",
                                [Function],
                              ],
                            },
                            "displayName": "SpinnerSvg__SvgCircle",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "SpinnerSvg__SvgCircle-sc-6yts5w-2",
                            "target": "circle",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        r="20"
                        strokeDasharray="89, 200"
                        strokeDashoffset="0"
                        strokeLinecap="round"
                        strokeWidth="4"
                        variant="secondary"
                      >
                        <circle
                          className="c3"
                          cx="50"
                          cy="50"
                          fill="none"
                          r="20"
                          strokeDasharray="89, 200"
                          strokeDashoffset="0"
                          strokeLinecap="round"
                          strokeWidth="4"
                        />
                      </StyledComponent>
                    </SpinnerSvg__SvgCircle>
                  </svg>
                </StyledComponent>
              </SpinnerSvg__StyledSvg>
            </div>
          </StyledComponent>
        </SpinnerSvg__SvgContainer>
      </SpinnerSvg>
      <Spinner__ContentOverlay
        data-testid="overlay"
      >
        <StyledComponent
          data-testid="overlay"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "Spinner__ContentOverlay-sc-12sh5b7-1",
                "isStatic": true,
                "lastClassName": "c4",
                "rules": Array [
                  "position: absolute;",
                  "width: 100%;",
                  "height: 100%;",
                  "z-index: 1400;",
                ],
              },
              "displayName": "Spinner__ContentOverlay",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "Spinner__ContentOverlay-sc-12sh5b7-1",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div
            className="c4"
            data-testid="overlay"
          />
        </StyledComponent>
      </Spinner__ContentOverlay>
      <Spinner__OpaqueContainer
        inert="true"
      >
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "Spinner__OpaqueContainer-sc-12sh5b7-3",
                "isStatic": true,
                "lastClassName": "c5",
                "rules": Array [
                  "opacity: 0.06;",
                ],
              },
              "displayName": "Spinner__OpaqueContainer",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "Spinner__OpaqueContainer-sc-12sh5b7-3",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          inert="true"
        >
          <div
            className="c5"
          >
            <span
              aria-hidden="true"
              key=".0"
              tabIndex="-1"
            >
              Overlay me with the spinner
            </span>
          </div>
        </StyledComponent>
      </Spinner__OpaqueContainer>
    </div>
  </StyledComponent>,
  .c1 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
  z-index: 1600;
}

.c2 {
  -webkit-animation: cZxgpV 1.8s linear infinite;
  animation: cZxgpV 1.8s linear infinite;
}

.c3 {
  -webkit-animation: drFgOE 1.7s ease-in-out infinite 0s;
  animation: drFgOE 1.7s ease-in-out infinite 0s;
  stroke: #4b286d;
}

.c0 {
  position: relative;
  display: block;
}

.c4 {
  position: absolute;
  width: 100%;
  height: 100%;
  z-index: 1400;
}

.c5 {
  opacity: 0.06;
}

@media (min-width:768px) {
  .c0 {
    display: inline-block;
  }
}

<div
    aria-live="assertive"
    className="c0"
    data-testid="container"
  >
    <SpinnerSvg
      a11yLabel="Loading content"
      overlay={true}
      size="small"
      variant="secondary"
    >
      <SpinnerSvg__SvgContainer
        data-testid="spinner"
        overlay={true}
      >
        <StyledComponent
          data-testid="spinner"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "SpinnerSvg__SvgContainer-sc-6yts5w-0",
                "isStatic": false,
                "lastClassName": "c1",
                "rules": Array [
                  [Function],
                ],
              },
              "displayName": "SpinnerSvg__SvgContainer",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "SpinnerSvg__SvgContainer-sc-6yts5w-0",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          overlay={true}
        >
          <div
            className="c1"
            data-testid="spinner"
          >
            <SpinnerSvg__StyledSvg
              aria-labelledby="spinner-title-4"
              aria-live="assertive"
              data-testid="svg"
              height="50"
              role="alert"
              viewBox="0 0 100 100"
              width="50"
            >
              <StyledComponent
                aria-labelledby="spinner-title-4"
                aria-live="assertive"
                data-testid="svg"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "SpinnerSvg__StyledSvg-sc-6yts5w-1",
                      "isStatic": false,
                      "lastClassName": "c2",
                      "rules": Array [
                        "animation:",
                        Keyframes {
                          "id": "sc-keyframes-cZxgpV",
                          "inject": [Function],
                          "name": "cZxgpV",
                          "rules": Array [
                            "@-webkit-keyframes cZxgpV{100%{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}",
                            "@keyframes cZxgpV{100%{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}",
                          ],
                          "toString": [Function],
                        },
                        " 1.8s linear infinite;",
                        [Function],
                        " ",
                        [Function],
                      ],
                    },
                    "displayName": "SpinnerSvg__StyledSvg",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "SpinnerSvg__StyledSvg-sc-6yts5w-1",
                    "target": "svg",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                height="50"
                role="alert"
                viewBox="0 0 100 100"
                width="50"
              >
                <svg
                  aria-labelledby="spinner-title-4"
                  aria-live="assertive"
                  className="c2"
                  data-testid="svg"
                  height="50"
                  role="alert"
                  viewBox="0 0 100 100"
                  width="50"
                >
                  <title
                    id="spinner-title-4"
                  >
                    Loading content
                  </title>
                  <SpinnerSvg__SvgCircle
                    cx="50"
                    cy="50"
                    fill="none"
                    r="20"
                    strokeDasharray="89, 200"
                    strokeDashoffset="0"
                    strokeLinecap="round"
                    strokeWidth="4"
                    variant="secondary"
                  >
                    <StyledComponent
                      cx="50"
                      cy="50"
                      fill="none"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "SpinnerSvg__SvgCircle-sc-6yts5w-2",
                            "isStatic": false,
                            "lastClassName": "c3",
                            "rules": Array [
                              "animation:",
                              Keyframes {
                                "id": "sc-keyframes-drFgOE",
                                "inject": [Function],
                                "name": "drFgOE",
                                "rules": Array [
                                  "@-webkit-keyframes drFgOE{0%{stroke-dasharray:1,200;stroke-dashoffset:0;}50%{stroke-dasharray:89,200;stroke-dashoffset:-35;}100%{stroke-dasharray:89,200;stroke-dashoffset:-124;}}",
                                  "@keyframes drFgOE{0%{stroke-dasharray:1,200;stroke-dashoffset:0;}50%{stroke-dasharray:89,200;stroke-dashoffset:-35;}100%{stroke-dasharray:89,200;stroke-dashoffset:-124;}}",
                                ],
                                "toString": [Function],
                              },
                              " 1.7s ease-in-out infinite 0s;",
                              [Function],
                              " ",
                              [Function],
                            ],
                          },
                          "displayName": "SpinnerSvg__SvgCircle",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "SpinnerSvg__SvgCircle-sc-6yts5w-2",
                          "target": "circle",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      r="20"
                      strokeDasharray="89, 200"
                      strokeDashoffset="0"
                      strokeLinecap="round"
                      strokeWidth="4"
                      variant="secondary"
                    >
                      <circle
                        className="c3"
                        cx="50"
                        cy="50"
                        fill="none"
                        r="20"
                        strokeDasharray="89, 200"
                        strokeDashoffset="0"
                        strokeLinecap="round"
                        strokeWidth="4"
                      />
                    </StyledComponent>
                  </SpinnerSvg__SvgCircle>
                </svg>
              </StyledComponent>
            </SpinnerSvg__StyledSvg>
          </div>
        </StyledComponent>
      </SpinnerSvg__SvgContainer>
    </SpinnerSvg>
    <Spinner__ContentOverlay
      data-testid="overlay"
    >
      <StyledComponent
        data-testid="overlay"
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Spinner__ContentOverlay-sc-12sh5b7-1",
              "isStatic": true,
              "lastClassName": "c4",
              "rules": Array [
                "position: absolute;",
                "width: 100%;",
                "height: 100%;",
                "z-index: 1400;",
              ],
            },
            "displayName": "Spinner__ContentOverlay",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Spinner__ContentOverlay-sc-12sh5b7-1",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className="c4"
          data-testid="overlay"
        />
      </StyledComponent>
    </Spinner__ContentOverlay>
    <Spinner__OpaqueContainer
      inert="true"
    >
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Spinner__OpaqueContainer-sc-12sh5b7-3",
              "isStatic": true,
              "lastClassName": "c5",
              "rules": Array [
                "opacity: 0.06;",
              ],
            },
            "displayName": "Spinner__OpaqueContainer",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Spinner__OpaqueContainer-sc-12sh5b7-3",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        inert="true"
      >
        <div
          className="c5"
        >
          <span
            aria-hidden="true"
            key=".0"
            tabIndex="-1"
          >
            Overlay me with the spinner
          </span>
        </div>
      </StyledComponent>
    </Spinner__OpaqueContainer>
  </div>,
]
`;

exports[`Spinner renders a small spinner 1`] = `
Array [
  .c1 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
  z-index: 1600;
}

.c2 {
  -webkit-animation: cZxgpV 1.8s linear infinite;
  animation: cZxgpV 1.8s linear infinite;
}

.c3 {
  -webkit-animation: drFgOE 1.7s ease-in-out infinite 0s;
  animation: drFgOE 1.7s ease-in-out infinite 0s;
  stroke: #2B8000;
}

.c0 {
  position: relative;
  display: block;
}

.c4 {
  position: absolute;
  width: 100%;
  height: 100%;
  z-index: 1400;
}

.c5 {
  opacity: 0.06;
}

@media (min-width:768px) {
  .c0 {
    display: inline-block;
  }
}

<Spinner__SpinnerContainer
    aria-live="assertive"
    data-testid="container"
    fullScreen={false}
    inline={true}
  >
    <StyledComponent
      aria-live="assertive"
      data-testid="container"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Spinner__SpinnerContainer-sc-12sh5b7-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              [Function],
            ],
          },
          "displayName": "Spinner__SpinnerContainer",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Spinner__SpinnerContainer-sc-12sh5b7-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      fullScreen={false}
      inline={true}
    >
      <div
        aria-live="assertive"
        className="c0"
        data-testid="container"
      >
        <SpinnerSvg
          a11yLabel="Loading content"
          overlay={true}
          size="small"
          variant="primary"
        >
          <SpinnerSvg__SvgContainer
            data-testid="spinner"
            overlay={true}
          >
            <StyledComponent
              data-testid="spinner"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "SpinnerSvg__SvgContainer-sc-6yts5w-0",
                    "isStatic": false,
                    "lastClassName": "c1",
                    "rules": Array [
                      [Function],
                    ],
                  },
                  "displayName": "SpinnerSvg__SvgContainer",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "SpinnerSvg__SvgContainer-sc-6yts5w-0",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              overlay={true}
            >
              <div
                className="c1"
                data-testid="spinner"
              >
                <SpinnerSvg__StyledSvg
                  aria-labelledby="spinner-title-3"
                  aria-live="assertive"
                  data-testid="svg"
                  height="50"
                  role="alert"
                  viewBox="0 0 100 100"
                  width="50"
                >
                  <StyledComponent
                    aria-labelledby="spinner-title-3"
                    aria-live="assertive"
                    data-testid="svg"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "SpinnerSvg__StyledSvg-sc-6yts5w-1",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "animation:",
                            Keyframes {
                              "id": "sc-keyframes-cZxgpV",
                              "inject": [Function],
                              "name": "cZxgpV",
                              "rules": Array [
                                "@-webkit-keyframes cZxgpV{100%{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}",
                                "@keyframes cZxgpV{100%{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}",
                              ],
                              "toString": [Function],
                            },
                            " 1.8s linear infinite;",
                            [Function],
                            " ",
                            [Function],
                          ],
                        },
                        "displayName": "SpinnerSvg__StyledSvg",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "SpinnerSvg__StyledSvg-sc-6yts5w-1",
                        "target": "svg",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    height="50"
                    role="alert"
                    viewBox="0 0 100 100"
                    width="50"
                  >
                    <svg
                      aria-labelledby="spinner-title-3"
                      aria-live="assertive"
                      className="c2"
                      data-testid="svg"
                      height="50"
                      role="alert"
                      viewBox="0 0 100 100"
                      width="50"
                    >
                      <title
                        id="spinner-title-3"
                      >
                        Loading content
                      </title>
                      <SpinnerSvg__SvgCircle
                        cx="50"
                        cy="50"
                        fill="none"
                        r="20"
                        strokeDasharray="89, 200"
                        strokeDashoffset="0"
                        strokeLinecap="round"
                        strokeWidth="4"
                        variant="primary"
                      >
                        <StyledComponent
                          cx="50"
                          cy="50"
                          fill="none"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "SpinnerSvg__SvgCircle-sc-6yts5w-2",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "animation:",
                                  Keyframes {
                                    "id": "sc-keyframes-drFgOE",
                                    "inject": [Function],
                                    "name": "drFgOE",
                                    "rules": Array [
                                      "@-webkit-keyframes drFgOE{0%{stroke-dasharray:1,200;stroke-dashoffset:0;}50%{stroke-dasharray:89,200;stroke-dashoffset:-35;}100%{stroke-dasharray:89,200;stroke-dashoffset:-124;}}",
                                      "@keyframes drFgOE{0%{stroke-dasharray:1,200;stroke-dashoffset:0;}50%{stroke-dasharray:89,200;stroke-dashoffset:-35;}100%{stroke-dasharray:89,200;stroke-dashoffset:-124;}}",
                                    ],
                                    "toString": [Function],
                                  },
                                  " 1.7s ease-in-out infinite 0s;",
                                  [Function],
                                  " ",
                                  [Function],
                                ],
                              },
                              "displayName": "SpinnerSvg__SvgCircle",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "SpinnerSvg__SvgCircle-sc-6yts5w-2",
                              "target": "circle",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          r="20"
                          strokeDasharray="89, 200"
                          strokeDashoffset="0"
                          strokeLinecap="round"
                          strokeWidth="4"
                          variant="primary"
                        >
                          <circle
                            className="c3"
                            cx="50"
                            cy="50"
                            fill="none"
                            r="20"
                            strokeDasharray="89, 200"
                            strokeDashoffset="0"
                            strokeLinecap="round"
                            strokeWidth="4"
                          />
                        </StyledComponent>
                      </SpinnerSvg__SvgCircle>
                    </svg>
                  </StyledComponent>
                </SpinnerSvg__StyledSvg>
              </div>
            </StyledComponent>
          </SpinnerSvg__SvgContainer>
        </SpinnerSvg>
        <Spinner__ContentOverlay
          data-testid="overlay"
        >
          <StyledComponent
            data-testid="overlay"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "Spinner__ContentOverlay-sc-12sh5b7-1",
                  "isStatic": true,
                  "lastClassName": "c4",
                  "rules": Array [
                    "position: absolute;",
                    "width: 100%;",
                    "height: 100%;",
                    "z-index: 1400;",
                  ],
                },
                "displayName": "Spinner__ContentOverlay",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "Spinner__ContentOverlay-sc-12sh5b7-1",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c4"
              data-testid="overlay"
            />
          </StyledComponent>
        </Spinner__ContentOverlay>
        <Spinner__OpaqueContainer
          inert="true"
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "Spinner__OpaqueContainer-sc-12sh5b7-3",
                  "isStatic": true,
                  "lastClassName": "c5",
                  "rules": Array [
                    "opacity: 0.06;",
                  ],
                },
                "displayName": "Spinner__OpaqueContainer",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "Spinner__OpaqueContainer-sc-12sh5b7-3",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            inert="true"
          >
            <div
              className="c5"
            >
              <span
                aria-hidden="true"
                key=".0"
                tabIndex="-1"
              >
                Overlay me with the spinner
              </span>
            </div>
          </StyledComponent>
        </Spinner__OpaqueContainer>
      </div>
    </StyledComponent>
  </Spinner__SpinnerContainer>,
  .c1 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
  z-index: 1600;
}

.c2 {
  -webkit-animation: cZxgpV 1.8s linear infinite;
  animation: cZxgpV 1.8s linear infinite;
}

.c3 {
  -webkit-animation: drFgOE 1.7s ease-in-out infinite 0s;
  animation: drFgOE 1.7s ease-in-out infinite 0s;
  stroke: #2B8000;
}

.c0 {
  position: relative;
  display: block;
}

.c4 {
  position: absolute;
  width: 100%;
  height: 100%;
  z-index: 1400;
}

.c5 {
  opacity: 0.06;
}

@media (min-width:768px) {
  .c0 {
    display: inline-block;
  }
}

<StyledComponent
    aria-live="assertive"
    data-testid="container"
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "Spinner__SpinnerContainer-sc-12sh5b7-0",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            [Function],
          ],
        },
        "displayName": "Spinner__SpinnerContainer",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "Spinner__SpinnerContainer-sc-12sh5b7-0",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
    fullScreen={false}
    inline={true}
  >
    <div
      aria-live="assertive"
      className="c0"
      data-testid="container"
    >
      <SpinnerSvg
        a11yLabel="Loading content"
        overlay={true}
        size="small"
        variant="primary"
      >
        <SpinnerSvg__SvgContainer
          data-testid="spinner"
          overlay={true}
        >
          <StyledComponent
            data-testid="spinner"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "SpinnerSvg__SvgContainer-sc-6yts5w-0",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    [Function],
                  ],
                },
                "displayName": "SpinnerSvg__SvgContainer",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "SpinnerSvg__SvgContainer-sc-6yts5w-0",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            overlay={true}
          >
            <div
              className="c1"
              data-testid="spinner"
            >
              <SpinnerSvg__StyledSvg
                aria-labelledby="spinner-title-3"
                aria-live="assertive"
                data-testid="svg"
                height="50"
                role="alert"
                viewBox="0 0 100 100"
                width="50"
              >
                <StyledComponent
                  aria-labelledby="spinner-title-3"
                  aria-live="assertive"
                  data-testid="svg"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "SpinnerSvg__StyledSvg-sc-6yts5w-1",
                        "isStatic": false,
                        "lastClassName": "c2",
                        "rules": Array [
                          "animation:",
                          Keyframes {
                            "id": "sc-keyframes-cZxgpV",
                            "inject": [Function],
                            "name": "cZxgpV",
                            "rules": Array [
                              "@-webkit-keyframes cZxgpV{100%{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}",
                              "@keyframes cZxgpV{100%{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}",
                            ],
                            "toString": [Function],
                          },
                          " 1.8s linear infinite;",
                          [Function],
                          " ",
                          [Function],
                        ],
                      },
                      "displayName": "SpinnerSvg__StyledSvg",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "SpinnerSvg__StyledSvg-sc-6yts5w-1",
                      "target": "svg",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  height="50"
                  role="alert"
                  viewBox="0 0 100 100"
                  width="50"
                >
                  <svg
                    aria-labelledby="spinner-title-3"
                    aria-live="assertive"
                    className="c2"
                    data-testid="svg"
                    height="50"
                    role="alert"
                    viewBox="0 0 100 100"
                    width="50"
                  >
                    <title
                      id="spinner-title-3"
                    >
                      Loading content
                    </title>
                    <SpinnerSvg__SvgCircle
                      cx="50"
                      cy="50"
                      fill="none"
                      r="20"
                      strokeDasharray="89, 200"
                      strokeDashoffset="0"
                      strokeLinecap="round"
                      strokeWidth="4"
                      variant="primary"
                    >
                      <StyledComponent
                        cx="50"
                        cy="50"
                        fill="none"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "SpinnerSvg__SvgCircle-sc-6yts5w-2",
                              "isStatic": false,
                              "lastClassName": "c3",
                              "rules": Array [
                                "animation:",
                                Keyframes {
                                  "id": "sc-keyframes-drFgOE",
                                  "inject": [Function],
                                  "name": "drFgOE",
                                  "rules": Array [
                                    "@-webkit-keyframes drFgOE{0%{stroke-dasharray:1,200;stroke-dashoffset:0;}50%{stroke-dasharray:89,200;stroke-dashoffset:-35;}100%{stroke-dasharray:89,200;stroke-dashoffset:-124;}}",
                                    "@keyframes drFgOE{0%{stroke-dasharray:1,200;stroke-dashoffset:0;}50%{stroke-dasharray:89,200;stroke-dashoffset:-35;}100%{stroke-dasharray:89,200;stroke-dashoffset:-124;}}",
                                  ],
                                  "toString": [Function],
                                },
                                " 1.7s ease-in-out infinite 0s;",
                                [Function],
                                " ",
                                [Function],
                              ],
                            },
                            "displayName": "SpinnerSvg__SvgCircle",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "SpinnerSvg__SvgCircle-sc-6yts5w-2",
                            "target": "circle",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        r="20"
                        strokeDasharray="89, 200"
                        strokeDashoffset="0"
                        strokeLinecap="round"
                        strokeWidth="4"
                        variant="primary"
                      >
                        <circle
                          className="c3"
                          cx="50"
                          cy="50"
                          fill="none"
                          r="20"
                          strokeDasharray="89, 200"
                          strokeDashoffset="0"
                          strokeLinecap="round"
                          strokeWidth="4"
                        />
                      </StyledComponent>
                    </SpinnerSvg__SvgCircle>
                  </svg>
                </StyledComponent>
              </SpinnerSvg__StyledSvg>
            </div>
          </StyledComponent>
        </SpinnerSvg__SvgContainer>
      </SpinnerSvg>
      <Spinner__ContentOverlay
        data-testid="overlay"
      >
        <StyledComponent
          data-testid="overlay"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "Spinner__ContentOverlay-sc-12sh5b7-1",
                "isStatic": true,
                "lastClassName": "c4",
                "rules": Array [
                  "position: absolute;",
                  "width: 100%;",
                  "height: 100%;",
                  "z-index: 1400;",
                ],
              },
              "displayName": "Spinner__ContentOverlay",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "Spinner__ContentOverlay-sc-12sh5b7-1",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div
            className="c4"
            data-testid="overlay"
          />
        </StyledComponent>
      </Spinner__ContentOverlay>
      <Spinner__OpaqueContainer
        inert="true"
      >
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "Spinner__OpaqueContainer-sc-12sh5b7-3",
                "isStatic": true,
                "lastClassName": "c5",
                "rules": Array [
                  "opacity: 0.06;",
                ],
              },
              "displayName": "Spinner__OpaqueContainer",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "Spinner__OpaqueContainer-sc-12sh5b7-3",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          inert="true"
        >
          <div
            className="c5"
          >
            <span
              aria-hidden="true"
              key=".0"
              tabIndex="-1"
            >
              Overlay me with the spinner
            </span>
          </div>
        </StyledComponent>
      </Spinner__OpaqueContainer>
    </div>
  </StyledComponent>,
  .c1 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
  z-index: 1600;
}

.c2 {
  -webkit-animation: cZxgpV 1.8s linear infinite;
  animation: cZxgpV 1.8s linear infinite;
}

.c3 {
  -webkit-animation: drFgOE 1.7s ease-in-out infinite 0s;
  animation: drFgOE 1.7s ease-in-out infinite 0s;
  stroke: #2B8000;
}

.c0 {
  position: relative;
  display: block;
}

.c4 {
  position: absolute;
  width: 100%;
  height: 100%;
  z-index: 1400;
}

.c5 {
  opacity: 0.06;
}

@media (min-width:768px) {
  .c0 {
    display: inline-block;
  }
}

<div
    aria-live="assertive"
    className="c0"
    data-testid="container"
  >
    <SpinnerSvg
      a11yLabel="Loading content"
      overlay={true}
      size="small"
      variant="primary"
    >
      <SpinnerSvg__SvgContainer
        data-testid="spinner"
        overlay={true}
      >
        <StyledComponent
          data-testid="spinner"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "SpinnerSvg__SvgContainer-sc-6yts5w-0",
                "isStatic": false,
                "lastClassName": "c1",
                "rules": Array [
                  [Function],
                ],
              },
              "displayName": "SpinnerSvg__SvgContainer",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "SpinnerSvg__SvgContainer-sc-6yts5w-0",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          overlay={true}
        >
          <div
            className="c1"
            data-testid="spinner"
          >
            <SpinnerSvg__StyledSvg
              aria-labelledby="spinner-title-3"
              aria-live="assertive"
              data-testid="svg"
              height="50"
              role="alert"
              viewBox="0 0 100 100"
              width="50"
            >
              <StyledComponent
                aria-labelledby="spinner-title-3"
                aria-live="assertive"
                data-testid="svg"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "SpinnerSvg__StyledSvg-sc-6yts5w-1",
                      "isStatic": false,
                      "lastClassName": "c2",
                      "rules": Array [
                        "animation:",
                        Keyframes {
                          "id": "sc-keyframes-cZxgpV",
                          "inject": [Function],
                          "name": "cZxgpV",
                          "rules": Array [
                            "@-webkit-keyframes cZxgpV{100%{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}",
                            "@keyframes cZxgpV{100%{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}",
                          ],
                          "toString": [Function],
                        },
                        " 1.8s linear infinite;",
                        [Function],
                        " ",
                        [Function],
                      ],
                    },
                    "displayName": "SpinnerSvg__StyledSvg",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "SpinnerSvg__StyledSvg-sc-6yts5w-1",
                    "target": "svg",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                height="50"
                role="alert"
                viewBox="0 0 100 100"
                width="50"
              >
                <svg
                  aria-labelledby="spinner-title-3"
                  aria-live="assertive"
                  className="c2"
                  data-testid="svg"
                  height="50"
                  role="alert"
                  viewBox="0 0 100 100"
                  width="50"
                >
                  <title
                    id="spinner-title-3"
                  >
                    Loading content
                  </title>
                  <SpinnerSvg__SvgCircle
                    cx="50"
                    cy="50"
                    fill="none"
                    r="20"
                    strokeDasharray="89, 200"
                    strokeDashoffset="0"
                    strokeLinecap="round"
                    strokeWidth="4"
                    variant="primary"
                  >
                    <StyledComponent
                      cx="50"
                      cy="50"
                      fill="none"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "SpinnerSvg__SvgCircle-sc-6yts5w-2",
                            "isStatic": false,
                            "lastClassName": "c3",
                            "rules": Array [
                              "animation:",
                              Keyframes {
                                "id": "sc-keyframes-drFgOE",
                                "inject": [Function],
                                "name": "drFgOE",
                                "rules": Array [
                                  "@-webkit-keyframes drFgOE{0%{stroke-dasharray:1,200;stroke-dashoffset:0;}50%{stroke-dasharray:89,200;stroke-dashoffset:-35;}100%{stroke-dasharray:89,200;stroke-dashoffset:-124;}}",
                                  "@keyframes drFgOE{0%{stroke-dasharray:1,200;stroke-dashoffset:0;}50%{stroke-dasharray:89,200;stroke-dashoffset:-35;}100%{stroke-dasharray:89,200;stroke-dashoffset:-124;}}",
                                ],
                                "toString": [Function],
                              },
                              " 1.7s ease-in-out infinite 0s;",
                              [Function],
                              " ",
                              [Function],
                            ],
                          },
                          "displayName": "SpinnerSvg__SvgCircle",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "SpinnerSvg__SvgCircle-sc-6yts5w-2",
                          "target": "circle",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      r="20"
                      strokeDasharray="89, 200"
                      strokeDashoffset="0"
                      strokeLinecap="round"
                      strokeWidth="4"
                      variant="primary"
                    >
                      <circle
                        className="c3"
                        cx="50"
                        cy="50"
                        fill="none"
                        r="20"
                        strokeDasharray="89, 200"
                        strokeDashoffset="0"
                        strokeLinecap="round"
                        strokeWidth="4"
                      />
                    </StyledComponent>
                  </SpinnerSvg__SvgCircle>
                </svg>
              </StyledComponent>
            </SpinnerSvg__StyledSvg>
          </div>
        </StyledComponent>
      </SpinnerSvg__SvgContainer>
    </SpinnerSvg>
    <Spinner__ContentOverlay
      data-testid="overlay"
    >
      <StyledComponent
        data-testid="overlay"
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Spinner__ContentOverlay-sc-12sh5b7-1",
              "isStatic": true,
              "lastClassName": "c4",
              "rules": Array [
                "position: absolute;",
                "width: 100%;",
                "height: 100%;",
                "z-index: 1400;",
              ],
            },
            "displayName": "Spinner__ContentOverlay",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Spinner__ContentOverlay-sc-12sh5b7-1",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className="c4"
          data-testid="overlay"
        />
      </StyledComponent>
    </Spinner__ContentOverlay>
    <Spinner__OpaqueContainer
      inert="true"
    >
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Spinner__OpaqueContainer-sc-12sh5b7-3",
              "isStatic": true,
              "lastClassName": "c5",
              "rules": Array [
                "opacity: 0.06;",
              ],
            },
            "displayName": "Spinner__OpaqueContainer",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Spinner__OpaqueContainer-sc-12sh5b7-3",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        inert="true"
      >
        <div
          className="c5"
        >
          <span
            aria-hidden="true"
            key=".0"
            tabIndex="-1"
          >
            Overlay me with the spinner
          </span>
        </div>
      </StyledComponent>
    </Spinner__OpaqueContainer>
  </div>,
]
`;

exports[`Spinner renders inline 1`] = `
Array [
  .c5 {
  color: #2a2c2e;
  word-wrap: break-word;
  font-size: 0.875rem;
  -webkit-letter-spacing: -0.6px;
  -moz-letter-spacing: -0.6px;
  -ms-letter-spacing: -0.6px;
  letter-spacing: -0.6px;
  line-height: 1.42857;
  font-weight: 500;
}

.c5 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

.c1 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
  z-index: 1600;
}

.c2 {
  -webkit-animation: cZxgpV 1.8s linear infinite;
  animation: cZxgpV 1.8s linear infinite;
}

.c3 {
  -webkit-animation: drFgOE 1.7s ease-in-out infinite 0s;
  animation: drFgOE 1.7s ease-in-out infinite 0s;
  stroke: #2B8000;
}

.c4 {
  margin-top: -1.5rem;
}

.c0 {
  position: relative;
  display: block;
}

.c6 {
  position: absolute;
  width: 100%;
  height: 100%;
  z-index: 1400;
}

.c7 {
  opacity: 0.06;
}

@media (min-width:768px) {
  .c0 {
    display: inline-block;
  }
}

<Spinner__SpinnerContainer
    aria-live="assertive"
    data-testid="container"
    fullScreen={false}
    inline={true}
  >
    <StyledComponent
      aria-live="assertive"
      data-testid="container"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "Spinner__SpinnerContainer-sc-12sh5b7-0",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              [Function],
            ],
          },
          "displayName": "Spinner__SpinnerContainer",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "Spinner__SpinnerContainer-sc-12sh5b7-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      fullScreen={false}
      inline={true}
    >
      <div
        aria-live="assertive"
        className="c0"
        data-testid="container"
      >
        <SpinnerSvg
          a11yLabel="Loading content"
          overlay={true}
          size="large"
          tip="Loading content"
          variant="primary"
        >
          <SpinnerSvg__SvgContainer
            data-testid="spinner"
            overlay={true}
          >
            <StyledComponent
              data-testid="spinner"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "SpinnerSvg__SvgContainer-sc-6yts5w-0",
                    "isStatic": false,
                    "lastClassName": "c1",
                    "rules": Array [
                      [Function],
                    ],
                  },
                  "displayName": "SpinnerSvg__SvgContainer",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "SpinnerSvg__SvgContainer-sc-6yts5w-0",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              overlay={true}
            >
              <div
                className="c1"
                data-testid="spinner"
              >
                <SpinnerSvg__StyledSvg
                  aria-labelledby="spinner-title-6"
                  aria-live="assertive"
                  data-testid="svg"
                  height="100"
                  role="alert"
                  viewBox="0 0 100 100"
                  width="100"
                >
                  <StyledComponent
                    aria-labelledby="spinner-title-6"
                    aria-live="assertive"
                    data-testid="svg"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "SpinnerSvg__StyledSvg-sc-6yts5w-1",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "animation:",
                            Keyframes {
                              "id": "sc-keyframes-cZxgpV",
                              "inject": [Function],
                              "name": "cZxgpV",
                              "rules": Array [
                                "@-webkit-keyframes cZxgpV{100%{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}",
                                "@keyframes cZxgpV{100%{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}",
                              ],
                              "toString": [Function],
                            },
                            " 1.8s linear infinite;",
                            [Function],
                            " ",
                            [Function],
                          ],
                        },
                        "displayName": "SpinnerSvg__StyledSvg",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "SpinnerSvg__StyledSvg-sc-6yts5w-1",
                        "target": "svg",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    height="100"
                    role="alert"
                    viewBox="0 0 100 100"
                    width="100"
                  >
                    <svg
                      aria-labelledby="spinner-title-6"
                      aria-live="assertive"
                      className="c2"
                      data-testid="svg"
                      height="100"
                      role="alert"
                      viewBox="0 0 100 100"
                      width="100"
                    >
                      <title
                        id="spinner-title-6"
                      >
                        Loading content
                      </title>
                      <SpinnerSvg__SvgCircle
                        cx="50"
                        cy="50"
                        fill="none"
                        r="20"
                        strokeDasharray="89, 200"
                        strokeDashoffset="0"
                        strokeLinecap="round"
                        strokeWidth="4"
                        variant="primary"
                      >
                        <StyledComponent
                          cx="50"
                          cy="50"
                          fill="none"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "SpinnerSvg__SvgCircle-sc-6yts5w-2",
                                "isStatic": false,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "animation:",
                                  Keyframes {
                                    "id": "sc-keyframes-drFgOE",
                                    "inject": [Function],
                                    "name": "drFgOE",
                                    "rules": Array [
                                      "@-webkit-keyframes drFgOE{0%{stroke-dasharray:1,200;stroke-dashoffset:0;}50%{stroke-dasharray:89,200;stroke-dashoffset:-35;}100%{stroke-dasharray:89,200;stroke-dashoffset:-124;}}",
                                      "@keyframes drFgOE{0%{stroke-dasharray:1,200;stroke-dashoffset:0;}50%{stroke-dasharray:89,200;stroke-dashoffset:-35;}100%{stroke-dasharray:89,200;stroke-dashoffset:-124;}}",
                                    ],
                                    "toString": [Function],
                                  },
                                  " 1.7s ease-in-out infinite 0s;",
                                  [Function],
                                  " ",
                                  [Function],
                                ],
                              },
                              "displayName": "SpinnerSvg__SvgCircle",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "SpinnerSvg__SvgCircle-sc-6yts5w-2",
                              "target": "circle",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          r="20"
                          strokeDasharray="89, 200"
                          strokeDashoffset="0"
                          strokeLinecap="round"
                          strokeWidth="4"
                          variant="primary"
                        >
                          <circle
                            className="c3"
                            cx="50"
                            cy="50"
                            fill="none"
                            r="20"
                            strokeDasharray="89, 200"
                            strokeDashoffset="0"
                            strokeLinecap="round"
                            strokeWidth="4"
                          />
                        </StyledComponent>
                      </SpinnerSvg__SvgCircle>
                    </svg>
                  </StyledComponent>
                </SpinnerSvg__StyledSvg>
                <SpinnerSvg__TipContainer
                  tabIndex="-1"
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "SpinnerSvg__TipContainer-sc-6yts5w-3",
                          "isStatic": true,
                          "lastClassName": "c4",
                          "rules": Array [
                            "margin-top: -1.5rem;",
                          ],
                        },
                        "displayName": "SpinnerSvg__TipContainer",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "SpinnerSvg__TipContainer-sc-6yts5w-3",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    tabIndex="-1"
                  >
                    <div
                      className="c4"
                      tabIndex="-1"
                    >
                      <Text
                        block={false}
                        bold={false}
                        invert={false}
                        size="small"
                      >
                        <Text__StyledText
                          block={false}
                          bold={false}
                          invert={false}
                          size="small"
                        >
                          <StyledComponent
                            block={false}
                            bold={false}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "Text__StyledText-sc-1m0rr67-0",
                                  "isStatic": false,
                                  "lastClassName": "c5",
                                  "rules": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    "sup {",
                                    "top: -0.5em;",
                                    "font-size: 0.875rem;",
                                    "position: relative;",
                                    "vertical-align: baseline;",
                                    "padding-left: 0.1em;",
                                    "}",
                                  ],
                                },
                                "displayName": "Text__StyledText",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "Text__StyledText-sc-1m0rr67-0",
                                "target": "span",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            invert={false}
                            size="small"
                          >
                            <span
                              className="c5"
                              size="small"
                            >
                              Loading content
                            </span>
                          </StyledComponent>
                        </Text__StyledText>
                      </Text>
                    </div>
                  </StyledComponent>
                </SpinnerSvg__TipContainer>
              </div>
            </StyledComponent>
          </SpinnerSvg__SvgContainer>
        </SpinnerSvg>
        <Spinner__ContentOverlay
          data-testid="overlay"
        >
          <StyledComponent
            data-testid="overlay"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "Spinner__ContentOverlay-sc-12sh5b7-1",
                  "isStatic": true,
                  "lastClassName": "c6",
                  "rules": Array [
                    "position: absolute;",
                    "width: 100%;",
                    "height: 100%;",
                    "z-index: 1400;",
                  ],
                },
                "displayName": "Spinner__ContentOverlay",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "Spinner__ContentOverlay-sc-12sh5b7-1",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c6"
              data-testid="overlay"
            />
          </StyledComponent>
        </Spinner__ContentOverlay>
        <Spinner__OpaqueContainer
          inert="true"
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "Spinner__OpaqueContainer-sc-12sh5b7-3",
                  "isStatic": true,
                  "lastClassName": "c7",
                  "rules": Array [
                    "opacity: 0.06;",
                  ],
                },
                "displayName": "Spinner__OpaqueContainer",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "Spinner__OpaqueContainer-sc-12sh5b7-3",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            inert="true"
          >
            <div
              className="c7"
            >
              <span
                aria-hidden="true"
                key=".0"
                tabIndex="-1"
              >
                Overlay me with the spinner
              </span>
            </div>
          </StyledComponent>
        </Spinner__OpaqueContainer>
      </div>
    </StyledComponent>
  </Spinner__SpinnerContainer>,
  .c5 {
  color: #2a2c2e;
  word-wrap: break-word;
  font-size: 0.875rem;
  -webkit-letter-spacing: -0.6px;
  -moz-letter-spacing: -0.6px;
  -ms-letter-spacing: -0.6px;
  letter-spacing: -0.6px;
  line-height: 1.42857;
  font-weight: 500;
}

.c5 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

.c1 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
  z-index: 1600;
}

.c2 {
  -webkit-animation: cZxgpV 1.8s linear infinite;
  animation: cZxgpV 1.8s linear infinite;
}

.c3 {
  -webkit-animation: drFgOE 1.7s ease-in-out infinite 0s;
  animation: drFgOE 1.7s ease-in-out infinite 0s;
  stroke: #2B8000;
}

.c4 {
  margin-top: -1.5rem;
}

.c0 {
  position: relative;
  display: block;
}

.c6 {
  position: absolute;
  width: 100%;
  height: 100%;
  z-index: 1400;
}

.c7 {
  opacity: 0.06;
}

@media (min-width:768px) {
  .c0 {
    display: inline-block;
  }
}

<StyledComponent
    aria-live="assertive"
    data-testid="container"
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "Spinner__SpinnerContainer-sc-12sh5b7-0",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            [Function],
          ],
        },
        "displayName": "Spinner__SpinnerContainer",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "Spinner__SpinnerContainer-sc-12sh5b7-0",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
    fullScreen={false}
    inline={true}
  >
    <div
      aria-live="assertive"
      className="c0"
      data-testid="container"
    >
      <SpinnerSvg
        a11yLabel="Loading content"
        overlay={true}
        size="large"
        tip="Loading content"
        variant="primary"
      >
        <SpinnerSvg__SvgContainer
          data-testid="spinner"
          overlay={true}
        >
          <StyledComponent
            data-testid="spinner"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "SpinnerSvg__SvgContainer-sc-6yts5w-0",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    [Function],
                  ],
                },
                "displayName": "SpinnerSvg__SvgContainer",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "SpinnerSvg__SvgContainer-sc-6yts5w-0",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            overlay={true}
          >
            <div
              className="c1"
              data-testid="spinner"
            >
              <SpinnerSvg__StyledSvg
                aria-labelledby="spinner-title-6"
                aria-live="assertive"
                data-testid="svg"
                height="100"
                role="alert"
                viewBox="0 0 100 100"
                width="100"
              >
                <StyledComponent
                  aria-labelledby="spinner-title-6"
                  aria-live="assertive"
                  data-testid="svg"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "SpinnerSvg__StyledSvg-sc-6yts5w-1",
                        "isStatic": false,
                        "lastClassName": "c2",
                        "rules": Array [
                          "animation:",
                          Keyframes {
                            "id": "sc-keyframes-cZxgpV",
                            "inject": [Function],
                            "name": "cZxgpV",
                            "rules": Array [
                              "@-webkit-keyframes cZxgpV{100%{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}",
                              "@keyframes cZxgpV{100%{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}",
                            ],
                            "toString": [Function],
                          },
                          " 1.8s linear infinite;",
                          [Function],
                          " ",
                          [Function],
                        ],
                      },
                      "displayName": "SpinnerSvg__StyledSvg",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "SpinnerSvg__StyledSvg-sc-6yts5w-1",
                      "target": "svg",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  height="100"
                  role="alert"
                  viewBox="0 0 100 100"
                  width="100"
                >
                  <svg
                    aria-labelledby="spinner-title-6"
                    aria-live="assertive"
                    className="c2"
                    data-testid="svg"
                    height="100"
                    role="alert"
                    viewBox="0 0 100 100"
                    width="100"
                  >
                    <title
                      id="spinner-title-6"
                    >
                      Loading content
                    </title>
                    <SpinnerSvg__SvgCircle
                      cx="50"
                      cy="50"
                      fill="none"
                      r="20"
                      strokeDasharray="89, 200"
                      strokeDashoffset="0"
                      strokeLinecap="round"
                      strokeWidth="4"
                      variant="primary"
                    >
                      <StyledComponent
                        cx="50"
                        cy="50"
                        fill="none"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "SpinnerSvg__SvgCircle-sc-6yts5w-2",
                              "isStatic": false,
                              "lastClassName": "c3",
                              "rules": Array [
                                "animation:",
                                Keyframes {
                                  "id": "sc-keyframes-drFgOE",
                                  "inject": [Function],
                                  "name": "drFgOE",
                                  "rules": Array [
                                    "@-webkit-keyframes drFgOE{0%{stroke-dasharray:1,200;stroke-dashoffset:0;}50%{stroke-dasharray:89,200;stroke-dashoffset:-35;}100%{stroke-dasharray:89,200;stroke-dashoffset:-124;}}",
                                    "@keyframes drFgOE{0%{stroke-dasharray:1,200;stroke-dashoffset:0;}50%{stroke-dasharray:89,200;stroke-dashoffset:-35;}100%{stroke-dasharray:89,200;stroke-dashoffset:-124;}}",
                                  ],
                                  "toString": [Function],
                                },
                                " 1.7s ease-in-out infinite 0s;",
                                [Function],
                                " ",
                                [Function],
                              ],
                            },
                            "displayName": "SpinnerSvg__SvgCircle",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "SpinnerSvg__SvgCircle-sc-6yts5w-2",
                            "target": "circle",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        r="20"
                        strokeDasharray="89, 200"
                        strokeDashoffset="0"
                        strokeLinecap="round"
                        strokeWidth="4"
                        variant="primary"
                      >
                        <circle
                          className="c3"
                          cx="50"
                          cy="50"
                          fill="none"
                          r="20"
                          strokeDasharray="89, 200"
                          strokeDashoffset="0"
                          strokeLinecap="round"
                          strokeWidth="4"
                        />
                      </StyledComponent>
                    </SpinnerSvg__SvgCircle>
                  </svg>
                </StyledComponent>
              </SpinnerSvg__StyledSvg>
              <SpinnerSvg__TipContainer
                tabIndex="-1"
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "SpinnerSvg__TipContainer-sc-6yts5w-3",
                        "isStatic": true,
                        "lastClassName": "c4",
                        "rules": Array [
                          "margin-top: -1.5rem;",
                        ],
                      },
                      "displayName": "SpinnerSvg__TipContainer",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "SpinnerSvg__TipContainer-sc-6yts5w-3",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  tabIndex="-1"
                >
                  <div
                    className="c4"
                    tabIndex="-1"
                  >
                    <Text
                      block={false}
                      bold={false}
                      invert={false}
                      size="small"
                    >
                      <Text__StyledText
                        block={false}
                        bold={false}
                        invert={false}
                        size="small"
                      >
                        <StyledComponent
                          block={false}
                          bold={false}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Text__StyledText-sc-1m0rr67-0",
                                "isStatic": false,
                                "lastClassName": "c5",
                                "rules": Array [
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  [Function],
                                  "sup {",
                                  "top: -0.5em;",
                                  "font-size: 0.875rem;",
                                  "position: relative;",
                                  "vertical-align: baseline;",
                                  "padding-left: 0.1em;",
                                  "}",
                                ],
                              },
                              "displayName": "Text__StyledText",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "Text__StyledText-sc-1m0rr67-0",
                              "target": "span",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          invert={false}
                          size="small"
                        >
                          <span
                            className="c5"
                            size="small"
                          >
                            Loading content
                          </span>
                        </StyledComponent>
                      </Text__StyledText>
                    </Text>
                  </div>
                </StyledComponent>
              </SpinnerSvg__TipContainer>
            </div>
          </StyledComponent>
        </SpinnerSvg__SvgContainer>
      </SpinnerSvg>
      <Spinner__ContentOverlay
        data-testid="overlay"
      >
        <StyledComponent
          data-testid="overlay"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "Spinner__ContentOverlay-sc-12sh5b7-1",
                "isStatic": true,
                "lastClassName": "c6",
                "rules": Array [
                  "position: absolute;",
                  "width: 100%;",
                  "height: 100%;",
                  "z-index: 1400;",
                ],
              },
              "displayName": "Spinner__ContentOverlay",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "Spinner__ContentOverlay-sc-12sh5b7-1",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <div
            className="c6"
            data-testid="overlay"
          />
        </StyledComponent>
      </Spinner__ContentOverlay>
      <Spinner__OpaqueContainer
        inert="true"
      >
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "Spinner__OpaqueContainer-sc-12sh5b7-3",
                "isStatic": true,
                "lastClassName": "c7",
                "rules": Array [
                  "opacity: 0.06;",
                ],
              },
              "displayName": "Spinner__OpaqueContainer",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "Spinner__OpaqueContainer-sc-12sh5b7-3",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          inert="true"
        >
          <div
            className="c7"
          >
            <span
              aria-hidden="true"
              key=".0"
              tabIndex="-1"
            >
              Overlay me with the spinner
            </span>
          </div>
        </StyledComponent>
      </Spinner__OpaqueContainer>
    </div>
  </StyledComponent>,
  .c5 {
  color: #2a2c2e;
  word-wrap: break-word;
  font-size: 0.875rem;
  -webkit-letter-spacing: -0.6px;
  -moz-letter-spacing: -0.6px;
  -ms-letter-spacing: -0.6px;
  letter-spacing: -0.6px;
  line-height: 1.42857;
  font-weight: 500;
}

.c5 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

.c1 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
  z-index: 1600;
}

.c2 {
  -webkit-animation: cZxgpV 1.8s linear infinite;
  animation: cZxgpV 1.8s linear infinite;
}

.c3 {
  -webkit-animation: drFgOE 1.7s ease-in-out infinite 0s;
  animation: drFgOE 1.7s ease-in-out infinite 0s;
  stroke: #2B8000;
}

.c4 {
  margin-top: -1.5rem;
}

.c0 {
  position: relative;
  display: block;
}

.c6 {
  position: absolute;
  width: 100%;
  height: 100%;
  z-index: 1400;
}

.c7 {
  opacity: 0.06;
}

@media (min-width:768px) {
  .c0 {
    display: inline-block;
  }
}

<div
    aria-live="assertive"
    className="c0"
    data-testid="container"
  >
    <SpinnerSvg
      a11yLabel="Loading content"
      overlay={true}
      size="large"
      tip="Loading content"
      variant="primary"
    >
      <SpinnerSvg__SvgContainer
        data-testid="spinner"
        overlay={true}
      >
        <StyledComponent
          data-testid="spinner"
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "SpinnerSvg__SvgContainer-sc-6yts5w-0",
                "isStatic": false,
                "lastClassName": "c1",
                "rules": Array [
                  [Function],
                ],
              },
              "displayName": "SpinnerSvg__SvgContainer",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "SpinnerSvg__SvgContainer-sc-6yts5w-0",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          overlay={true}
        >
          <div
            className="c1"
            data-testid="spinner"
          >
            <SpinnerSvg__StyledSvg
              aria-labelledby="spinner-title-6"
              aria-live="assertive"
              data-testid="svg"
              height="100"
              role="alert"
              viewBox="0 0 100 100"
              width="100"
            >
              <StyledComponent
                aria-labelledby="spinner-title-6"
                aria-live="assertive"
                data-testid="svg"
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "SpinnerSvg__StyledSvg-sc-6yts5w-1",
                      "isStatic": false,
                      "lastClassName": "c2",
                      "rules": Array [
                        "animation:",
                        Keyframes {
                          "id": "sc-keyframes-cZxgpV",
                          "inject": [Function],
                          "name": "cZxgpV",
                          "rules": Array [
                            "@-webkit-keyframes cZxgpV{100%{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}",
                            "@keyframes cZxgpV{100%{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}",
                          ],
                          "toString": [Function],
                        },
                        " 1.8s linear infinite;",
                        [Function],
                        " ",
                        [Function],
                      ],
                    },
                    "displayName": "SpinnerSvg__StyledSvg",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "SpinnerSvg__StyledSvg-sc-6yts5w-1",
                    "target": "svg",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                height="100"
                role="alert"
                viewBox="0 0 100 100"
                width="100"
              >
                <svg
                  aria-labelledby="spinner-title-6"
                  aria-live="assertive"
                  className="c2"
                  data-testid="svg"
                  height="100"
                  role="alert"
                  viewBox="0 0 100 100"
                  width="100"
                >
                  <title
                    id="spinner-title-6"
                  >
                    Loading content
                  </title>
                  <SpinnerSvg__SvgCircle
                    cx="50"
                    cy="50"
                    fill="none"
                    r="20"
                    strokeDasharray="89, 200"
                    strokeDashoffset="0"
                    strokeLinecap="round"
                    strokeWidth="4"
                    variant="primary"
                  >
                    <StyledComponent
                      cx="50"
                      cy="50"
                      fill="none"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "SpinnerSvg__SvgCircle-sc-6yts5w-2",
                            "isStatic": false,
                            "lastClassName": "c3",
                            "rules": Array [
                              "animation:",
                              Keyframes {
                                "id": "sc-keyframes-drFgOE",
                                "inject": [Function],
                                "name": "drFgOE",
                                "rules": Array [
                                  "@-webkit-keyframes drFgOE{0%{stroke-dasharray:1,200;stroke-dashoffset:0;}50%{stroke-dasharray:89,200;stroke-dashoffset:-35;}100%{stroke-dasharray:89,200;stroke-dashoffset:-124;}}",
                                  "@keyframes drFgOE{0%{stroke-dasharray:1,200;stroke-dashoffset:0;}50%{stroke-dasharray:89,200;stroke-dashoffset:-35;}100%{stroke-dasharray:89,200;stroke-dashoffset:-124;}}",
                                ],
                                "toString": [Function],
                              },
                              " 1.7s ease-in-out infinite 0s;",
                              [Function],
                              " ",
                              [Function],
                            ],
                          },
                          "displayName": "SpinnerSvg__SvgCircle",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "SpinnerSvg__SvgCircle-sc-6yts5w-2",
                          "target": "circle",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      r="20"
                      strokeDasharray="89, 200"
                      strokeDashoffset="0"
                      strokeLinecap="round"
                      strokeWidth="4"
                      variant="primary"
                    >
                      <circle
                        className="c3"
                        cx="50"
                        cy="50"
                        fill="none"
                        r="20"
                        strokeDasharray="89, 200"
                        strokeDashoffset="0"
                        strokeLinecap="round"
                        strokeWidth="4"
                      />
                    </StyledComponent>
                  </SpinnerSvg__SvgCircle>
                </svg>
              </StyledComponent>
            </SpinnerSvg__StyledSvg>
            <SpinnerSvg__TipContainer
              tabIndex="-1"
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "SpinnerSvg__TipContainer-sc-6yts5w-3",
                      "isStatic": true,
                      "lastClassName": "c4",
                      "rules": Array [
                        "margin-top: -1.5rem;",
                      ],
                    },
                    "displayName": "SpinnerSvg__TipContainer",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "SpinnerSvg__TipContainer-sc-6yts5w-3",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                tabIndex="-1"
              >
                <div
                  className="c4"
                  tabIndex="-1"
                >
                  <Text
                    block={false}
                    bold={false}
                    invert={false}
                    size="small"
                  >
                    <Text__StyledText
                      block={false}
                      bold={false}
                      invert={false}
                      size="small"
                    >
                      <StyledComponent
                        block={false}
                        bold={false}
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "Text__StyledText-sc-1m0rr67-0",
                              "isStatic": false,
                              "lastClassName": "c5",
                              "rules": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                "sup {",
                                "top: -0.5em;",
                                "font-size: 0.875rem;",
                                "position: relative;",
                                "vertical-align: baseline;",
                                "padding-left: 0.1em;",
                                "}",
                              ],
                            },
                            "displayName": "Text__StyledText",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "Text__StyledText-sc-1m0rr67-0",
                            "target": "span",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        invert={false}
                        size="small"
                      >
                        <span
                          className="c5"
                          size="small"
                        >
                          Loading content
                        </span>
                      </StyledComponent>
                    </Text__StyledText>
                  </Text>
                </div>
              </StyledComponent>
            </SpinnerSvg__TipContainer>
          </div>
        </StyledComponent>
      </SpinnerSvg__SvgContainer>
    </SpinnerSvg>
    <Spinner__ContentOverlay
      data-testid="overlay"
    >
      <StyledComponent
        data-testid="overlay"
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Spinner__ContentOverlay-sc-12sh5b7-1",
              "isStatic": true,
              "lastClassName": "c6",
              "rules": Array [
                "position: absolute;",
                "width: 100%;",
                "height: 100%;",
                "z-index: 1400;",
              ],
            },
            "displayName": "Spinner__ContentOverlay",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Spinner__ContentOverlay-sc-12sh5b7-1",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className="c6"
          data-testid="overlay"
        />
      </StyledComponent>
    </Spinner__ContentOverlay>
    <Spinner__OpaqueContainer
      inert="true"
    >
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Spinner__OpaqueContainer-sc-12sh5b7-3",
              "isStatic": true,
              "lastClassName": "c7",
              "rules": Array [
                "opacity: 0.06;",
              ],
            },
            "displayName": "Spinner__OpaqueContainer",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Spinner__OpaqueContainer-sc-12sh5b7-3",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        inert="true"
      >
        <div
          className="c7"
        >
          <span
            aria-hidden="true"
            key=".0"
            tabIndex="-1"
          >
            Overlay me with the spinner
          </span>
        </div>
      </StyledComponent>
    </Spinner__OpaqueContainer>
  </div>,
]
`;

exports[`Spinner renders with children 1`] = `
.c5 {
  color: #2a2c2e;
  word-wrap: break-word;
  font-size: 0.875rem;
  -webkit-letter-spacing: -0.6px;
  -moz-letter-spacing: -0.6px;
  -ms-letter-spacing: -0.6px;
  letter-spacing: -0.6px;
  line-height: 1.42857;
  font-weight: 500;
}

.c5 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

.c1 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
  z-index: 1600;
}

.c2 {
  -webkit-animation: cZxgpV 1.8s linear infinite;
  animation: cZxgpV 1.8s linear infinite;
}

.c3 {
  -webkit-animation: drFgOE 1.7s ease-in-out infinite 0s;
  animation: drFgOE 1.7s ease-in-out infinite 0s;
  stroke: #2B8000;
}

.c4 {
  margin-top: -1.5rem;
}

.c0 {
  position: relative;
}

.c6 {
  position: absolute;
  width: 100%;
  height: 100%;
  z-index: 1400;
}

.c7 {
  opacity: 0.06;
}

<div
  aria-live="assertive"
  class="c0"
  data-testid="container"
>
  <div
    class="c1"
    data-testid="spinner"
  >
    <svg
      aria-labelledby="spinner-title-2"
      aria-live="assertive"
      class="c2"
      data-testid="svg"
      height="100"
      role="alert"
      viewBox="0 0 100 100"
      width="100"
    >
      <title
        id="spinner-title-2"
      >
        Loading content
      </title>
      <circle
        class="c3"
        cx="50"
        cy="50"
        fill="none"
        r="20"
        stroke-dasharray="89, 200"
        stroke-dashoffset="0"
        stroke-linecap="round"
        stroke-width="4"
      />
    </svg>
    <div
      class="c4"
      tabindex="-1"
    >
      <span
        class="c5"
      >
        Loading content
      </span>
    </div>
  </div>
  <div
    class="c6"
    data-testid="overlay"
  />
  <div
    class="c7"
  >
    <span
      aria-hidden="true"
      tabindex="-1"
    >
      Overlay me with the spinner
    </span>
  </div>
</div>
`;
