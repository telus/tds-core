// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Notification /> can have a variant 1`] = `
.c4 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-flex-basis: 0;
  -ms-flex-preferred-size: 0;
  flex-basis: 0;
  max-width: 100%;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  padding-left: 1rem;
  padding-right: 1rem;
}

.c5 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-flex-basis: 0;
  -ms-flex-preferred-size: 0;
  flex-basis: 0;
  max-width: 100%;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  padding-left: 0;
  padding-right: 0;
}

.c3 {
  width: 100%;
  margin: 0 auto;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin: 0 auto;
  width: 100%;
}

.c7 {
  color: #2a2c2e;
  word-wrap: break-word;
  padding: 0;
  margin: 0;
  word-wrap: break-word;
  font-size: 1rem;
  -webkit-letter-spacing: -0.8px;
  -moz-letter-spacing: -0.8px;
  -ms-letter-spacing: -0.8px;
  letter-spacing: -0.8px;
  line-height: 1.5;
  font-weight: 400;
  text-align: left;
}

.c7 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

.c1 {
  display: block;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c6 > *:not(:last-child) {
  margin-right: 1rem;
}

.c0 {
  position: relative;
  background-color: #f7f7f8;
}

@media (max-width:575px) {
  .c4 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:576px) {
  .c4 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:768px) {
  .c4 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:992px) {
  .c4 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:1200px) {
  .c4 {
    display: block;
    text-align: inherit;
  }
}

@media (max-width:575px) {
  .c5 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:576px) {
  .c5 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:768px) {
  .c5 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:992px) {
  .c5 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:1200px) {
  .c5 {
    display: block;
    text-align: inherit;
  }
}

@media (max-width:575px) {
  .c3 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:576px) {
  .c3 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:768px) {
  .c3 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:992px) {
  .c3 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:1200px) {
  .c3 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (max-width:575px) {
  .c2 {
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:576px) {
  .c2 {
    max-width: 36rem;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:768px) {
  .c2 {
    max-width: 48rem;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:992px) {
  .c2 {
    max-width: 62rem;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:1200px) {
  .c2 {
    max-width: 75rem;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

<Notification
  copy="en"
  dismissible={false}
  variant="instructional"
>
  <Styled(Component)
    variant="instructional"
    vertical={3}
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bZQynM",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              [Function],
            ],
          },
          "displayName": "Styled(Component)",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bZQynM",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      variant="instructional"
      vertical={3}
    >
      <Component
        className="c0"
        variant="instructional"
        vertical={3}
      >
        <Box
          className="c0"
          inline={false}
          tag="div"
          vertical={3}
        >
          <styled.div
            className="c0"
            inline={false}
            tag="div"
            vertical={3}
          >
            <StyledComponent
              className="c0"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [
                    [Function],
                  ],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-EHOje",
                    "isStatic": false,
                    "lastClassName": "c6",
                    "rules": Array [
                      [Function],
                      [Function],
                      [Function],
                      [Function],
                      [Function],
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-EHOje",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              inline={false}
              tag="div"
              vertical={3}
            >
              <div
                className="c0 sc-bZQynM c0 c1"
              >
                <FlexGrid
                  gutter={true}
                  limitWidth={true}
                  outsideGutter={true}
                >
                  <FlexGrid__StyledGrid
                    limitWidth={true}
                    outsideGutter={true}
                    reverseLevel={
                      Array [
                        false,
                        false,
                        false,
                        false,
                        false,
                      ]
                    }
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "FlexGrid__StyledGrid-sc-1da2tb5-0",
                            "isStatic": false,
                            "lastClassName": "c2",
                            "rules": Array [
                              [Function],
                            ],
                          },
                          "displayName": "FlexGrid__StyledGrid",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "FlexGrid__StyledGrid-sc-1da2tb5-0",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      limitWidth={true}
                      outsideGutter={true}
                      reverseLevel={
                        Array [
                          false,
                          false,
                          false,
                          false,
                          false,
                        ]
                      }
                    >
                      <div
                        className="c2"
                      >
                        <Row>
                          <Row__StyledRow
                            reverseLevel={
                              Array [
                                false,
                                false,
                                false,
                                false,
                                false,
                              ]
                            }
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "Row__StyledRow-sc-1goz0ht-0",
                                    "isStatic": false,
                                    "lastClassName": "c3",
                                    "rules": Array [
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Row__StyledRow",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "Row__StyledRow-sc-1goz0ht-0",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              reverseLevel={
                                Array [
                                  false,
                                  false,
                                  false,
                                  false,
                                  false,
                                ]
                              }
                            >
                              <div
                                className="c3"
                              >
                                <Col>
                                  <Col__StyledCol
                                    gutter={true}
                                    hiddenLevel={
                                      Array [
                                        false,
                                        false,
                                        false,
                                        false,
                                        false,
                                      ]
                                    }
                                    horizontalAlignLevel={
                                      Array [
                                        "inherit",
                                        "inherit",
                                        "inherit",
                                        "inherit",
                                        "inherit",
                                      ]
                                    }
                                    xs={true}
                                  >
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "Col__StyledCol-sc-15yvjc7-0",
                                            "isStatic": false,
                                            "lastClassName": "c5",
                                            "rules": Array [
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                          },
                                          "displayName": "Col__StyledCol",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "Col__StyledCol-sc-15yvjc7-0",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      gutter={true}
                                      hiddenLevel={
                                        Array [
                                          false,
                                          false,
                                          false,
                                          false,
                                          false,
                                        ]
                                      }
                                      horizontalAlignLevel={
                                        Array [
                                          "inherit",
                                          "inherit",
                                          "inherit",
                                          "inherit",
                                          "inherit",
                                        ]
                                      }
                                      xs={true}
                                    >
                                      <div
                                        className="c4"
                                      >
                                        <FlexGrid
                                          gutter={false}
                                          limitWidth={true}
                                          outsideGutter={true}
                                        >
                                          <FlexGrid__StyledGrid
                                            limitWidth={true}
                                            outsideGutter={true}
                                            reverseLevel={
                                              Array [
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                              ]
                                            }
                                          >
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "FlexGrid__StyledGrid-sc-1da2tb5-0",
                                                    "isStatic": false,
                                                    "lastClassName": "c2",
                                                    "rules": Array [
                                                      [Function],
                                                    ],
                                                  },
                                                  "displayName": "FlexGrid__StyledGrid",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "FlexGrid__StyledGrid-sc-1da2tb5-0",
                                                  "target": "div",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              limitWidth={true}
                                              outsideGutter={true}
                                              reverseLevel={
                                                Array [
                                                  false,
                                                  false,
                                                  false,
                                                  false,
                                                  false,
                                                ]
                                              }
                                            >
                                              <div
                                                className="c2"
                                              >
                                                <Row>
                                                  <Row__StyledRow
                                                    reverseLevel={
                                                      Array [
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                      ]
                                                    }
                                                  >
                                                    <StyledComponent
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "Row__StyledRow-sc-1goz0ht-0",
                                                            "isStatic": false,
                                                            "lastClassName": "c3",
                                                            "rules": Array [
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                            ],
                                                          },
                                                          "displayName": "Row__StyledRow",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "Row__StyledRow-sc-1goz0ht-0",
                                                          "target": "div",
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                      reverseLevel={
                                                        Array [
                                                          false,
                                                          false,
                                                          false,
                                                          false,
                                                          false,
                                                        ]
                                                      }
                                                    >
                                                      <div
                                                        className="c3"
                                                      >
                                                        <Col>
                                                          <Col__StyledCol
                                                            gutter={false}
                                                            hiddenLevel={
                                                              Array [
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                              ]
                                                            }
                                                            horizontalAlignLevel={
                                                              Array [
                                                                "inherit",
                                                                "inherit",
                                                                "inherit",
                                                                "inherit",
                                                                "inherit",
                                                              ]
                                                            }
                                                            xs={true}
                                                          >
                                                            <StyledComponent
                                                              forwardedComponent={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "attrs": Array [],
                                                                  "componentStyle": ComponentStyle {
                                                                    "componentId": "Col__StyledCol-sc-15yvjc7-0",
                                                                    "isStatic": false,
                                                                    "lastClassName": "c5",
                                                                    "rules": Array [
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                    ],
                                                                  },
                                                                  "displayName": "Col__StyledCol",
                                                                  "foldedComponentIds": Array [],
                                                                  "render": [Function],
                                                                  "styledComponentId": "Col__StyledCol-sc-15yvjc7-0",
                                                                  "target": "div",
                                                                  "toString": [Function],
                                                                  "warnTooManyClasses": [Function],
                                                                  "withComponent": [Function],
                                                                }
                                                              }
                                                              forwardedRef={null}
                                                              gutter={false}
                                                              hiddenLevel={
                                                                Array [
                                                                  false,
                                                                  false,
                                                                  false,
                                                                  false,
                                                                  false,
                                                                ]
                                                              }
                                                              horizontalAlignLevel={
                                                                Array [
                                                                  "inherit",
                                                                  "inherit",
                                                                  "inherit",
                                                                  "inherit",
                                                                  "inherit",
                                                                ]
                                                              }
                                                              xs={true}
                                                            >
                                                              <div
                                                                className="c5"
                                                              >
                                                                <Box
                                                                  between={3}
                                                                  inline={true}
                                                                  tag="div"
                                                                >
                                                                  <styled.div
                                                                    between={3}
                                                                    inline={true}
                                                                    tag="div"
                                                                  >
                                                                    <StyledComponent
                                                                      between={3}
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "attrs": Array [
                                                                            [Function],
                                                                          ],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "sc-EHOje",
                                                                            "isStatic": false,
                                                                            "lastClassName": "c6",
                                                                            "rules": Array [
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                            ],
                                                                          },
                                                                          "displayName": "styled.div",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "sc-EHOje",
                                                                          "target": "div",
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={null}
                                                                      inline={true}
                                                                      tag="div"
                                                                    >
                                                                      <div
                                                                        className="c6"
                                                                      >
                                                                        <Box
                                                                          between={3}
                                                                          inline={true}
                                                                          style={
                                                                            Object {
                                                                              "justifyContent": "center",
                                                                            }
                                                                          }
                                                                          tag="div"
                                                                        >
                                                                          <styled.div
                                                                            between={3}
                                                                            inline={true}
                                                                            style={
                                                                              Object {
                                                                                "justifyContent": "center",
                                                                              }
                                                                            }
                                                                            tag="div"
                                                                          >
                                                                            <StyledComponent
                                                                              between={3}
                                                                              forwardedComponent={
                                                                                Object {
                                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                                  "attrs": Array [
                                                                                    [Function],
                                                                                  ],
                                                                                  "componentStyle": ComponentStyle {
                                                                                    "componentId": "sc-EHOje",
                                                                                    "isStatic": false,
                                                                                    "lastClassName": "c6",
                                                                                    "rules": Array [
                                                                                      [Function],
                                                                                      [Function],
                                                                                      [Function],
                                                                                      [Function],
                                                                                      [Function],
                                                                                    ],
                                                                                  },
                                                                                  "displayName": "styled.div",
                                                                                  "foldedComponentIds": Array [],
                                                                                  "render": [Function],
                                                                                  "styledComponentId": "sc-EHOje",
                                                                                  "target": "div",
                                                                                  "toString": [Function],
                                                                                  "warnTooManyClasses": [Function],
                                                                                  "withComponent": [Function],
                                                                                }
                                                                              }
                                                                              forwardedRef={null}
                                                                              inline={true}
                                                                              style={
                                                                                Object {
                                                                                  "justifyContent": "center",
                                                                                }
                                                                              }
                                                                              tag="div"
                                                                            >
                                                                              <div
                                                                                className="c6"
                                                                                style={
                                                                                  Object {
                                                                                    "justifyContent": "center",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <Paragraph
                                                                                  align="left"
                                                                                  bold={false}
                                                                                  invert={false}
                                                                                  size="medium"
                                                                                >
                                                                                  <Paragraph__StyledParagraph
                                                                                    align="left"
                                                                                    bold={false}
                                                                                    invert={false}
                                                                                    size="medium"
                                                                                  >
                                                                                    <StyledComponent
                                                                                      align="left"
                                                                                      bold={false}
                                                                                      forwardedComponent={
                                                                                        Object {
                                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                                          "attrs": Array [],
                                                                                          "componentStyle": ComponentStyle {
                                                                                            "componentId": "Paragraph__StyledParagraph-efl81j-0",
                                                                                            "isStatic": false,
                                                                                            "lastClassName": "c7",
                                                                                            "rules": Array [
                                                                                              [Function],
                                                                                              "word-wrap: break-word;",
                                                                                              "padding: 0;",
                                                                                              "margin: 0;",
                                                                                              [Function],
                                                                                              [Function],
                                                                                              [Function],
                                                                                              [Function],
                                                                                              "sup {",
                                                                                              "top: -0.5em;",
                                                                                              "font-size: 0.875rem;",
                                                                                              "position: relative;",
                                                                                              "vertical-align: baseline;",
                                                                                              "padding-left: 0.1em;",
                                                                                              "}",
                                                                                            ],
                                                                                          },
                                                                                          "displayName": "Paragraph__StyledParagraph",
                                                                                          "foldedComponentIds": Array [],
                                                                                          "render": [Function],
                                                                                          "styledComponentId": "Paragraph__StyledParagraph-efl81j-0",
                                                                                          "target": "p",
                                                                                          "toString": [Function],
                                                                                          "warnTooManyClasses": [Function],
                                                                                          "withComponent": [Function],
                                                                                        }
                                                                                      }
                                                                                      forwardedRef={null}
                                                                                      invert={false}
                                                                                      size="medium"
                                                                                    >
                                                                                      <p
                                                                                        className="c7"
                                                                                        size="medium"
                                                                                      >
                                                                                        Some content
                                                                                      </p>
                                                                                    </StyledComponent>
                                                                                  </Paragraph__StyledParagraph>
                                                                                </Paragraph>
                                                                              </div>
                                                                            </StyledComponent>
                                                                          </styled.div>
                                                                        </Box>
                                                                      </div>
                                                                    </StyledComponent>
                                                                  </styled.div>
                                                                </Box>
                                                              </div>
                                                            </StyledComponent>
                                                          </Col__StyledCol>
                                                        </Col>
                                                      </div>
                                                    </StyledComponent>
                                                  </Row__StyledRow>
                                                </Row>
                                              </div>
                                            </StyledComponent>
                                          </FlexGrid__StyledGrid>
                                        </FlexGrid>
                                      </div>
                                    </StyledComponent>
                                  </Col__StyledCol>
                                </Col>
                              </div>
                            </StyledComponent>
                          </Row__StyledRow>
                        </Row>
                      </div>
                    </StyledComponent>
                  </FlexGrid__StyledGrid>
                </FlexGrid>
              </div>
            </StyledComponent>
          </styled.div>
        </Box>
      </Component>
    </StyledComponent>
  </Styled(Component)>
</Notification>
`;

exports[`<Notification /> can have a variant 2`] = `
.c4 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-flex-basis: 0;
  -ms-flex-preferred-size: 0;
  flex-basis: 0;
  max-width: 100%;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  padding-left: 1rem;
  padding-right: 1rem;
}

.c5 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-flex-basis: 0;
  -ms-flex-preferred-size: 0;
  flex-basis: 0;
  max-width: 100%;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  padding-left: 0;
  padding-right: 0;
}

.c3 {
  width: 100%;
  margin: 0 auto;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin: 0 auto;
  width: 100%;
}

.c9 {
  color: #2a2c2e;
  word-wrap: break-word;
  padding: 0;
  margin: 0;
  word-wrap: break-word;
  font-size: 1rem;
  -webkit-letter-spacing: -0.8px;
  -moz-letter-spacing: -0.8px;
  -ms-letter-spacing: -0.8px;
  letter-spacing: -0.8px;
  line-height: 1.5;
  font-weight: 400;
  text-align: left;
}

.c9 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

.c1 {
  display: block;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c6 > *:not(:last-child) {
  margin-right: 1rem;
}

.c8 {
  display: block;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.c0 {
  position: relative;
  background-color: #f4f9f2;
}

.c7 {
  line-height: 0;
}

@media (max-width:575px) {
  .c4 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:576px) {
  .c4 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:768px) {
  .c4 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:992px) {
  .c4 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:1200px) {
  .c4 {
    display: block;
    text-align: inherit;
  }
}

@media (max-width:575px) {
  .c5 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:576px) {
  .c5 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:768px) {
  .c5 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:992px) {
  .c5 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:1200px) {
  .c5 {
    display: block;
    text-align: inherit;
  }
}

@media (max-width:575px) {
  .c3 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:576px) {
  .c3 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:768px) {
  .c3 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:992px) {
  .c3 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:1200px) {
  .c3 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (max-width:575px) {
  .c2 {
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:576px) {
  .c2 {
    max-width: 36rem;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:768px) {
  .c2 {
    max-width: 48rem;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:992px) {
  .c2 {
    max-width: 62rem;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:1200px) {
  .c2 {
    max-width: 75rem;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

<Notification
  copy="en"
  dismissible={false}
  variant="success"
>
  <Styled(Component)
    variant="success"
    vertical={3}
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bZQynM",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              [Function],
            ],
          },
          "displayName": "Styled(Component)",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bZQynM",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      variant="success"
      vertical={3}
    >
      <Component
        className="c0"
        variant="success"
        vertical={3}
      >
        <Box
          className="c0"
          inline={false}
          tag="div"
          vertical={3}
        >
          <styled.div
            className="c0"
            inline={false}
            tag="div"
            vertical={3}
          >
            <StyledComponent
              className="c0"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [
                    [Function],
                  ],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-EHOje",
                    "isStatic": false,
                    "lastClassName": "c8",
                    "rules": Array [
                      [Function],
                      [Function],
                      [Function],
                      [Function],
                      [Function],
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-EHOje",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              inline={false}
              tag="div"
              vertical={3}
            >
              <div
                className="c0 sc-bZQynM c0 c1"
              >
                <FlexGrid
                  gutter={true}
                  limitWidth={true}
                  outsideGutter={true}
                >
                  <FlexGrid__StyledGrid
                    limitWidth={true}
                    outsideGutter={true}
                    reverseLevel={
                      Array [
                        false,
                        false,
                        false,
                        false,
                        false,
                      ]
                    }
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "FlexGrid__StyledGrid-sc-1da2tb5-0",
                            "isStatic": false,
                            "lastClassName": "c2",
                            "rules": Array [
                              [Function],
                            ],
                          },
                          "displayName": "FlexGrid__StyledGrid",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "FlexGrid__StyledGrid-sc-1da2tb5-0",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      limitWidth={true}
                      outsideGutter={true}
                      reverseLevel={
                        Array [
                          false,
                          false,
                          false,
                          false,
                          false,
                        ]
                      }
                    >
                      <div
                        className="c2"
                      >
                        <Row>
                          <Row__StyledRow
                            reverseLevel={
                              Array [
                                false,
                                false,
                                false,
                                false,
                                false,
                              ]
                            }
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "Row__StyledRow-sc-1goz0ht-0",
                                    "isStatic": false,
                                    "lastClassName": "c3",
                                    "rules": Array [
                                      [Function],
                                      [Function],
                                      [Function],
                                      [Function],
                                    ],
                                  },
                                  "displayName": "Row__StyledRow",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "Row__StyledRow-sc-1goz0ht-0",
                                  "target": "div",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              reverseLevel={
                                Array [
                                  false,
                                  false,
                                  false,
                                  false,
                                  false,
                                ]
                              }
                            >
                              <div
                                className="c3"
                              >
                                <Col>
                                  <Col__StyledCol
                                    gutter={true}
                                    hiddenLevel={
                                      Array [
                                        false,
                                        false,
                                        false,
                                        false,
                                        false,
                                      ]
                                    }
                                    horizontalAlignLevel={
                                      Array [
                                        "inherit",
                                        "inherit",
                                        "inherit",
                                        "inherit",
                                        "inherit",
                                      ]
                                    }
                                    xs={true}
                                  >
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "Col__StyledCol-sc-15yvjc7-0",
                                            "isStatic": false,
                                            "lastClassName": "c5",
                                            "rules": Array [
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                          },
                                          "displayName": "Col__StyledCol",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "Col__StyledCol-sc-15yvjc7-0",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      gutter={true}
                                      hiddenLevel={
                                        Array [
                                          false,
                                          false,
                                          false,
                                          false,
                                          false,
                                        ]
                                      }
                                      horizontalAlignLevel={
                                        Array [
                                          "inherit",
                                          "inherit",
                                          "inherit",
                                          "inherit",
                                          "inherit",
                                        ]
                                      }
                                      xs={true}
                                    >
                                      <div
                                        className="c4"
                                      >
                                        <FlexGrid
                                          gutter={false}
                                          limitWidth={true}
                                          outsideGutter={true}
                                        >
                                          <FlexGrid__StyledGrid
                                            limitWidth={true}
                                            outsideGutter={true}
                                            reverseLevel={
                                              Array [
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                              ]
                                            }
                                          >
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "FlexGrid__StyledGrid-sc-1da2tb5-0",
                                                    "isStatic": false,
                                                    "lastClassName": "c2",
                                                    "rules": Array [
                                                      [Function],
                                                    ],
                                                  },
                                                  "displayName": "FlexGrid__StyledGrid",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "FlexGrid__StyledGrid-sc-1da2tb5-0",
                                                  "target": "div",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              limitWidth={true}
                                              outsideGutter={true}
                                              reverseLevel={
                                                Array [
                                                  false,
                                                  false,
                                                  false,
                                                  false,
                                                  false,
                                                ]
                                              }
                                            >
                                              <div
                                                className="c2"
                                              >
                                                <Row>
                                                  <Row__StyledRow
                                                    reverseLevel={
                                                      Array [
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                        false,
                                                      ]
                                                    }
                                                  >
                                                    <StyledComponent
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "Row__StyledRow-sc-1goz0ht-0",
                                                            "isStatic": false,
                                                            "lastClassName": "c3",
                                                            "rules": Array [
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                            ],
                                                          },
                                                          "displayName": "Row__StyledRow",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "Row__StyledRow-sc-1goz0ht-0",
                                                          "target": "div",
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                      reverseLevel={
                                                        Array [
                                                          false,
                                                          false,
                                                          false,
                                                          false,
                                                          false,
                                                        ]
                                                      }
                                                    >
                                                      <div
                                                        className="c3"
                                                      >
                                                        <Col>
                                                          <Col__StyledCol
                                                            gutter={false}
                                                            hiddenLevel={
                                                              Array [
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                                false,
                                                              ]
                                                            }
                                                            horizontalAlignLevel={
                                                              Array [
                                                                "inherit",
                                                                "inherit",
                                                                "inherit",
                                                                "inherit",
                                                                "inherit",
                                                              ]
                                                            }
                                                            xs={true}
                                                          >
                                                            <StyledComponent
                                                              forwardedComponent={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "attrs": Array [],
                                                                  "componentStyle": ComponentStyle {
                                                                    "componentId": "Col__StyledCol-sc-15yvjc7-0",
                                                                    "isStatic": false,
                                                                    "lastClassName": "c5",
                                                                    "rules": Array [
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                    ],
                                                                  },
                                                                  "displayName": "Col__StyledCol",
                                                                  "foldedComponentIds": Array [],
                                                                  "render": [Function],
                                                                  "styledComponentId": "Col__StyledCol-sc-15yvjc7-0",
                                                                  "target": "div",
                                                                  "toString": [Function],
                                                                  "warnTooManyClasses": [Function],
                                                                  "withComponent": [Function],
                                                                }
                                                              }
                                                              forwardedRef={null}
                                                              gutter={false}
                                                              hiddenLevel={
                                                                Array [
                                                                  false,
                                                                  false,
                                                                  false,
                                                                  false,
                                                                  false,
                                                                ]
                                                              }
                                                              horizontalAlignLevel={
                                                                Array [
                                                                  "inherit",
                                                                  "inherit",
                                                                  "inherit",
                                                                  "inherit",
                                                                  "inherit",
                                                                ]
                                                              }
                                                              xs={true}
                                                            >
                                                              <div
                                                                className="c5"
                                                              >
                                                                <Box
                                                                  between={3}
                                                                  inline={true}
                                                                  tag="div"
                                                                >
                                                                  <styled.div
                                                                    between={3}
                                                                    inline={true}
                                                                    tag="div"
                                                                  >
                                                                    <StyledComponent
                                                                      between={3}
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "attrs": Array [
                                                                            [Function],
                                                                          ],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "sc-EHOje",
                                                                            "isStatic": false,
                                                                            "lastClassName": "c8",
                                                                            "rules": Array [
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                            ],
                                                                          },
                                                                          "displayName": "styled.div",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "sc-EHOje",
                                                                          "target": "div",
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={null}
                                                                      inline={true}
                                                                      tag="div"
                                                                    >
                                                                      <div
                                                                        className="c6"
                                                                      >
                                                                        <Box
                                                                          between={3}
                                                                          inline={true}
                                                                          style={
                                                                            Object {
                                                                              "justifyContent": "center",
                                                                            }
                                                                          }
                                                                          tag="div"
                                                                        >
                                                                          <styled.div
                                                                            between={3}
                                                                            inline={true}
                                                                            style={
                                                                              Object {
                                                                                "justifyContent": "center",
                                                                              }
                                                                            }
                                                                            tag="div"
                                                                          >
                                                                            <StyledComponent
                                                                              between={3}
                                                                              forwardedComponent={
                                                                                Object {
                                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                                  "attrs": Array [
                                                                                    [Function],
                                                                                  ],
                                                                                  "componentStyle": ComponentStyle {
                                                                                    "componentId": "sc-EHOje",
                                                                                    "isStatic": false,
                                                                                    "lastClassName": "c8",
                                                                                    "rules": Array [
                                                                                      [Function],
                                                                                      [Function],
                                                                                      [Function],
                                                                                      [Function],
                                                                                      [Function],
                                                                                    ],
                                                                                  },
                                                                                  "displayName": "styled.div",
                                                                                  "foldedComponentIds": Array [],
                                                                                  "render": [Function],
                                                                                  "styledComponentId": "sc-EHOje",
                                                                                  "target": "div",
                                                                                  "toString": [Function],
                                                                                  "warnTooManyClasses": [Function],
                                                                                  "withComponent": [Function],
                                                                                }
                                                                              }
                                                                              forwardedRef={null}
                                                                              inline={true}
                                                                              style={
                                                                                Object {
                                                                                  "justifyContent": "center",
                                                                                }
                                                                              }
                                                                              tag="div"
                                                                            >
                                                                              <div
                                                                                className="c6"
                                                                                style={
                                                                                  Object {
                                                                                    "justifyContent": "center",
                                                                                  }
                                                                                }
                                                                              >
                                                                                <Styled(Component)
                                                                                  vertical={1}
                                                                                >
                                                                                  <StyledComponent
                                                                                    forwardedComponent={
                                                                                      Object {
                                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                                        "attrs": Array [],
                                                                                        "componentStyle": ComponentStyle {
                                                                                          "componentId": "sc-gzVnrw",
                                                                                          "isStatic": true,
                                                                                          "lastClassName": "c7",
                                                                                          "rules": Array [
                                                                                            "line-height: 0;",
                                                                                          ],
                                                                                        },
                                                                                        "displayName": "Styled(Component)",
                                                                                        "foldedComponentIds": Array [],
                                                                                        "render": [Function],
                                                                                        "styledComponentId": "sc-gzVnrw",
                                                                                        "target": [Function],
                                                                                        "toString": [Function],
                                                                                        "warnTooManyClasses": [Function],
                                                                                        "withComponent": [Function],
                                                                                      }
                                                                                    }
                                                                                    forwardedRef={null}
                                                                                    vertical={1}
                                                                                  >
                                                                                    <Component
                                                                                      className="c7"
                                                                                      vertical={1}
                                                                                    >
                                                                                      <Box
                                                                                        className="c7"
                                                                                        inline={false}
                                                                                        tag="div"
                                                                                        vertical={1}
                                                                                      >
                                                                                        <styled.div
                                                                                          className="c7"
                                                                                          inline={false}
                                                                                          tag="div"
                                                                                          vertical={1}
                                                                                        >
                                                                                          <StyledComponent
                                                                                            className="c7"
                                                                                            forwardedComponent={
                                                                                              Object {
                                                                                                "$$typeof": Symbol(react.forward_ref),
                                                                                                "attrs": Array [
                                                                                                  [Function],
                                                                                                ],
                                                                                                "componentStyle": ComponentStyle {
                                                                                                  "componentId": "sc-EHOje",
                                                                                                  "isStatic": false,
                                                                                                  "lastClassName": "c8",
                                                                                                  "rules": Array [
                                                                                                    [Function],
                                                                                                    [Function],
                                                                                                    [Function],
                                                                                                    [Function],
                                                                                                    [Function],
                                                                                                  ],
                                                                                                },
                                                                                                "displayName": "styled.div",
                                                                                                "foldedComponentIds": Array [],
                                                                                                "render": [Function],
                                                                                                "styledComponentId": "sc-EHOje",
                                                                                                "target": "div",
                                                                                                "toString": [Function],
                                                                                                "warnTooManyClasses": [Function],
                                                                                                "withComponent": [Function],
                                                                                              }
                                                                                            }
                                                                                            forwardedRef={null}
                                                                                            inline={false}
                                                                                            tag="div"
                                                                                            vertical={1}
                                                                                          >
                                                                                            <div
                                                                                              className="c7 sc-gzVnrw c7 c8"
                                                                                            >
                                                                                              <NotificationSuccess
                                                                                                copy="en"
                                                                                              >
                                                                                                <FeedbackIcon
                                                                                                  copy="en"
                                                                                                  copyDictionary={
                                                                                                    Object {
                                                                                                      "en": Object {
                                                                                                        "a11yText": "Success",
                                                                                                      },
                                                                                                      "fr": Object {
                                                                                                        "a11yText": "Réussite",
                                                                                                      },
                                                                                                    }
                                                                                                  }
                                                                                                  height="20"
                                                                                                  optionalText={false}
                                                                                                  viewBox="0 0 20 20"
                                                                                                  width="20"
                                                                                                >
                                                                                                  <svg
                                                                                                    height="20"
                                                                                                    role="img"
                                                                                                    viewBox="0 0 20 20"
                                                                                                    width="20"
                                                                                                  >
                                                                                                    <title>
                                                                                                      Success
                                                                                                    </title>
                                                                                                    <path
                                                                                                      d="M0 10C0 4.48 4.48 0 10 0s10 4.48 10 10-4.48 10-10 10S0 15.52 0 10zm8.127 4.673a.633.633 0 0 0 .092-.105l7.734-8.572a.693.693 0 0 0-.009-.925.595.595 0 0 0-.882-.001l-7.514 8.055-2.612-2.8a.596.596 0 0 0-.88 0 .706.706 0 0 0-.014.928l3.038 3.51a.623.623 0 0 0 .486.219.587.587 0 0 0 .46-.2l.087-.097.014-.012z"
                                                                                                      fill="#2B8000"
                                                                                                      fillRule="evenodd"
                                                                                                    />
                                                                                                  </svg>
                                                                                                </FeedbackIcon>
                                                                                              </NotificationSuccess>
                                                                                            </div>
                                                                                          </StyledComponent>
                                                                                        </styled.div>
                                                                                      </Box>
                                                                                    </Component>
                                                                                  </StyledComponent>
                                                                                </Styled(Component)>
                                                                                <Paragraph
                                                                                  align="left"
                                                                                  bold={false}
                                                                                  invert={false}
                                                                                  size="medium"
                                                                                >
                                                                                  <Paragraph__StyledParagraph
                                                                                    align="left"
                                                                                    bold={false}
                                                                                    invert={false}
                                                                                    size="medium"
                                                                                  >
                                                                                    <StyledComponent
                                                                                      align="left"
                                                                                      bold={false}
                                                                                      forwardedComponent={
                                                                                        Object {
                                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                                          "attrs": Array [],
                                                                                          "componentStyle": ComponentStyle {
                                                                                            "componentId": "Paragraph__StyledParagraph-efl81j-0",
                                                                                            "isStatic": false,
                                                                                            "lastClassName": "c9",
                                                                                            "rules": Array [
                                                                                              [Function],
                                                                                              "word-wrap: break-word;",
                                                                                              "padding: 0;",
                                                                                              "margin: 0;",
                                                                                              [Function],
                                                                                              [Function],
                                                                                              [Function],
                                                                                              [Function],
                                                                                              "sup {",
                                                                                              "top: -0.5em;",
                                                                                              "font-size: 0.875rem;",
                                                                                              "position: relative;",
                                                                                              "vertical-align: baseline;",
                                                                                              "padding-left: 0.1em;",
                                                                                              "}",
                                                                                            ],
                                                                                          },
                                                                                          "displayName": "Paragraph__StyledParagraph",
                                                                                          "foldedComponentIds": Array [],
                                                                                          "render": [Function],
                                                                                          "styledComponentId": "Paragraph__StyledParagraph-efl81j-0",
                                                                                          "target": "p",
                                                                                          "toString": [Function],
                                                                                          "warnTooManyClasses": [Function],
                                                                                          "withComponent": [Function],
                                                                                        }
                                                                                      }
                                                                                      forwardedRef={null}
                                                                                      invert={false}
                                                                                      size="medium"
                                                                                    >
                                                                                      <p
                                                                                        className="c9"
                                                                                        size="medium"
                                                                                      >
                                                                                        Some content
                                                                                      </p>
                                                                                    </StyledComponent>
                                                                                  </Paragraph__StyledParagraph>
                                                                                </Paragraph>
                                                                              </div>
                                                                            </StyledComponent>
                                                                          </styled.div>
                                                                        </Box>
                                                                      </div>
                                                                    </StyledComponent>
                                                                  </styled.div>
                                                                </Box>
                                                              </div>
                                                            </StyledComponent>
                                                          </Col__StyledCol>
                                                        </Col>
                                                      </div>
                                                    </StyledComponent>
                                                  </Row__StyledRow>
                                                </Row>
                                              </div>
                                            </StyledComponent>
                                          </FlexGrid__StyledGrid>
                                        </FlexGrid>
                                      </div>
                                    </StyledComponent>
                                  </Col__StyledCol>
                                </Col>
                              </div>
                            </StyledComponent>
                          </Row__StyledRow>
                        </Row>
                      </div>
                    </StyledComponent>
                  </FlexGrid__StyledGrid>
                </FlexGrid>
              </div>
            </StyledComponent>
          </styled.div>
        </Box>
      </Component>
    </StyledComponent>
  </Styled(Component)>
</Notification>
`;

exports[`<Notification /> renders 1`] = `
.c4 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-flex-basis: 0;
  -ms-flex-preferred-size: 0;
  flex-basis: 0;
  max-width: 100%;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  padding-left: 1rem;
  padding-right: 1rem;
}

.c5 {
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  -webkit-flex-basis: 0;
  -ms-flex-preferred-size: 0;
  flex-basis: 0;
  max-width: 100%;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  padding-left: 0;
  padding-right: 0;
}

.c3 {
  width: 100%;
  margin: 0 auto;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 0 1 auto;
  -ms-flex: 0 1 auto;
  flex: 0 1 auto;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin: 0 auto;
  width: 100%;
}

.c7 {
  color: #2a2c2e;
  word-wrap: break-word;
  padding: 0;
  margin: 0;
  word-wrap: break-word;
  font-size: 1rem;
  -webkit-letter-spacing: -0.8px;
  -moz-letter-spacing: -0.8px;
  -ms-letter-spacing: -0.8px;
  letter-spacing: -0.8px;
  line-height: 1.5;
  font-weight: 400;
  text-align: left;
}

.c7 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

.c1 {
  display: block;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c6 > *:not(:last-child) {
  margin-right: 1rem;
}

.c0 {
  position: relative;
  background-color: #f7f7f8;
}

@media (max-width:575px) {
  .c4 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:576px) {
  .c4 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:768px) {
  .c4 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:992px) {
  .c4 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:1200px) {
  .c4 {
    display: block;
    text-align: inherit;
  }
}

@media (max-width:575px) {
  .c5 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:576px) {
  .c5 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:768px) {
  .c5 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:992px) {
  .c5 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:1200px) {
  .c5 {
    display: block;
    text-align: inherit;
  }
}

@media (max-width:575px) {
  .c3 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:576px) {
  .c3 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:768px) {
  .c3 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:992px) {
  .c3 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:1200px) {
  .c3 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (max-width:575px) {
  .c2 {
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:576px) {
  .c2 {
    max-width: 36rem;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:768px) {
  .c2 {
    max-width: 48rem;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:992px) {
  .c2 {
    max-width: 62rem;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:1200px) {
  .c2 {
    max-width: 75rem;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

<div
  class="c0 sc-bZQynM c0 c1"
>
  <div
    class="c2"
  >
    <div
      class="c3"
    >
      <div
        class="c4"
      >
        <div
          class="c2"
        >
          <div
            class="c3"
          >
            <div
              class="c5"
            >
              <div
                class="c6"
              >
                <div
                  class="c6"
                  style="justify-content:center"
                >
                  <p
                    class="c7"
                  >
                    Some content
                  </p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;
