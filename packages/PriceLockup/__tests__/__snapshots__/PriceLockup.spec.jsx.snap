// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PriceLockup FootnoteLinks renders next to bottomText when bottomText is provided, regardless of rateText 1`] = `
.c10 {
  padding: 0;
  margin: 0;
  border-width: 0;
  -webkit-transform: rotate(-0.00001deg);
  -ms-transform: rotate(-0.00001deg);
  transform: rotate(-0.00001deg);
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: 100%;
  height: 1px;
  background-color: #d8d8d8;
}

.c13 {
  position: absolute;
  height: 1px;
  width: 1px;
  overflow: hidden;
  -webkit-clip: rect(1px,1px,1px,1px);
  clip: rect(1px,1px,1px,1px);
}

.c12 {
  background-color: transparent;
  border: 0;
  -webkit-text-decoration: underline;
  text-decoration: underline;
  padding: 0 0.25rem;
  color: inherit;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c2 > *:not(:last-child) {
  margin-bottom: 0.25rem;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c6 > *:not(:last-child) {
  margin-right: 0.25rem;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c1 > *:not(:last-child) {
  margin-bottom: 1rem;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c5 > *:not(:last-child) {
  margin-right: 0.5rem;
}

.c9 {
  word-wrap: break-word;
  font-size: 1rem;
  -webkit-letter-spacing: -0.8px;
  -moz-letter-spacing: -0.8px;
  -ms-letter-spacing: -0.8px;
  letter-spacing: -0.8px;
  line-height: 1.5;
}

.c8 {
  word-wrap: break-word;
  padding: 0;
  margin: 0;
  line-height: 1;
  font-size: 1.75rem;
  -webkit-letter-spacing: -1.6px;
  -moz-letter-spacing: -1.6px;
  -ms-letter-spacing: -1.6px;
  letter-spacing: -1.6px;
  font-weight: 400;
}

.c8.c8 sup {
  top: -1.5em;
}

.c7 {
  word-wrap: break-word;
  font-size: 1.25rem;
  -webkit-letter-spacing: -1px;
  -moz-letter-spacing: -1px;
  -ms-letter-spacing: -1px;
  letter-spacing: -1px;
  line-height: 1.6;
}

.c0 {
  text-align: left;
}

.c4 {
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c11 {
  color: #2a2c2e;
  display: inline-block;
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
  margin-top: 0.5rem;
}

.c11 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

@media (min-width:768px) {
  .c8 {
    font-weight: 300;
    font-size: 2.75rem;
    -webkit-letter-spacing: 0;
    -moz-letter-spacing: 0;
    -ms-letter-spacing: 0;
    letter-spacing: 0;
  }
}

<PriceLockup
  footnoteLinks={
    <FootnoteLink
      copy="en"
      number={3}
      onClick={[Function]}
    />
  }
  price="25"
  rateText="/month"
  signDirection="left"
  size="medium"
>
  <Styled(Box)
    between={3}
    inline={false}
    tag="div"
  >
    <StyledComponent
      between={3}
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bwzfXH",
            "isStatic": true,
            "lastClassName": "c0",
            "rules": Array [
              "text-align: left;",
            ],
          },
          "defaultProps": Object {
            "below": undefined,
            "between": undefined,
            "className": undefined,
            "horizontal": undefined,
            "inline": false,
            "inset": undefined,
            "tag": "div",
            "vertical": undefined,
          },
          "displayName": "Styled(Box)",
          "foldedComponentIds": Array [],
          "propTypes": Object {
            "below": [Function],
            "between": [Function],
            "children": [Function],
            "className": [Function],
            "horizontal": [Function],
            "inline": [Function],
            "inset": [Function],
            "tag": [Function],
            "vertical": [Function],
          },
          "render": [Function],
          "styledComponentId": "sc-bwzfXH",
          "target": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": Object {
              "below": undefined,
              "between": undefined,
              "className": undefined,
              "horizontal": undefined,
              "inline": false,
              "inset": undefined,
              "tag": "div",
              "vertical": undefined,
            },
            "displayName": "Box",
            "propTypes": Object {
              "below": [Function],
              "between": [Function],
              "children": [Function],
              "className": [Function],
              "horizontal": [Function],
              "inline": [Function],
              "inset": [Function],
              "tag": [Function],
              "vertical": [Function],
            },
            "render": [Function],
          },
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      inline={false}
      tag="div"
    >
      <Box
        between={3}
        className="c0"
        inline={false}
        tag="div"
      >
        <styled.div
          between={3}
          className="c0"
          inline={false}
          tag="div"
        >
          <StyledComponent
            between={3}
            className="c0"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [
                  [Function],
                ],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bdVaJa",
                  "isStatic": false,
                  "lastClassName": "c6",
                  "rules": Array [
                    [Function],
                    [Function],
                    [Function],
                    [Function],
                    [Function],
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bdVaJa",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            inline={false}
            tag="div"
          >
            <div
              className="c0 sc-bwzfXH c0 c1"
            >
              <Box
                between={1}
                inline={false}
                tag="div"
              >
                <styled.div
                  between={1}
                  inline={false}
                  tag="div"
                >
                  <StyledComponent
                    between={1}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [
                          [Function],
                        ],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bdVaJa",
                          "isStatic": false,
                          "lastClassName": "c6",
                          "rules": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bdVaJa",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    inline={false}
                    tag="div"
                  >
                    <div
                      className="c2"
                    >
                      <PriceLockup__StyledRateTextWrapper>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "PriceLockup__StyledRateTextWrapper-crmhv4-4",
                                "isStatic": true,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "display: flex;",
                                ],
                              },
                              "displayName": "PriceLockup__StyledRateTextWrapper",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "PriceLockup__StyledRateTextWrapper-crmhv4-4",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={
                            Object {
                              "current": .c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c3 > *:not(:last-child) {
  margin-right: 0.25rem;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c2 > *:not(:last-child) {
  margin-right: 0.5rem;
}

.c6 {
  word-wrap: break-word;
  font-size: 1rem;
  -webkit-letter-spacing: -0.8px;
  -moz-letter-spacing: -0.8px;
  -ms-letter-spacing: -0.8px;
  letter-spacing: -0.8px;
  line-height: 1.5;
}

.c5 {
  word-wrap: break-word;
  padding: 0;
  margin: 0;
  line-height: 1;
  font-size: 1.75rem;
  -webkit-letter-spacing: -1.6px;
  -moz-letter-spacing: -1.6px;
  -ms-letter-spacing: -1.6px;
  letter-spacing: -1.6px;
  font-weight: 400;
}

.c5.c5 sup {
  top: -1.5em;
}

.c4 {
  word-wrap: break-word;
  font-size: 1.25rem;
  -webkit-letter-spacing: -1px;
  -moz-letter-spacing: -1px;
  -ms-letter-spacing: -1px;
  letter-spacing: -1px;
  line-height: 1.6;
}

.c1 {
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

@media (min-width:768px) {
  .c5 {
    font-weight: 300;
    font-size: 2.75rem;
    -webkit-letter-spacing: 0;
    -moz-letter-spacing: 0;
    -ms-letter-spacing: 0;
    letter-spacing: 0;
  }
}

<div
                                class="c0"
                              >
                                <div
                                  class="c1 c1 c2"
                                >
                                  <div
                                    class="c3"
                                  >
                                    <span
                                      class="c4"
                                      data-testid="dollarSign"
                                    >
                                      $
                                    </span>
                                    <span
                                      class="c5"
                                      data-testid="priceValue"
                                    >
                                      25
                                    </span>
                                  </div>
                                  <span
                                    class="c6"
                                    data-testid="rateText"
                                  >
                                    /month
                                  </span>
                                </div>
                              </div>,
                            }
                          }
                        >
                          <div
                            className="c3"
                          >
                            <Styled(Box)
                              between={2}
                              inline={true}
                              tag="div"
                            >
                              <StyledComponent
                                between={2}
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-htpNat",
                                      "isStatic": true,
                                      "lastClassName": "c4",
                                      "rules": Array [
                                        "align-items: flex-end;",
                                        "align-self: flex-start;",
                                      ],
                                    },
                                    "defaultProps": Object {
                                      "below": undefined,
                                      "between": undefined,
                                      "className": undefined,
                                      "horizontal": undefined,
                                      "inline": false,
                                      "inset": undefined,
                                      "tag": "div",
                                      "vertical": undefined,
                                    },
                                    "displayName": "Styled(Box)",
                                    "foldedComponentIds": Array [],
                                    "propTypes": Object {
                                      "below": [Function],
                                      "between": [Function],
                                      "children": [Function],
                                      "className": [Function],
                                      "horizontal": [Function],
                                      "inline": [Function],
                                      "inset": [Function],
                                      "tag": [Function],
                                      "vertical": [Function],
                                    },
                                    "render": [Function],
                                    "styledComponentId": "sc-htpNat",
                                    "target": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "defaultProps": Object {
                                        "below": undefined,
                                        "between": undefined,
                                        "className": undefined,
                                        "horizontal": undefined,
                                        "inline": false,
                                        "inset": undefined,
                                        "tag": "div",
                                        "vertical": undefined,
                                      },
                                      "displayName": "Box",
                                      "propTypes": Object {
                                        "below": [Function],
                                        "between": [Function],
                                        "children": [Function],
                                        "className": [Function],
                                        "horizontal": [Function],
                                        "inline": [Function],
                                        "inset": [Function],
                                        "tag": [Function],
                                        "vertical": [Function],
                                      },
                                      "render": [Function],
                                    },
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={
                                  Object {
                                    "current": <div
                                      class="c4 sc-htpNat c4 c5"
                                    >
                                      <div
                                        class="c6"
                                      >
                                        <span
                                          class="c7"
                                          data-testid="dollarSign"
                                        >
                                          $
                                        </span>
                                        <span
                                          class="c8"
                                          data-testid="priceValue"
                                        >
                                          25
                                        </span>
                                      </div>
                                      <span
                                        class="c9"
                                        data-testid="rateText"
                                      >
                                        /month
                                      </span>
                                    </div>,
                                  }
                                }
                                inline={true}
                                tag="div"
                              >
                                <Box
                                  between={2}
                                  className="c4"
                                  inline={true}
                                  tag="div"
                                >
                                  <styled.div
                                    between={2}
                                    className="c4"
                                    inline={true}
                                    tag="div"
                                  >
                                    <StyledComponent
                                      between={2}
                                      className="c4"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [
                                            [Function],
                                          ],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-bdVaJa",
                                            "isStatic": false,
                                            "lastClassName": "c6",
                                            "rules": Array [
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-bdVaJa",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={
                                        Object {
                                          "current": <div
                                            class="c4 sc-htpNat c4 c5"
                                          >
                                            <div
                                              class="c6"
                                            >
                                              <span
                                                class="c7"
                                                data-testid="dollarSign"
                                              >
                                                $
                                              </span>
                                              <span
                                                class="c8"
                                                data-testid="priceValue"
                                              >
                                                25
                                              </span>
                                            </div>
                                            <span
                                              class="c9"
                                              data-testid="rateText"
                                            >
                                              /month
                                            </span>
                                          </div>,
                                        }
                                      }
                                      inline={true}
                                      tag="div"
                                    >
                                      <div
                                        className="c4 sc-htpNat c4 c5"
                                      >
                                        <Box
                                          between={1}
                                          inline={true}
                                          tag="div"
                                        >
                                          <styled.div
                                            between={1}
                                            inline={true}
                                            tag="div"
                                          >
                                            <StyledComponent
                                              between={1}
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [
                                                    [Function],
                                                  ],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-bdVaJa",
                                                    "isStatic": false,
                                                    "lastClassName": "c6",
                                                    "rules": Array [
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                    ],
                                                  },
                                                  "displayName": "styled.div",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-bdVaJa",
                                                  "target": "div",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              inline={true}
                                              tag="div"
                                            >
                                              <div
                                                className="c6"
                                              >
                                                <PriceLockup__StyledDollarSign
                                                  data-testid="dollarSign"
                                                  size="medium"
                                                >
                                                  <StyledComponent
                                                    data-testid="dollarSign"
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "PriceLockup__StyledDollarSign-crmhv4-2",
                                                          "isStatic": false,
                                                          "lastClassName": "c7",
                                                          "rules": Array [
                                                            [Function],
                                                          ],
                                                        },
                                                        "displayName": "PriceLockup__StyledDollarSign",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "PriceLockup__StyledDollarSign-crmhv4-2",
                                                        "target": "span",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    size="medium"
                                                  >
                                                    <span
                                                      className="c7"
                                                      data-testid="dollarSign"
                                                      size="medium"
                                                    >
                                                      $
                                                    </span>
                                                  </StyledComponent>
                                                </PriceLockup__StyledDollarSign>
                                                <PriceLockup__StyledPriceValue
                                                  data-testid="priceValue"
                                                  size="medium"
                                                >
                                                  <StyledComponent
                                                    data-testid="priceValue"
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "PriceLockup__StyledPriceValue-crmhv4-1",
                                                          "isStatic": false,
                                                          "lastClassName": "c8",
                                                          "rules": Array [
                                                            "word-wrap: break-word;",
                                                            "padding: 0;",
                                                            "margin: 0;",
                                                            [Function],
                                                          ],
                                                        },
                                                        "displayName": "PriceLockup__StyledPriceValue",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "PriceLockup__StyledPriceValue-crmhv4-1",
                                                        "target": "span",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    size="medium"
                                                  >
                                                    <span
                                                      className="c8"
                                                      data-testid="priceValue"
                                                      size="medium"
                                                    >
                                                      25
                                                    </span>
                                                  </StyledComponent>
                                                </PriceLockup__StyledPriceValue>
                                              </div>
                                            </StyledComponent>
                                          </styled.div>
                                        </Box>
                                        <PriceLockup__StyledRateText
                                          data-testid="rateText"
                                          size="medium"
                                        >
                                          <StyledComponent
                                            data-testid="rateText"
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "PriceLockup__StyledRateText-crmhv4-0",
                                                  "isStatic": false,
                                                  "lastClassName": "c9",
                                                  "rules": Array [
                                                    [Function],
                                                  ],
                                                },
                                                "displayName": "PriceLockup__StyledRateText",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "PriceLockup__StyledRateText-crmhv4-0",
                                                "target": "span",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            size="medium"
                                          >
                                            <span
                                              className="c9"
                                              data-testid="rateText"
                                              size="medium"
                                            >
                                              /month
                                            </span>
                                          </StyledComponent>
                                        </PriceLockup__StyledRateText>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </Box>
                              </StyledComponent>
                            </Styled(Box)>
                          </div>
                        </StyledComponent>
                      </PriceLockup__StyledRateTextWrapper>
                    </div>
                  </StyledComponent>
                </styled.div>
              </Box>
              <HairlineDivider
                gradient={false}
                vertical={false}
              >
                <HairlineDivider__StyledHairlineDivider
                  gradient={false}
                  vertical={false}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "HairlineDivider__StyledHairlineDivider-biamlk-0",
                          "isStatic": false,
                          "lastClassName": "c10",
                          "rules": Array [
                            "padding: 0;",
                            "margin: 0;",
                            "border-width: 0;",
                            [Function],
                          ],
                        },
                        "displayName": "HairlineDivider__StyledHairlineDivider",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "HairlineDivider__StyledHairlineDivider-biamlk-0",
                        "target": "hr",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    gradient={false}
                    vertical={false}
                  >
                    <hr
                      className="c10"
                    />
                  </StyledComponent>
                </HairlineDivider__StyledHairlineDivider>
              </HairlineDivider>
              <span>
                <Styled(Text__StyledText)
                  inline={false}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bxivhb",
                          "isStatic": false,
                          "lastClassName": "c11",
                          "rules": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            "sup {",
                            "top: -0.5em;",
                            "font-size: 0.875rem;",
                            "position: relative;",
                            "vertical-align: baseline;",
                            "padding-left: 0.1em;",
                            "}",
                            [Function],
                          ],
                        },
                        "displayName": "Styled(Text__StyledText)",
                        "foldedComponentIds": Array [
                          "Text__StyledText-sc-1m0rr67-0",
                        ],
                        "render": [Function],
                        "styledComponentId": "sc-bxivhb",
                        "target": "span",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={
                      Object {
                        "current": .c2 {
  position: absolute;
  height: 1px;
  width: 1px;
  overflow: hidden;
  -webkit-clip: rect(1px,1px,1px,1px);
  clip: rect(1px,1px,1px,1px);
}

.c1 {
  background-color: transparent;
  border: 0;
  -webkit-text-decoration: underline;
  text-decoration: underline;
  padding: 0 0.25rem;
  color: inherit;
}

.c0 {
  color: #2a2c2e;
  display: inline-block;
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
  margin-top: 0.5rem;
}

.c0 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

<span
                          class="c0"
                        >
                          <sup>
                            <button
                              class="c1"
                              data-tds-id="footnote-link"
                              type="button"
                            >
                              <span
                                class="c2"
                              >
                                Read legal footnote
                              </span>
                              3
                            </button>
                          </sup>
                        </span>,
                      }
                    }
                    inline={false}
                  >
                    <span
                      className="c11"
                    >
                      <FootnoteLink
                        copy="en"
                        number={3}
                        onClick={[Function]}
                      >
                        <sup
                          key="3"
                        >
                          <FootnoteLink__StyledFootnoteLink
                            data-tds-id="footnote-link"
                            key="3"
                            onClick={[Function]}
                            type="button"
                          >
                            <StyledComponent
                              data-tds-id="footnote-link"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "FootnoteLink__StyledFootnoteLink-pzcbe1-0",
                                    "isStatic": true,
                                    "lastClassName": "c12",
                                    "rules": Array [
                                      "background-color: transparent;",
                                      "border: 0;",
                                      "text-decoration: underline;",
                                      "padding: 0 0.25rem;",
                                      "color: inherit;",
                                    ],
                                  },
                                  "displayName": "FootnoteLink__StyledFootnoteLink",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "FootnoteLink__StyledFootnoteLink-pzcbe1-0",
                                  "target": "button",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={
                                Object {
                                  "current": <button
                                    class="c12"
                                    data-tds-id="footnote-link"
                                    type="button"
                                  >
                                    <span
                                      class="c13"
                                    >
                                      Read legal footnote
                                    </span>
                                    3
                                  </button>,
                                }
                              }
                              onClick={[Function]}
                              type="button"
                            >
                              <button
                                className="c12"
                                data-tds-id="footnote-link"
                                onClick={[Function]}
                                type="button"
                              >
                                <A11yContent>
                                  <A11yContent__StyledA11yContent>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "A11yContent__StyledA11yContent-sc-15wexwk-0",
                                            "isStatic": true,
                                            "lastClassName": "c13",
                                            "rules": Array [
                                              "position: absolute;",
                                              "height: 1px;",
                                              "width: 1px;",
                                              "overflow: hidden;",
                                              "clip: rect(1px, 1px, 1px, 1px);",
                                            ],
                                          },
                                          "displayName": "A11yContent__StyledA11yContent",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "A11yContent__StyledA11yContent-sc-15wexwk-0",
                                          "target": "span",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <span
                                        className="c13"
                                      >
                                        Read legal footnote
                                      </span>
                                    </StyledComponent>
                                  </A11yContent__StyledA11yContent>
                                </A11yContent>
                                3
                              </button>
                            </StyledComponent>
                          </FootnoteLink__StyledFootnoteLink>
                        </sup>
                      </FootnoteLink>
                    </span>
                  </StyledComponent>
                </Styled(Text__StyledText)>
              </span>
            </div>
          </StyledComponent>
        </styled.div>
      </Box>
    </StyledComponent>
  </Styled(Box)>
</PriceLockup>
`;

exports[`PriceLockup FootnoteLinks renders next to rateText with rateText is provided 1`] = `
.c10 {
  padding: 0;
  margin: 0;
  border-width: 0;
  -webkit-transform: rotate(-0.00001deg);
  -ms-transform: rotate(-0.00001deg);
  transform: rotate(-0.00001deg);
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: 100%;
  height: 1px;
  background-color: #d8d8d8;
}

.c13 {
  position: absolute;
  height: 1px;
  width: 1px;
  overflow: hidden;
  -webkit-clip: rect(1px,1px,1px,1px);
  clip: rect(1px,1px,1px,1px);
}

.c12 {
  background-color: transparent;
  border: 0;
  -webkit-text-decoration: underline;
  text-decoration: underline;
  padding: 0 0.25rem;
  color: inherit;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c2 > *:not(:last-child) {
  margin-bottom: 0.25rem;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c6 > *:not(:last-child) {
  margin-right: 0.25rem;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c1 > *:not(:last-child) {
  margin-bottom: 1rem;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c5 > *:not(:last-child) {
  margin-right: 0.5rem;
}

.c9 {
  word-wrap: break-word;
  font-size: 1rem;
  -webkit-letter-spacing: -0.8px;
  -moz-letter-spacing: -0.8px;
  -ms-letter-spacing: -0.8px;
  letter-spacing: -0.8px;
  line-height: 1.5;
}

.c8 {
  word-wrap: break-word;
  padding: 0;
  margin: 0;
  line-height: 1;
  font-size: 1.75rem;
  -webkit-letter-spacing: -1.6px;
  -moz-letter-spacing: -1.6px;
  -ms-letter-spacing: -1.6px;
  letter-spacing: -1.6px;
  font-weight: 400;
}

.c8.c8 sup {
  top: -1.5em;
}

.c7 {
  word-wrap: break-word;
  font-size: 1.25rem;
  -webkit-letter-spacing: -1px;
  -moz-letter-spacing: -1px;
  -ms-letter-spacing: -1px;
  letter-spacing: -1px;
  line-height: 1.6;
}

.c0 {
  text-align: left;
}

.c4 {
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c11 {
  color: #2a2c2e;
  display: inline-block;
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
  margin-top: 0.5rem;
}

.c11 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

@media (min-width:768px) {
  .c8 {
    font-weight: 300;
    font-size: 2.75rem;
    -webkit-letter-spacing: 0;
    -moz-letter-spacing: 0;
    -ms-letter-spacing: 0;
    letter-spacing: 0;
  }
}

<PriceLockup
  footnoteLinks={
    <FootnoteLink
      copy="en"
      number={3}
      onClick={[Function]}
    />
  }
  price="25"
  rateText="/month"
  signDirection="left"
  size="medium"
>
  <Styled(Box)
    between={3}
    inline={false}
    tag="div"
  >
    <StyledComponent
      between={3}
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bwzfXH",
            "isStatic": true,
            "lastClassName": "c0",
            "rules": Array [
              "text-align: left;",
            ],
          },
          "defaultProps": Object {
            "below": undefined,
            "between": undefined,
            "className": undefined,
            "horizontal": undefined,
            "inline": false,
            "inset": undefined,
            "tag": "div",
            "vertical": undefined,
          },
          "displayName": "Styled(Box)",
          "foldedComponentIds": Array [],
          "propTypes": Object {
            "below": [Function],
            "between": [Function],
            "children": [Function],
            "className": [Function],
            "horizontal": [Function],
            "inline": [Function],
            "inset": [Function],
            "tag": [Function],
            "vertical": [Function],
          },
          "render": [Function],
          "styledComponentId": "sc-bwzfXH",
          "target": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": Object {
              "below": undefined,
              "between": undefined,
              "className": undefined,
              "horizontal": undefined,
              "inline": false,
              "inset": undefined,
              "tag": "div",
              "vertical": undefined,
            },
            "displayName": "Box",
            "propTypes": Object {
              "below": [Function],
              "between": [Function],
              "children": [Function],
              "className": [Function],
              "horizontal": [Function],
              "inline": [Function],
              "inset": [Function],
              "tag": [Function],
              "vertical": [Function],
            },
            "render": [Function],
          },
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      inline={false}
      tag="div"
    >
      <Box
        between={3}
        className="c0"
        inline={false}
        tag="div"
      >
        <styled.div
          between={3}
          className="c0"
          inline={false}
          tag="div"
        >
          <StyledComponent
            between={3}
            className="c0"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [
                  [Function],
                ],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bdVaJa",
                  "isStatic": false,
                  "lastClassName": "c6",
                  "rules": Array [
                    [Function],
                    [Function],
                    [Function],
                    [Function],
                    [Function],
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bdVaJa",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            inline={false}
            tag="div"
          >
            <div
              className="c0 sc-bwzfXH c0 c1"
            >
              <Box
                between={1}
                inline={false}
                tag="div"
              >
                <styled.div
                  between={1}
                  inline={false}
                  tag="div"
                >
                  <StyledComponent
                    between={1}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [
                          [Function],
                        ],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bdVaJa",
                          "isStatic": false,
                          "lastClassName": "c6",
                          "rules": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bdVaJa",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    inline={false}
                    tag="div"
                  >
                    <div
                      className="c2"
                    >
                      <PriceLockup__StyledRateTextWrapper>
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "PriceLockup__StyledRateTextWrapper-crmhv4-4",
                                "isStatic": true,
                                "lastClassName": "c3",
                                "rules": Array [
                                  "display: flex;",
                                ],
                              },
                              "displayName": "PriceLockup__StyledRateTextWrapper",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "PriceLockup__StyledRateTextWrapper-crmhv4-4",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={
                            Object {
                              "current": .c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c3 > *:not(:last-child) {
  margin-right: 0.25rem;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c2 > *:not(:last-child) {
  margin-right: 0.5rem;
}

.c6 {
  word-wrap: break-word;
  font-size: 1rem;
  -webkit-letter-spacing: -0.8px;
  -moz-letter-spacing: -0.8px;
  -ms-letter-spacing: -0.8px;
  letter-spacing: -0.8px;
  line-height: 1.5;
}

.c5 {
  word-wrap: break-word;
  padding: 0;
  margin: 0;
  line-height: 1;
  font-size: 1.75rem;
  -webkit-letter-spacing: -1.6px;
  -moz-letter-spacing: -1.6px;
  -ms-letter-spacing: -1.6px;
  letter-spacing: -1.6px;
  font-weight: 400;
}

.c5.c5 sup {
  top: -1.5em;
}

.c4 {
  word-wrap: break-word;
  font-size: 1.25rem;
  -webkit-letter-spacing: -1px;
  -moz-letter-spacing: -1px;
  -ms-letter-spacing: -1px;
  letter-spacing: -1px;
  line-height: 1.6;
}

.c1 {
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

@media (min-width:768px) {
  .c5 {
    font-weight: 300;
    font-size: 2.75rem;
    -webkit-letter-spacing: 0;
    -moz-letter-spacing: 0;
    -ms-letter-spacing: 0;
    letter-spacing: 0;
  }
}

<div
                                class="c0"
                              >
                                <div
                                  class="c1 c1 c2"
                                >
                                  <div
                                    class="c3"
                                  >
                                    <span
                                      class="c4"
                                      data-testid="dollarSign"
                                    >
                                      $
                                    </span>
                                    <span
                                      class="c5"
                                      data-testid="priceValue"
                                    >
                                      25
                                    </span>
                                  </div>
                                  <span
                                    class="c6"
                                    data-testid="rateText"
                                  >
                                    /month
                                  </span>
                                </div>
                              </div>,
                            }
                          }
                        >
                          <div
                            className="c3"
                          >
                            <Styled(Box)
                              between={2}
                              inline={true}
                              tag="div"
                            >
                              <StyledComponent
                                between={2}
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-htpNat",
                                      "isStatic": true,
                                      "lastClassName": "c4",
                                      "rules": Array [
                                        "align-items: flex-end;",
                                        "align-self: flex-start;",
                                      ],
                                    },
                                    "defaultProps": Object {
                                      "below": undefined,
                                      "between": undefined,
                                      "className": undefined,
                                      "horizontal": undefined,
                                      "inline": false,
                                      "inset": undefined,
                                      "tag": "div",
                                      "vertical": undefined,
                                    },
                                    "displayName": "Styled(Box)",
                                    "foldedComponentIds": Array [],
                                    "propTypes": Object {
                                      "below": [Function],
                                      "between": [Function],
                                      "children": [Function],
                                      "className": [Function],
                                      "horizontal": [Function],
                                      "inline": [Function],
                                      "inset": [Function],
                                      "tag": [Function],
                                      "vertical": [Function],
                                    },
                                    "render": [Function],
                                    "styledComponentId": "sc-htpNat",
                                    "target": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "defaultProps": Object {
                                        "below": undefined,
                                        "between": undefined,
                                        "className": undefined,
                                        "horizontal": undefined,
                                        "inline": false,
                                        "inset": undefined,
                                        "tag": "div",
                                        "vertical": undefined,
                                      },
                                      "displayName": "Box",
                                      "propTypes": Object {
                                        "below": [Function],
                                        "between": [Function],
                                        "children": [Function],
                                        "className": [Function],
                                        "horizontal": [Function],
                                        "inline": [Function],
                                        "inset": [Function],
                                        "tag": [Function],
                                        "vertical": [Function],
                                      },
                                      "render": [Function],
                                    },
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={
                                  Object {
                                    "current": <div
                                      class="c4 sc-htpNat c4 c5"
                                    >
                                      <div
                                        class="c6"
                                      >
                                        <span
                                          class="c7"
                                          data-testid="dollarSign"
                                        >
                                          $
                                        </span>
                                        <span
                                          class="c8"
                                          data-testid="priceValue"
                                        >
                                          25
                                        </span>
                                      </div>
                                      <span
                                        class="c9"
                                        data-testid="rateText"
                                      >
                                        /month
                                      </span>
                                    </div>,
                                  }
                                }
                                inline={true}
                                tag="div"
                              >
                                <Box
                                  between={2}
                                  className="c4"
                                  inline={true}
                                  tag="div"
                                >
                                  <styled.div
                                    between={2}
                                    className="c4"
                                    inline={true}
                                    tag="div"
                                  >
                                    <StyledComponent
                                      between={2}
                                      className="c4"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [
                                            [Function],
                                          ],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-bdVaJa",
                                            "isStatic": false,
                                            "lastClassName": "c6",
                                            "rules": Array [
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                              [Function],
                                            ],
                                          },
                                          "displayName": "styled.div",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-bdVaJa",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={
                                        Object {
                                          "current": <div
                                            class="c4 sc-htpNat c4 c5"
                                          >
                                            <div
                                              class="c6"
                                            >
                                              <span
                                                class="c7"
                                                data-testid="dollarSign"
                                              >
                                                $
                                              </span>
                                              <span
                                                class="c8"
                                                data-testid="priceValue"
                                              >
                                                25
                                              </span>
                                            </div>
                                            <span
                                              class="c9"
                                              data-testid="rateText"
                                            >
                                              /month
                                            </span>
                                          </div>,
                                        }
                                      }
                                      inline={true}
                                      tag="div"
                                    >
                                      <div
                                        className="c4 sc-htpNat c4 c5"
                                      >
                                        <Box
                                          between={1}
                                          inline={true}
                                          tag="div"
                                        >
                                          <styled.div
                                            between={1}
                                            inline={true}
                                            tag="div"
                                          >
                                            <StyledComponent
                                              between={1}
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [
                                                    [Function],
                                                  ],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-bdVaJa",
                                                    "isStatic": false,
                                                    "lastClassName": "c6",
                                                    "rules": Array [
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                    ],
                                                  },
                                                  "displayName": "styled.div",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-bdVaJa",
                                                  "target": "div",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              inline={true}
                                              tag="div"
                                            >
                                              <div
                                                className="c6"
                                              >
                                                <PriceLockup__StyledDollarSign
                                                  data-testid="dollarSign"
                                                  size="medium"
                                                >
                                                  <StyledComponent
                                                    data-testid="dollarSign"
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "PriceLockup__StyledDollarSign-crmhv4-2",
                                                          "isStatic": false,
                                                          "lastClassName": "c7",
                                                          "rules": Array [
                                                            [Function],
                                                          ],
                                                        },
                                                        "displayName": "PriceLockup__StyledDollarSign",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "PriceLockup__StyledDollarSign-crmhv4-2",
                                                        "target": "span",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    size="medium"
                                                  >
                                                    <span
                                                      className="c7"
                                                      data-testid="dollarSign"
                                                      size="medium"
                                                    >
                                                      $
                                                    </span>
                                                  </StyledComponent>
                                                </PriceLockup__StyledDollarSign>
                                                <PriceLockup__StyledPriceValue
                                                  data-testid="priceValue"
                                                  size="medium"
                                                >
                                                  <StyledComponent
                                                    data-testid="priceValue"
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "PriceLockup__StyledPriceValue-crmhv4-1",
                                                          "isStatic": false,
                                                          "lastClassName": "c8",
                                                          "rules": Array [
                                                            "word-wrap: break-word;",
                                                            "padding: 0;",
                                                            "margin: 0;",
                                                            [Function],
                                                          ],
                                                        },
                                                        "displayName": "PriceLockup__StyledPriceValue",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "PriceLockup__StyledPriceValue-crmhv4-1",
                                                        "target": "span",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    size="medium"
                                                  >
                                                    <span
                                                      className="c8"
                                                      data-testid="priceValue"
                                                      size="medium"
                                                    >
                                                      25
                                                    </span>
                                                  </StyledComponent>
                                                </PriceLockup__StyledPriceValue>
                                              </div>
                                            </StyledComponent>
                                          </styled.div>
                                        </Box>
                                        <PriceLockup__StyledRateText
                                          data-testid="rateText"
                                          size="medium"
                                        >
                                          <StyledComponent
                                            data-testid="rateText"
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "PriceLockup__StyledRateText-crmhv4-0",
                                                  "isStatic": false,
                                                  "lastClassName": "c9",
                                                  "rules": Array [
                                                    [Function],
                                                  ],
                                                },
                                                "displayName": "PriceLockup__StyledRateText",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "PriceLockup__StyledRateText-crmhv4-0",
                                                "target": "span",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            size="medium"
                                          >
                                            <span
                                              className="c9"
                                              data-testid="rateText"
                                              size="medium"
                                            >
                                              /month
                                            </span>
                                          </StyledComponent>
                                        </PriceLockup__StyledRateText>
                                      </div>
                                    </StyledComponent>
                                  </styled.div>
                                </Box>
                              </StyledComponent>
                            </Styled(Box)>
                          </div>
                        </StyledComponent>
                      </PriceLockup__StyledRateTextWrapper>
                    </div>
                  </StyledComponent>
                </styled.div>
              </Box>
              <HairlineDivider
                gradient={false}
                vertical={false}
              >
                <HairlineDivider__StyledHairlineDivider
                  gradient={false}
                  vertical={false}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "HairlineDivider__StyledHairlineDivider-biamlk-0",
                          "isStatic": false,
                          "lastClassName": "c10",
                          "rules": Array [
                            "padding: 0;",
                            "margin: 0;",
                            "border-width: 0;",
                            [Function],
                          ],
                        },
                        "displayName": "HairlineDivider__StyledHairlineDivider",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "HairlineDivider__StyledHairlineDivider-biamlk-0",
                        "target": "hr",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    gradient={false}
                    vertical={false}
                  >
                    <hr
                      className="c10"
                    />
                  </StyledComponent>
                </HairlineDivider__StyledHairlineDivider>
              </HairlineDivider>
              <span>
                <Styled(Text__StyledText)
                  inline={false}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bxivhb",
                          "isStatic": false,
                          "lastClassName": "c11",
                          "rules": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            "sup {",
                            "top: -0.5em;",
                            "font-size: 0.875rem;",
                            "position: relative;",
                            "vertical-align: baseline;",
                            "padding-left: 0.1em;",
                            "}",
                            [Function],
                          ],
                        },
                        "displayName": "Styled(Text__StyledText)",
                        "foldedComponentIds": Array [
                          "Text__StyledText-sc-1m0rr67-0",
                        ],
                        "render": [Function],
                        "styledComponentId": "sc-bxivhb",
                        "target": "span",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={
                      Object {
                        "current": .c2 {
  position: absolute;
  height: 1px;
  width: 1px;
  overflow: hidden;
  -webkit-clip: rect(1px,1px,1px,1px);
  clip: rect(1px,1px,1px,1px);
}

.c1 {
  background-color: transparent;
  border: 0;
  -webkit-text-decoration: underline;
  text-decoration: underline;
  padding: 0 0.25rem;
  color: inherit;
}

.c0 {
  color: #2a2c2e;
  display: inline-block;
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
  margin-top: 0.5rem;
}

.c0 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

<span
                          class="c0"
                        >
                          <sup>
                            <button
                              class="c1"
                              data-tds-id="footnote-link"
                              type="button"
                            >
                              <span
                                class="c2"
                              >
                                Read legal footnote
                              </span>
                              3
                            </button>
                          </sup>
                        </span>,
                      }
                    }
                    inline={false}
                  >
                    <span
                      className="c11"
                    >
                      <FootnoteLink
                        copy="en"
                        number={3}
                        onClick={[Function]}
                      >
                        <sup
                          key="3"
                        >
                          <FootnoteLink__StyledFootnoteLink
                            data-tds-id="footnote-link"
                            key="3"
                            onClick={[Function]}
                            type="button"
                          >
                            <StyledComponent
                              data-tds-id="footnote-link"
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "FootnoteLink__StyledFootnoteLink-pzcbe1-0",
                                    "isStatic": true,
                                    "lastClassName": "c12",
                                    "rules": Array [
                                      "background-color: transparent;",
                                      "border: 0;",
                                      "text-decoration: underline;",
                                      "padding: 0 0.25rem;",
                                      "color: inherit;",
                                    ],
                                  },
                                  "displayName": "FootnoteLink__StyledFootnoteLink",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "FootnoteLink__StyledFootnoteLink-pzcbe1-0",
                                  "target": "button",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={
                                Object {
                                  "current": <button
                                    class="c12"
                                    data-tds-id="footnote-link"
                                    type="button"
                                  >
                                    <span
                                      class="c13"
                                    >
                                      Read legal footnote
                                    </span>
                                    3
                                  </button>,
                                }
                              }
                              onClick={[Function]}
                              type="button"
                            >
                              <button
                                className="c12"
                                data-tds-id="footnote-link"
                                onClick={[Function]}
                                type="button"
                              >
                                <A11yContent>
                                  <A11yContent__StyledA11yContent>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "A11yContent__StyledA11yContent-sc-15wexwk-0",
                                            "isStatic": true,
                                            "lastClassName": "c13",
                                            "rules": Array [
                                              "position: absolute;",
                                              "height: 1px;",
                                              "width: 1px;",
                                              "overflow: hidden;",
                                              "clip: rect(1px, 1px, 1px, 1px);",
                                            ],
                                          },
                                          "displayName": "A11yContent__StyledA11yContent",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "A11yContent__StyledA11yContent-sc-15wexwk-0",
                                          "target": "span",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <span
                                        className="c13"
                                      >
                                        Read legal footnote
                                      </span>
                                    </StyledComponent>
                                  </A11yContent__StyledA11yContent>
                                </A11yContent>
                                3
                              </button>
                            </StyledComponent>
                          </FootnoteLink__StyledFootnoteLink>
                        </sup>
                      </FootnoteLink>
                    </span>
                  </StyledComponent>
                </Styled(Text__StyledText)>
              </span>
            </div>
          </StyledComponent>
        </styled.div>
      </Box>
    </StyledComponent>
  </Styled(Box)>
</PriceLockup>
`;

exports[`PriceLockup renders with default props 1`] = `
.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c1 > *:not(:last-child) {
  margin-bottom: 0.5rem;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c2 > *:not(:last-child) {
  margin-bottom: 0.25rem;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c5 > *:not(:last-child) {
  margin-right: 0.25rem;
}

.c8 {
  word-wrap: break-word;
  font-size: 1rem;
  -webkit-letter-spacing: -0.8px;
  -moz-letter-spacing: -0.8px;
  -ms-letter-spacing: -0.8px;
  letter-spacing: -0.8px;
  line-height: 1;
}

.c7 {
  word-wrap: break-word;
  padding: 0;
  margin: 0;
  line-height: 1;
  font-size: 1.5rem;
  font-weight: 400;
  -webkit-letter-spacing: -0.7px;
  -moz-letter-spacing: -0.7px;
  -ms-letter-spacing: -0.7px;
  letter-spacing: -0.7px;
}

.c7.c7 sup {
  top: -1em;
}

.c6 {
  line-height: 1.5;
}

.c6 medium {
  word-wrap: break-word;
  font-size: 1rem;
  -webkit-letter-spacing: -0.8px;
  -moz-letter-spacing: -0.8px;
  -ms-letter-spacing: -0.8px;
  letter-spacing: -0.8px;
  line-height: 1.5;
}

.c0 {
  text-align: left;
}

.c4 {
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c9 {
  color: #2a2c2e;
  display: inline-block;
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
}

.c9 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

@media (min-width:768px) {
  .c7 {
    font-size: 1.75rem;
    -webkit-letter-spacing: -0.8px;
    -moz-letter-spacing: -0.8px;
    -ms-letter-spacing: -0.8px;
    letter-spacing: -0.8px;
  }
}

<div
  class="c0 sc-bwzfXH c0 c1"
>
  <div
    class="c2"
  >
    <div
      class="c3"
    >
      <div
        class="c4 sc-htpNat c4 c5"
      >
        <div
          class="c5"
        >
          <span
            class="c6"
            data-testid="dollarSign"
          >
            $
          </span>
          <span
            class="c7"
            data-testid="priceValue"
          >
            25
          </span>
        </div>
        <span
          class="c8"
          data-testid="rateText"
        >
          /month
          <span
            class="c9"
          />
        </span>
      </div>
    </div>
  </div>
</div>
`;

exports[`PriceLockup size prop is large renders 1`] = `
.c3 {
  color: #2a2c2e;
  word-wrap: break-word;
  font-size: 1.25rem;
  -webkit-letter-spacing: -1px;
  -moz-letter-spacing: -1px;
  -ms-letter-spacing: -1px;
  letter-spacing: -1px;
  line-height: 1.6;
  word-wrap: break-word;
  font-weight: 400;
}

.c3 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c6 > *:not(:last-child) {
  margin-right: 0.5rem;
}

.c2 {
  display: block;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c9 {
  word-wrap: break-word;
  font-size: 1.25rem;
  -webkit-letter-spacing: -1px;
  -moz-letter-spacing: -1px;
  -ms-letter-spacing: -1px;
  letter-spacing: -1px;
  line-height: 1.6;
}

.c8 {
  word-wrap: break-word;
  padding: 0;
  margin: 0;
  line-height: 1;
  font-size: 2.75rem;
  font-weight: 300;
}

.c8.c8 sup {
  top: -3em;
}

.c7 {
  color: #2a2c2e;
  font-weight: 400;
  font-size: 1.75rem;
  line-height: 1.3;
  -webkit-letter-spacing: -1.6px;
  -moz-letter-spacing: -1.6px;
  -ms-letter-spacing: -1.6px;
  letter-spacing: -1.6px;
}

.c0 {
  text-align: left;
}

.c5 {
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c10 {
  color: #2a2c2e;
  display: inline-block;
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
}

.c10 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

@media (max-width:767px) {
  .c1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }

  .c1 > *:not(:last-child) {
    margin-bottom: 0.5rem;
  }
}

@media (min-width:768px) {
  .c1 {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }

  .c1 > *:not(:last-child) {
    margin-bottom: 1rem;
  }
}

@media (min-width:768px) {
  .c8 {
    font-size: 4.5rem;
    -webkit-letter-spacing: 0.2px;
    -moz-letter-spacing: 0.2px;
    -ms-letter-spacing: 0.2px;
    letter-spacing: 0.2px;
  }
}

@media (min-width:768px) {
  .c7 {
    font-weight: 300;
    font-size: 2.75rem;
    -webkit-letter-spacing: 0;
    -moz-letter-spacing: 0;
    -ms-letter-spacing: 0;
    letter-spacing: 0;
  }
}

<div
  class="c0 sc-bwzfXH c0 c1"
>
  <div
    class="c2"
  >
    <span
      class="c3"
    >
      top text
    </span>
    <div
      class="c4"
    >
      <div
        class="c5 sc-htpNat c5 c6"
      >
        <div
          class="c6"
        >
          <span
            class="c7"
            data-testid="dollarSign"
          >
            $
          </span>
          <span
            class="c8"
            data-testid="priceValue"
          >
            25
          </span>
        </div>
        <span
          class="c9"
          data-testid="rateText"
        >
          /month
          <span
            class="c10"
          />
        </span>
      </div>
    </div>
  </div>
</div>
`;

exports[`PriceLockup size prop is medium renders 1`] = `
.c11 {
  padding: 0;
  margin: 0;
  border-width: 0;
  -webkit-transform: rotate(-0.00001deg);
  -ms-transform: rotate(-0.00001deg);
  transform: rotate(-0.00001deg);
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: 100%;
  height: 1px;
  background-color: #d8d8d8;
}

.c3 {
  color: #2a2c2e;
  word-wrap: break-word;
  font-size: 0.875rem;
  -webkit-letter-spacing: -0.6px;
  -moz-letter-spacing: -0.6px;
  -ms-letter-spacing: -0.6px;
  letter-spacing: -0.6px;
  line-height: 1.42857;
  font-weight: 500;
}

.c3 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c2 > *:not(:last-child) {
  margin-bottom: 0.25rem;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c7 > *:not(:last-child) {
  margin-right: 0.25rem;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c1 > *:not(:last-child) {
  margin-bottom: 1rem;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c6 > *:not(:last-child) {
  margin-right: 0.5rem;
}

.c10 {
  word-wrap: break-word;
  font-size: 1rem;
  -webkit-letter-spacing: -0.8px;
  -moz-letter-spacing: -0.8px;
  -ms-letter-spacing: -0.8px;
  letter-spacing: -0.8px;
  line-height: 1.5;
}

.c9 {
  word-wrap: break-word;
  padding: 0;
  margin: 0;
  line-height: 1;
  font-size: 1.75rem;
  -webkit-letter-spacing: -1.6px;
  -moz-letter-spacing: -1.6px;
  -ms-letter-spacing: -1.6px;
  letter-spacing: -1.6px;
  font-weight: 400;
}

.c9.c9 sup {
  top: -1.5em;
}

.c8 {
  word-wrap: break-word;
  font-size: 1.25rem;
  -webkit-letter-spacing: -1px;
  -moz-letter-spacing: -1px;
  -ms-letter-spacing: -1px;
  letter-spacing: -1px;
  line-height: 1.6;
}

.c0 {
  text-align: left;
}

.c5 {
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c13 {
  color: #2a2c2e;
  display: inline-block;
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
}

.c13 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

.c12 {
  color: #2a2c2e;
  word-wrap: break-word;
  font-size: 1rem;
  -webkit-letter-spacing: -0.8px;
  -moz-letter-spacing: -0.8px;
  -ms-letter-spacing: -0.8px;
  letter-spacing: -0.8px;
  line-height: 1.5;
  font-weight: 400;
  display: inline-block;
}

.c12 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

@media (min-width:768px) {
  .c9 {
    font-weight: 300;
    font-size: 2.75rem;
    -webkit-letter-spacing: 0;
    -moz-letter-spacing: 0;
    -ms-letter-spacing: 0;
    letter-spacing: 0;
  }
}

<div
  class="c0 sc-bwzfXH c0 c1"
>
  <div
    class="c2"
  >
    <span
      class="c3"
    >
      top text
    </span>
    <div
      class="c4"
    >
      <div
        class="c5 sc-htpNat c5 c6"
      >
        <div
          class="c7"
        >
          <span
            class="c8"
            data-testid="dollarSign"
          >
            $
          </span>
          <span
            class="c9"
            data-testid="priceValue"
          >
            25
          </span>
        </div>
        <span
          class="c10"
          data-testid="rateText"
        >
          /month
        </span>
      </div>
    </div>
  </div>
  <hr
    class="c11"
  />
  <span>
    <span
      class="c12"
    >
      bottom text
    </span>
    <span
      class="c13"
    />
  </span>
</div>
`;

exports[`PriceLockup size prop is small renders 1`] = `
.c10 {
  padding: 0;
  margin: 0;
  border-width: 0;
  -webkit-transform: rotate(-0.00001deg);
  -ms-transform: rotate(-0.00001deg);
  transform: rotate(-0.00001deg);
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: 100%;
  height: 1px;
  background-color: #d8d8d8;
}

.c3 {
  color: #2a2c2e;
  word-wrap: break-word;
  font-size: 0.875rem;
  -webkit-letter-spacing: -0.6px;
  -moz-letter-spacing: -0.6px;
  -ms-letter-spacing: -0.6px;
  letter-spacing: -0.6px;
  line-height: 1.42857;
  font-weight: 500;
}

.c3 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c1 > *:not(:last-child) {
  margin-bottom: 0.5rem;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c2 > *:not(:last-child) {
  margin-bottom: 0.25rem;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c6 > *:not(:last-child) {
  margin-right: 0.25rem;
}

.c9 {
  word-wrap: break-word;
  font-size: 1rem;
  -webkit-letter-spacing: -0.8px;
  -moz-letter-spacing: -0.8px;
  -ms-letter-spacing: -0.8px;
  letter-spacing: -0.8px;
  line-height: 1;
}

.c8 {
  word-wrap: break-word;
  padding: 0;
  margin: 0;
  line-height: 1;
  font-size: 1.5rem;
  font-weight: 400;
  -webkit-letter-spacing: -0.7px;
  -moz-letter-spacing: -0.7px;
  -ms-letter-spacing: -0.7px;
  letter-spacing: -0.7px;
}

.c8.c8 sup {
  top: -1em;
}

.c7 {
  line-height: 1.5;
}

.c7 medium {
  word-wrap: break-word;
  font-size: 1rem;
  -webkit-letter-spacing: -0.8px;
  -moz-letter-spacing: -0.8px;
  -ms-letter-spacing: -0.8px;
  letter-spacing: -0.8px;
  line-height: 1.5;
}

.c0 {
  text-align: left;
}

.c5 {
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c12 {
  color: #2a2c2e;
  display: inline-block;
  -webkit-align-self: flex-start;
  -ms-flex-item-align: start;
  align-self: flex-start;
}

.c12 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

.c11 {
  color: #2a2c2e;
  word-wrap: break-word;
  font-size: 0.875rem;
  -webkit-letter-spacing: -0.6px;
  -moz-letter-spacing: -0.6px;
  -ms-letter-spacing: -0.6px;
  letter-spacing: -0.6px;
  line-height: 1.42857;
  font-weight: 500;
  display: inline-block;
}

.c11 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

@media (min-width:768px) {
  .c8 {
    font-size: 1.75rem;
    -webkit-letter-spacing: -0.8px;
    -moz-letter-spacing: -0.8px;
    -ms-letter-spacing: -0.8px;
    letter-spacing: -0.8px;
  }
}

<div
  class="c0 sc-bwzfXH c0 c1"
>
  <div
    class="c2"
  >
    <span
      class="c3"
    >
      top text
    </span>
    <div
      class="c4"
    >
      <div
        class="c5 sc-htpNat c5 c6"
      >
        <div
          class="c6"
        >
          <span
            class="c7"
            data-testid="dollarSign"
          >
            $
          </span>
          <span
            class="c8"
            data-testid="priceValue"
          >
            25
          </span>
        </div>
        <span
          class="c9"
          data-testid="rateText"
        >
          /month
        </span>
      </div>
    </div>
  </div>
  <hr
    class="c10"
  />
  <span>
    <span
      class="c11"
    >
      bottom text
    </span>
    <span
      class="c12"
    />
  </span>
</div>
`;
