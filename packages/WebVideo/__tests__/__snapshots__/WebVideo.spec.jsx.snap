// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WebVideo renders 1`] = `
.c7 {
  display: block;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.c11 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c11 > *:not(:last-child) {
  margin-right: 0.5rem;
}

.c13 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
}

.c13 > svg {
  fill: #fff;
}

.c13 > svg {
  width: 1rem;
  height: 1rem;
}

.c8 {
  color: #fff;
  word-wrap: break-word;
  padding: 0;
  margin: 0;
  word-wrap: break-word;
  font-size: 1rem;
  -webkit-letter-spacing: -0.8px;
  -moz-letter-spacing: -0.8px;
  -ms-letter-spacing: -0.8px;
  letter-spacing: -0.8px;
  line-height: 1.5;
  word-wrap: break-word;
  font-weight: 700;
  text-align: center;
}

.c8 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

.c10 {
  color: #fff;
  word-wrap: break-word;
  padding: 0;
  margin: 0;
  word-wrap: break-word;
  font-size: 0.875rem;
  -webkit-letter-spacing: -0.6px;
  -moz-letter-spacing: -0.6px;
  -ms-letter-spacing: -0.6px;
  letter-spacing: -0.6px;
  line-height: 1.42857;
  word-wrap: break-word;
  font-weight: 700;
  text-align: center;
}

.c10 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

.c14 {
  color: #fff;
  word-wrap: break-word;
  padding: 0;
  margin: 0;
  word-wrap: break-word;
  font-size: 1rem;
  -webkit-letter-spacing: -0.8px;
  -moz-letter-spacing: -0.8px;
  -ms-letter-spacing: -0.8px;
  letter-spacing: -0.8px;
  line-height: 1.5;
  font-weight: 400;
  text-align: left;
}

.c14 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

.c3 {
  position: absolute;
  width: 100%;
  height: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  z-index: 8;
  cursor: pointer;
  pointer-events: auto;
  fill: rgba(255,255,255,0);
  -webkit-transition: background-color 0.2s fill 0.2s;
  transition: background-color 0.2s fill 0.2s;
}

.c3 #bigButton {
  background-color: rgba(42,44,46,0.9);
  -webkit-transition: background-color 0.2s;
  transition: background-color 0.2s;
}

.c3:hover {
  fill: rgba(255,255,255,1);
  -webkit-transition: fill 0.2s;
  transition: fill 0.2s;
}

.c3:hover #bigButton {
  background-color: rgba(42,44,46,1);
  -webkit-transition: background-color 0.2s;
  transition: background-color 0.2s;
}

.c4 {
  width: 144px;
  height: 144px;
  border-radius: 50%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  background: none;
  color: inherit;
  border: none;
  padding: 0;
  font: inherit;
  cursor: pointer;
  vertical-align: middle;
}

.c5 svg>path {
  fill: inherit;
}

.c6 {
  display: none;
}

.c9 {
  display: block;
}

.c12 {
  padding-top: 2px;
}

.c2 {
  background-image: url(https://img.youtube.com/vi/ppF-fn37SDs/maxresdefault.jpg);
  background-size: cover;
  background-position: center;
  position: absolute;
  top: 0;
  width: 100%;
  height: 100%;
  cursor: pointer;
}

.c0 {
  width: 100%;
  min-width: 288px;
  outline: none;
}

.c1 {
  padding-top: 56.25%;
  position: relative;
  background-image: url(16:9);
}

@media (min-width:768px) {
  .c4 {
    width: 200px;
    height: 200px;
  }
}

@media (min-width:768px) {
  .c6 {
    display: block;
  }
}

@media (min-width:768px) {
  .c9 {
    display: none;
  }
}

<WebVideo
  aspectRatio="16:9"
  beginMuted={false}
  copy="en"
  defaultVolume={1}
  onStart={[Function]}
  videoId="ppF-fn37SDs"
  videoLength={30}
>
  <WebVideo__StyledPlayerContainer
    data-testid="youtubePlayer"
    id="videoPlayerContainer"
  >
    <StyledComponent
      data-testid="youtubePlayer"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "WebVideo__StyledPlayerContainer-sc-14vgciv-0",
            "isStatic": true,
            "lastClassName": "c0",
            "rules": Array [
              "width: 100%;",
              "min-width: 288px;",
              "outline: none;",
            ],
          },
          "displayName": "WebVideo__StyledPlayerContainer",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "WebVideo__StyledPlayerContainer-sc-14vgciv-0",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      id="videoPlayerContainer"
    >
      <div
        className="c0"
        data-testid="youtubePlayer"
        id="videoPlayerContainer"
      >
        <WebVideo__AspectLimiter
          aspectRatio="16:9"
          data-testid="aspectLimiter"
        >
          <StyledComponent
            aspectRatio="16:9"
            data-testid="aspectLimiter"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "WebVideo__AspectLimiter-sc-14vgciv-1",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    [Function],
                  ],
                },
                "displayName": "WebVideo__AspectLimiter",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "WebVideo__AspectLimiter-sc-14vgciv-1",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c1"
              data-testid="aspectLimiter"
            >
              <VideoSplash
                label="Watch the video"
                onClick={[Function]}
                poster="https://img.youtube.com/vi/ppF-fn37SDs/maxresdefault.jpg"
                videoLength={30}
              >
                <VideoSplash__SplashBackground
                  isCustomButton={false}
                  onClick={[Function]}
                  videoPoster="https://img.youtube.com/vi/ppF-fn37SDs/maxresdefault.jpg"
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "VideoSplash__SplashBackground-axtint-0",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            [Function],
                          ],
                        },
                        "displayName": "VideoSplash__SplashBackground",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "VideoSplash__SplashBackground-axtint-0",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    isCustomButton={false}
                    onClick={[Function]}
                    videoPoster="https://img.youtube.com/vi/ppF-fn37SDs/maxresdefault.jpg"
                  >
                    <div
                      className="c2"
                      onClick={[Function]}
                    >
                      <BigVideoButton
                        icon={<Play />}
                        label="Watch the video"
                        videoLength={30}
                      >
                        <BigVideoButton__BigPlayButtonContainer>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "BigVideoButton__BigPlayButtonContainer-hhla36-0",
                                  "isStatic": true,
                                  "lastClassName": "c3",
                                  "rules": Array [
                                    "position: absolute;",
                                    "width: 100%;",
                                    "height: 100%;",
                                    "display: flex;",
                                    "justify-content: center;",
                                    "align-items: center;",
                                    "z-index: 8;",
                                    "cursor: pointer;",
                                    "pointer-events: auto;",
                                    "#bigButton {",
                                    "background-color: rgba(42,44,46,0.9);",
                                    "transition: background-color 0.2s;",
                                    "}",
                                    "fill: rgba(255,255,255,0);",
                                    "transition: background-color 0.2s fill 0.2s;",
                                    ":hover {",
                                    "#bigButton {",
                                    "background-color: rgba(42,44,46,1);",
                                    "transition: background-color 0.2s;",
                                    "}",
                                    "fill: rgba(255,255,255,1);",
                                    "transition: fill 0.2s;",
                                    "}",
                                  ],
                                },
                                "displayName": "BigVideoButton__BigPlayButtonContainer",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "BigVideoButton__BigPlayButtonContainer-hhla36-0",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <div
                              className="c3"
                            >
                              <BigVideoButton__BigPlayButton
                                aria-label="Play video. Video length is 0 minutes and 30 seconds long"
                                id="bigButton"
                              >
                                <StyledComponent
                                  aria-label="Play video. Video length is 0 minutes and 30 seconds long"
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "BigVideoButton__BigPlayButton-hhla36-1",
                                        "isStatic": true,
                                        "lastClassName": "c4",
                                        "rules": Array [
                                          "width: 144px;",
                                          "height: 144px;",
                                          "border-radius: 50%;",
                                          "display: flex;",
                                          "align-items: center;",
                                          "justify-content: center;",
                                          "flex-direction: column;",
                                          "background: none;",
                                          "color: inherit;",
                                          "border: none;",
                                          "padding: 0;",
                                          "font: inherit;",
                                          "cursor: pointer;",
                                          "vertical-align: middle;",
                                          "@media (min-width: 768px) {",
                                          "width: 200px;",
                                          "height: 200px;",
                                          "}",
                                        ],
                                      },
                                      "displayName": "BigVideoButton__BigPlayButton",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "BigVideoButton__BigPlayButton-hhla36-1",
                                      "target": "button",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  id="bigButton"
                                >
                                  <button
                                    aria-label="Play video. Video length is 0 minutes and 30 seconds long"
                                    className="c4"
                                    id="bigButton"
                                  >
                                    <BigVideoButton__IconContainer>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "BigVideoButton__IconContainer-hhla36-2",
                                              "isStatic": true,
                                              "lastClassName": "c5",
                                              "rules": Array [
                                                "svg>path {",
                                                "fill: inherit;",
                                                "}",
                                              ],
                                            },
                                            "displayName": "BigVideoButton__IconContainer",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "BigVideoButton__IconContainer-hhla36-2",
                                            "target": "span",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <span
                                          className="c5"
                                        >
                                          <Play>
                                            <svg
                                              enableBackground="new 0 0 21 24"
                                              height="24px"
                                              id="Layer_1"
                                              version="1.1"
                                              viewBox="0 0 21 24"
                                              width="21px"
                                              xmlns="http://www.w3.org/2000/svg"
                                            >
                                              <g
                                                id="Page-1"
                                              >
                                                <g
                                                  id="Video---Play-inactive"
                                                  transform="translate(-445.000000, -222.000000)"
                                                >
                                                  <path
                                                    d="M446.9,223c-0.1,0-0.1,0-0.2,0.1c-0.1,0.1-0.2,0.2-0.2,0.3v21.2c0,0.1,0.1,0.3,0.2,0.3 c0.1,0.1,0.3,0.1,0.4,0l17.7-10.6c0.1-0.1,0.2-0.2,0.2-0.3c0-0.1-0.1-0.3-0.2-0.3l-17.7-10.6C447,223,446.9,223,446.9,223 M446.9,246c-0.2,0-0.5-0.1-0.7-0.2c-0.4-0.2-0.7-0.7-0.7-1.2v-21.2c0-0.5,0.3-1,0.7-1.2c0.4-0.2,1-0.2,1.4,0l17.7,10.6 c0.4,0.2,0.7,0.7,0.7,1.2c0,0.5-0.3,0.9-0.7,1.2l-17.7,10.6C447.4,245.9,447.1,246,446.9,246"
                                                    fill="#FFFFFF"
                                                    id="play"
                                                  />
                                                </g>
                                              </g>
                                              <path
                                                d="M1.7,0.7c-0.1,0-0.1,0-0.2,0.1C1.4,0.8,1.3,1,1.3,1.1v21.7c0,0.1,0.1,0.3,0.2,0.3c0.1,0.1,0.3,0.1,0.4,0 L20,12.3c0.1-0.1,0.2-0.2,0.2-0.3c0-0.1-0.1-0.3-0.2-0.3L1.9,0.8C1.8,0.7,1.8,0.7,1.7,0.7"
                                                fill="none"
                                              />
                                            </svg>
                                          </Play>
                                        </span>
                                      </StyledComponent>
                                    </BigVideoButton__IconContainer>
                                    <BigVideoButton__BigWatchTextContainer>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "BigVideoButton__BigWatchTextContainer-hhla36-3",
                                              "isStatic": true,
                                              "lastClassName": "c6",
                                              "rules": Array [
                                                "display: none;",
                                                "@media (min-width: 768px) {",
                                                "display: block;",
                                                "}",
                                              ],
                                            },
                                            "displayName": "BigVideoButton__BigWatchTextContainer",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "BigVideoButton__BigWatchTextContainer-hhla36-3",
                                            "target": "span",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <span
                                          className="c6"
                                        >
                                          <Box
                                            inline={false}
                                            tag="div"
                                            vertical={1}
                                          >
                                            <styled.div
                                              inline={false}
                                              tag="div"
                                              vertical={1}
                                            >
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [
                                                      [Function],
                                                    ],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "sc-bdVaJa",
                                                      "isStatic": false,
                                                      "lastClassName": "c11",
                                                      "rules": Array [
                                                        [Function],
                                                        [Function],
                                                        [Function],
                                                        [Function],
                                                        [Function],
                                                      ],
                                                    },
                                                    "displayName": "styled.div",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "sc-bdVaJa",
                                                    "target": "div",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                                inline={false}
                                                tag="div"
                                                vertical={1}
                                              >
                                                <div
                                                  className="c7"
                                                >
                                                  <Paragraph
                                                    align="center"
                                                    bold={true}
                                                    invert={true}
                                                    size="medium"
                                                  >
                                                    <Paragraph__StyledParagraph
                                                      align="center"
                                                      bold={true}
                                                      invert={true}
                                                      size="medium"
                                                    >
                                                      <StyledComponent
                                                        align="center"
                                                        bold={true}
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "Paragraph__StyledParagraph-efl81j-0",
                                                              "isStatic": false,
                                                              "lastClassName": "c14",
                                                              "rules": Array [
                                                                [Function],
                                                                "word-wrap: break-word;",
                                                                "padding: 0;",
                                                                "margin: 0;",
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                "sup {",
                                                                "top: -0.5em;",
                                                                "font-size: 0.875rem;",
                                                                "position: relative;",
                                                                "vertical-align: baseline;",
                                                                "padding-left: 0.1em;",
                                                                "}",
                                                              ],
                                                            },
                                                            "displayName": "Paragraph__StyledParagraph",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "Paragraph__StyledParagraph-efl81j-0",
                                                            "target": "p",
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                        invert={true}
                                                        size="medium"
                                                      >
                                                        <p
                                                          className="c8"
                                                          size="medium"
                                                        >
                                                          Watch the video
                                                        </p>
                                                      </StyledComponent>
                                                    </Paragraph__StyledParagraph>
                                                  </Paragraph>
                                                </div>
                                              </StyledComponent>
                                            </styled.div>
                                          </Box>
                                        </span>
                                      </StyledComponent>
                                    </BigVideoButton__BigWatchTextContainer>
                                    <BigVideoButton__LittleWatchTextContainer>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "BigVideoButton__LittleWatchTextContainer-hhla36-4",
                                              "isStatic": true,
                                              "lastClassName": "c9",
                                              "rules": Array [
                                                "display: block;",
                                                "@media (min-width: 768px) {",
                                                "display: none;",
                                                "}",
                                              ],
                                            },
                                            "displayName": "BigVideoButton__LittleWatchTextContainer",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "BigVideoButton__LittleWatchTextContainer-hhla36-4",
                                            "target": "span",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <span
                                          className="c9"
                                        >
                                          <Paragraph
                                            align="center"
                                            bold={true}
                                            invert={true}
                                            size="small"
                                          >
                                            <Paragraph__StyledParagraph
                                              align="center"
                                              bold={true}
                                              invert={true}
                                              size="small"
                                            >
                                              <StyledComponent
                                                align="center"
                                                bold={true}
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "Paragraph__StyledParagraph-efl81j-0",
                                                      "isStatic": false,
                                                      "lastClassName": "c14",
                                                      "rules": Array [
                                                        [Function],
                                                        "word-wrap: break-word;",
                                                        "padding: 0;",
                                                        "margin: 0;",
                                                        [Function],
                                                        [Function],
                                                        [Function],
                                                        [Function],
                                                        "sup {",
                                                        "top: -0.5em;",
                                                        "font-size: 0.875rem;",
                                                        "position: relative;",
                                                        "vertical-align: baseline;",
                                                        "padding-left: 0.1em;",
                                                        "}",
                                                      ],
                                                    },
                                                    "displayName": "Paragraph__StyledParagraph",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "Paragraph__StyledParagraph-efl81j-0",
                                                    "target": "p",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                                invert={true}
                                                size="small"
                                              >
                                                <p
                                                  className="c10"
                                                  size="small"
                                                >
                                                  Watch the video
                                                </p>
                                              </StyledComponent>
                                            </Paragraph__StyledParagraph>
                                          </Paragraph>
                                        </span>
                                      </StyledComponent>
                                    </BigVideoButton__LittleWatchTextContainer>
                                    <Box
                                      inline={false}
                                      tag="div"
                                      vertical={1}
                                    >
                                      <styled.div
                                        inline={false}
                                        tag="div"
                                        vertical={1}
                                      >
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [
                                                [Function],
                                              ],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-bdVaJa",
                                                "isStatic": false,
                                                "lastClassName": "c11",
                                                "rules": Array [
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "styled.div",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "sc-bdVaJa",
                                              "target": "div",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          inline={false}
                                          tag="div"
                                          vertical={1}
                                        >
                                          <div
                                            className="c7"
                                          >
                                            <Box
                                              between={2}
                                              inline={true}
                                              tag="div"
                                            >
                                              <styled.div
                                                between={2}
                                                inline={true}
                                                tag="div"
                                              >
                                                <StyledComponent
                                                  between={2}
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [
                                                        [Function],
                                                      ],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-bdVaJa",
                                                        "isStatic": false,
                                                        "lastClassName": "c11",
                                                        "rules": Array [
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                        ],
                                                      },
                                                      "displayName": "styled.div",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-bdVaJa",
                                                      "target": "div",
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                  inline={true}
                                                  tag="div"
                                                >
                                                  <div
                                                    className="c11"
                                                  >
                                                    <BigVideoButton__IconAdjust>
                                                      <StyledComponent
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "BigVideoButton__IconAdjust-hhla36-5",
                                                              "isStatic": true,
                                                              "lastClassName": "c12",
                                                              "rules": Array [
                                                                "padding-top: 2px;",
                                                              ],
                                                            },
                                                            "displayName": "BigVideoButton__IconAdjust",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "BigVideoButton__IconAdjust-hhla36-5",
                                                            "target": "span",
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                      >
                                                        <span
                                                          className="c12"
                                                        >
                                                          <DecorativeIcon
                                                            size={16}
                                                            variant="inverted"
                                                          >
                                                            <SVGIcon
                                                              size={16}
                                                              variant="inverted"
                                                            >
                                                              <SVGIcon__StyledSVGIcon
                                                                aria-hidden="true"
                                                                size={16}
                                                                variant="inverted"
                                                              >
                                                                <StyledComponent
                                                                  aria-hidden="true"
                                                                  forwardedComponent={
                                                                    Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "attrs": Array [],
                                                                      "componentStyle": ComponentStyle {
                                                                        "componentId": "SVGIcon__StyledSVGIcon-d1h3in-0",
                                                                        "isStatic": false,
                                                                        "lastClassName": "c13",
                                                                        "rules": Array [
                                                                          "display: inline-flex;",
                                                                          [Function],
                                                                          [Function],
                                                                        ],
                                                                      },
                                                                      "displayName": "SVGIcon__StyledSVGIcon",
                                                                      "foldedComponentIds": Array [],
                                                                      "render": [Function],
                                                                      "styledComponentId": "SVGIcon__StyledSVGIcon-d1h3in-0",
                                                                      "target": "i",
                                                                      "toString": [Function],
                                                                      "warnTooManyClasses": [Function],
                                                                      "withComponent": [Function],
                                                                    }
                                                                  }
                                                                  forwardedRef={null}
                                                                  size={16}
                                                                  variant="inverted"
                                                                >
                                                                  <i
                                                                    aria-hidden="true"
                                                                    className="c13"
                                                                    size={16}
                                                                  >
                                                                    <svg
                                                                      height="24"
                                                                      viewBox="0 0 24 24"
                                                                      width="24"
                                                                    >
                                                                      <path
                                                                        d="M16.5049,11.4668 C16.8189,11.4668 17.0379,11.6868 17.0379,11.9998 C17.0379,12.3138 16.8189,12.5328 16.5049,12.5328 L11.9999,12.5328 C11.6869,12.5328 11.4669,12.3138 11.4669,11.9998 L11.4669,3.8098 C11.4669,3.4958 11.6869,3.2768 11.9999,3.2768 C12.3139,3.2768 12.5329,3.4958 12.5329,3.8098 L12.5329,11.4668 L16.5049,11.4668 Z M12,22.9336 C18.029,22.9336 22.934,18.0296 22.934,11.9996 C22.934,5.9716 18.029,1.0666 12,1.0666 C5.972,1.0666 1.066,5.9716 1.066,11.9996 C1.066,18.0296 5.972,22.9336 12,22.9336 Z M12,-0.0004 C18.616,-0.0004 24,5.3836 24,11.9996 C24,18.6166 18.616,23.9996 12,23.9996 C5.383,23.9996 0,18.6166 0,11.9996 C0,5.3836 5.383,-0.0004 12,-0.0004 Z"
                                                                        fillRule="evenodd"
                                                                      />
                                                                    </svg>
                                                                  </i>
                                                                </StyledComponent>
                                                              </SVGIcon__StyledSVGIcon>
                                                            </SVGIcon>
                                                          </DecorativeIcon>
                                                        </span>
                                                      </StyledComponent>
                                                    </BigVideoButton__IconAdjust>
                                                    <Paragraph
                                                      align="left"
                                                      bold={false}
                                                      data-testid="timestamp"
                                                      invert={true}
                                                      size="medium"
                                                    >
                                                      <Paragraph__StyledParagraph
                                                        align="left"
                                                        bold={false}
                                                        data-testid="timestamp"
                                                        invert={true}
                                                        size="medium"
                                                      >
                                                        <StyledComponent
                                                          align="left"
                                                          bold={false}
                                                          data-testid="timestamp"
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "Paragraph__StyledParagraph-efl81j-0",
                                                                "isStatic": false,
                                                                "lastClassName": "c14",
                                                                "rules": Array [
                                                                  [Function],
                                                                  "word-wrap: break-word;",
                                                                  "padding: 0;",
                                                                  "margin: 0;",
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  "sup {",
                                                                  "top: -0.5em;",
                                                                  "font-size: 0.875rem;",
                                                                  "position: relative;",
                                                                  "vertical-align: baseline;",
                                                                  "padding-left: 0.1em;",
                                                                  "}",
                                                                ],
                                                              },
                                                              "displayName": "Paragraph__StyledParagraph",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "Paragraph__StyledParagraph-efl81j-0",
                                                              "target": "p",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          invert={true}
                                                          size="medium"
                                                        >
                                                          <p
                                                            className="c14"
                                                            data-testid="timestamp"
                                                            size="medium"
                                                          >
                                                            0:30
                                                          </p>
                                                        </StyledComponent>
                                                      </Paragraph__StyledParagraph>
                                                    </Paragraph>
                                                  </div>
                                                </StyledComponent>
                                              </styled.div>
                                            </Box>
                                          </div>
                                        </StyledComponent>
                                      </styled.div>
                                    </Box>
                                  </button>
                                </StyledComponent>
                              </BigVideoButton__BigPlayButton>
                            </div>
                          </StyledComponent>
                        </BigVideoButton__BigPlayButtonContainer>
                      </BigVideoButton>
                    </div>
                  </StyledComponent>
                </VideoSplash__SplashBackground>
              </VideoSplash>
            </div>
          </StyledComponent>
        </WebVideo__AspectLimiter>
      </div>
    </StyledComponent>
  </WebVideo__StyledPlayerContainer>
</WebVideo>
`;
