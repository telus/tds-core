// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TermsAndConditions renders 1`] = `
.c0 {
  padding: 0;
  margin: 0;
  border-width: 0;
  -webkit-transform: rotate(-0.00001deg);
  -ms-transform: rotate(-0.00001deg);
  transform: rotate(-0.00001deg);
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: 100%;
  height: 1px;
  background-color: #d8d8d8;
}

.c12 {
  padding: 0;
  margin: 0;
  border-width: 0;
  height: 32px;
  background-image: radial-gradient(ellipse at top,rgba(150,150,150,0.1) 0%,rgba(0,0,0,0) 70%);
}

div.c3 {
  padding-left: 0;
  padding-right: 0;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

div.c15 {
  padding-left: 1rem;
  padding-right: 1rem;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c2 {
  width: 100%;
}

div.c2 {
  margin: 0 auto;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin: 0 auto;
  width: 100%;
}

div.c1 {
  padding: 0;
}

.c14 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin: 0 auto;
  width: 100%;
}

div.c14 {
  padding: 0;
}

.c10 {
  word-wrap: break-word;
  color: #2a2c2e;
  font-weight: 700;
  font-size: 1rem;
  line-height: 1.25;
  -webkit-letter-spacing: -0.6px;
  -moz-letter-spacing: -0.6px;
  -ms-letter-spacing: -0.6px;
  letter-spacing: -0.6px;
}

.c10 sup {
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
  font-size: 0.875rem;
  top: -0.5em;
}

.c10 > span {
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.c7 > *:not(:last-child) {
  margin-right: 1rem;
}

.c17 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-bottom: 1.5rem;
}

.c17 > *:not(:last-child) {
  margin-bottom: 1rem;
}

.c9 {
  line-height: 24px;
  position: absolute;
  top: 0;
  left: 0;
  -webkit-transition: -webkit-transform 300ms;
  -webkit-transition: transform 300ms;
  transition: transform 300ms;
  -webkit-transform: translate(6px,-1px);
  -ms-transform: translate(6px,-1px);
  transform: translate(6px,-1px);
}

.c4:hover .c9 {
  -webkit-transform: translate(6px,2px);
  -ms-transform: translate(6px,2px);
  transform: translate(6px,2px);
}

.c18 {
  padding-left: 1rem;
}

.c18 > span {
  font-weight: 500;
}

.c16 {
  word-wrap: break-word;
  font-weight: 700;
  font-size: 0.875rem;
  -webkit-letter-spacing: -0.6px;
  -moz-letter-spacing: -0.6px;
  -ms-letter-spacing: -0.6px;
  letter-spacing: -0.6px;
  line-height: 1.42857;
  padding-left: 2rem;
  list-style: decimal;
}

.c5 {
  padding: 0;
  margin: 0;
  border-width: 0;
  font-family: "TELUS-Web","Helvetica Neue",Helvetica,Arial,sans-serif;
  color: #2a2c2e;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: none;
  box-shadow: none;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  background-color: #fff;
}

.c6 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c8 {
  position: relative;
  width: 24px;
  height: 24px;
}

@media (max-width:575px) {
  .c3 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:576px) {
  .c3 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:768px) {
  .c3 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:992px) {
  .c3 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:1200px) {
  .c3 {
    display: block;
    text-align: inherit;
  }
}

@media (max-width:575px) {
  .c15 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:576px) {
  .c15 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:768px) {
  .c15 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:992px) {
  .c15 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:1200px) {
  .c15 {
    display: block;
    text-align: inherit;
  }
}

@media (max-width:575px) {
  div.c2 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:576px) {
  div.c2 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:768px) {
  div.c2 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:992px) {
  div.c2 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:1200px) {
  div.c2 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (max-width:575px) {
  .c1 {
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:576px) {
  .c1 {
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:768px) {
  .c1 {
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:992px) {
  .c1 {
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:1200px) {
  .c1 {
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (max-width:575px) {
  .c14 {
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:576px) {
  .c14 {
    max-width: 36rem;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:768px) {
  .c14 {
    max-width: 48rem;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:992px) {
  .c14 {
    max-width: 62rem;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:1200px) {
  .c14 {
    max-width: 75rem;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (prefers-reduced-motion:reduce) {
  .c13 {
    -webkit-transition: none !important;
    transition: none !important;
  }
}

@media (prefers-reduced-motion:reduce) {
  .c11 {
    -webkit-transition: none !important;
    transition: none !important;
  }
}

@media (prefers-reduced-motion:reduce) {
  .c9 {
    -webkit-transition: none;
    transition: none;
  }
}

@media (min-width:768px) {
  .c16 {
    padding-left: 1rem;
  }
}

<div>
  <hr
    class="c0"
  />
  <div
    class="c1 container-fluid"
  >
    <div
      class="c2 row"
    >
      <div
        class="col-xs c3"
      >
        <button
          aria-expanded="false"
          class="c4 c5"
          type="button"
        >
          <div
            class="c6 sc-bZQynM c6 c7"
          >
            <span
              class="c8"
            >
              <svg
                height="24px"
                viewBox="0 0 24 24"
                width="24px"
                xlink="http://www.w3.org/1999/xlink"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M12,0 C5.373,0 0,5.373 0,12 C0,18.627 5.373,24 12,24 C18.627,24 24,18.627 24,12 C24,5.373 18.627,0 12,0 M12,1 C18.065,1 23,5.935 23,12 C23,18.065 18.065,23 12,23 C5.935,23 1,18.065 1,12 C1,5.935 5.935,1 12,1"
                  fill="#4b286d"
                />
              </svg>
              <span
                class="c9"
              >
                <svg
                  height="8px"
                  viewBox="0 0 12 8"
                  width="12px"
                  xlink="http://www.w3.org/1999/xlink"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M11.7940812,0.183230226 C11.4424627,-0.117489399 11.0896181,0.0450442657 10.8868854,0.245275736 L5.99681615,4.74055299 L1.11722187,0.245275732 C0.93839231,0.0814520871 0.490533284,-0.180032793 0.165240429,0.183230232 C-0.160052425,0.546493257 0.0652096387,0.91610528 0.243271687,1.07992892 L5.6348225,6.87660266 C5.81365205,7.04113245 6.10607292,7.04113245 6.28490248,6.87660266 C6.28490248,6.87589653 11.7940809,1.07992896 11.7940809,1.07992896 C11.9792355,0.935042671 12.1456996,0.483949851 11.7940812,0.183230226 Z"
                  />
                </svg>
              </span>
            </span>
            <h2
              class="c10"
              data-testid="heading"
            >
              View terms and conditions
            </h2>
          </div>
        </button>
      </div>
    </div>
  </div>
  <div
    aria-hidden="true"
    class="c11"
    style="opacity:0;height:0px;overflow:hidden;visibility:hidden;transition:height 150ms ease-in-out, opacity 150ms ease-in-out, visibility 0ms 150ms"
  >
    <div>
      <div
        class="c1 container-fluid"
      >
        <div
          class="c2 row"
        >
          <div
            class="col-xs c3"
          >
            <hr
              class="c12"
            />
          </div>
        </div>
      </div>
      <div
        class="c13"
        style="transform:translateY(1rem);transition:transform 150ms"
      >
        <div
          class="c14 container-fluid"
        >
          <div
            class="c2 row"
          >
            <div
              class="col-xs-12 col-md-offset-1 col-md-10 c15"
            >
              <ol
                class="c16 sc-ifAKCX c16 c17"
                type="indexed"
              >
                <li
                  class="c18"
                >
                  One
                </li>
                <li
                  class="c18"
                >
                  Two
                </li>
                <li
                  class="c18"
                >
                  Three
                </li>
              </ol>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <hr
    class="c0"
  />
</div>
`;

exports[`TermsAndConditions renders expanded 1`] = `
.c0 {
  padding: 0;
  margin: 0;
  border-width: 0;
  -webkit-transform: rotate(-0.00001deg);
  -ms-transform: rotate(-0.00001deg);
  transform: rotate(-0.00001deg);
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: 100%;
  height: 1px;
  background-color: #d8d8d8;
}

.c12 {
  padding: 0;
  margin: 0;
  border-width: 0;
  height: 32px;
  background-image: radial-gradient(ellipse at top,rgba(150,150,150,0.1) 0%,rgba(0,0,0,0) 70%);
}

div.c3 {
  padding-left: 0;
  padding-right: 0;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

div.c15 {
  padding-left: 1rem;
  padding-right: 1rem;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c2 {
  width: 100%;
}

div.c2 {
  margin: 0 auto;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin: 0 auto;
  width: 100%;
}

div.c1 {
  padding: 0;
}

.c14 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin: 0 auto;
  width: 100%;
}

div.c14 {
  padding: 0;
}

.c10 {
  word-wrap: break-word;
  color: #2a2c2e;
  font-weight: 700;
  font-size: 1rem;
  line-height: 1.25;
  -webkit-letter-spacing: -0.6px;
  -moz-letter-spacing: -0.6px;
  -ms-letter-spacing: -0.6px;
  letter-spacing: -0.6px;
}

.c10 sup {
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
  font-size: 0.875rem;
  top: -0.5em;
}

.c10 > span {
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.c7 > *:not(:last-child) {
  margin-right: 1rem;
}

.c17 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-bottom: 1.5rem;
}

.c17 > *:not(:last-child) {
  margin-bottom: 1rem;
}

.c4:hover .c19 {
  -webkit-transform: translate(6px,2px);
  -ms-transform: translate(6px,2px);
  transform: translate(6px,2px);
}

.c9 {
  line-height: 24px;
  position: absolute;
  top: 0;
  left: 0;
  -webkit-transition: -webkit-transform 300ms;
  -webkit-transition: transform 300ms;
  transition: transform 300ms;
  -webkit-transform: translate(6px,-2px);
  -ms-transform: translate(6px,-2px);
  transform: translate(6px,-2px);
}

.c4:hover .c9 {
  -webkit-transform: translate(6px,-5px);
  -ms-transform: translate(6px,-5px);
  transform: translate(6px,-5px);
}

.c18 {
  padding-left: 1rem;
}

.c18 > span {
  font-weight: 500;
}

.c16 {
  word-wrap: break-word;
  font-weight: 700;
  font-size: 0.875rem;
  -webkit-letter-spacing: -0.6px;
  -moz-letter-spacing: -0.6px;
  -ms-letter-spacing: -0.6px;
  letter-spacing: -0.6px;
  line-height: 1.42857;
  padding-left: 2rem;
  list-style: decimal;
}

.c5 {
  padding: 0;
  margin: 0;
  border-width: 0;
  font-family: "TELUS-Web","Helvetica Neue",Helvetica,Arial,sans-serif;
  color: #2a2c2e;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: none;
  box-shadow: none;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  background-color: #fff;
}

.c6 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c8 {
  position: relative;
  width: 24px;
  height: 24px;
}

@media (max-width:575px) {
  .c3 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:576px) {
  .c3 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:768px) {
  .c3 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:992px) {
  .c3 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:1200px) {
  .c3 {
    display: block;
    text-align: inherit;
  }
}

@media (max-width:575px) {
  .c15 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:576px) {
  .c15 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:768px) {
  .c15 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:992px) {
  .c15 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:1200px) {
  .c15 {
    display: block;
    text-align: inherit;
  }
}

@media (max-width:575px) {
  div.c2 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:576px) {
  div.c2 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:768px) {
  div.c2 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:992px) {
  div.c2 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:1200px) {
  div.c2 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (max-width:575px) {
  .c1 {
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:576px) {
  .c1 {
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:768px) {
  .c1 {
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:992px) {
  .c1 {
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:1200px) {
  .c1 {
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (max-width:575px) {
  .c14 {
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:576px) {
  .c14 {
    max-width: 36rem;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:768px) {
  .c14 {
    max-width: 48rem;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:992px) {
  .c14 {
    max-width: 62rem;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:1200px) {
  .c14 {
    max-width: 75rem;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (prefers-reduced-motion:reduce) {
  .c13 {
    -webkit-transition: none !important;
    transition: none !important;
  }
}

@media (prefers-reduced-motion:reduce) {
  .c11 {
    -webkit-transition: none !important;
    transition: none !important;
  }
}

@media (prefers-reduced-motion:reduce) {
  .c9 {
    -webkit-transition: none;
    transition: none;
  }
}

@media (min-width:768px) {
  .c16 {
    padding-left: 1rem;
  }
}

<TermsAndConditions
  copy="en"
  indexedContent={
    Array [
      "One",
      "Two",
      "Three",
    ]
  }
  nonIndexedContent={Array []}
>
  <div>
    <HairlineDivider
      gradient={false}
      vertical={false}
    >
      <HairlineDivider__StyledHairlineDivider
        gradient={false}
        vertical={false}
      >
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "HairlineDivider__StyledHairlineDivider-biamlk-0",
                "isStatic": false,
                "lastClassName": "c0",
                "rules": Array [
                  "padding: 0;",
                  "margin: 0;",
                  "border-width: 0;",
                  [Function],
                ],
              },
              "displayName": "HairlineDivider__StyledHairlineDivider",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "HairlineDivider__StyledHairlineDivider-biamlk-0",
              "target": "hr",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          gradient={false}
          vertical={false}
        >
          <hr
            className="c0"
          />
        </StyledComponent>
      </HairlineDivider__StyledHairlineDivider>
    </HairlineDivider>
    <FlexGrid
      gutter={false}
      limitWidth={false}
    >
      <Styled(Component)
        fluid={true}
        limitWidth={false}
        reverseLevel={
          Array [
            false,
            false,
            false,
            false,
            false,
          ]
        }
      >
        <StyledComponent
          fluid={true}
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-htpNat",
                "isStatic": false,
                "lastClassName": "c14",
                "rules": Array [
                  [Function],
                ],
              },
              "displayName": "Styled(Component)",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-htpNat",
              "target": [Function],
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          limitWidth={false}
          reverseLevel={
            Array [
              false,
              false,
              false,
              false,
              false,
            ]
          }
        >
          <Component
            className="c1"
            fluid={true}
            limitWidth={false}
            reverseLevel={
              Array [
                false,
                false,
                false,
                false,
                false,
              ]
            }
          >
            <Grid
              className="c1"
              fluid={true}
            >
              <div
                className="c1 container-fluid"
              >
                <Row>
                  <Styled(Component)
                    reverseLevel={
                      Array [
                        false,
                        false,
                        false,
                        false,
                        false,
                      ]
                    }
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-bwzfXH",
                            "isStatic": false,
                            "lastClassName": "c2",
                            "rules": Array [
                              [Function],
                            ],
                          },
                          "displayName": "Styled(Component)",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-bwzfXH",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      reverseLevel={
                        Array [
                          false,
                          false,
                          false,
                          false,
                          false,
                        ]
                      }
                    >
                      <Component
                        className="c2"
                        reverseLevel={
                          Array [
                            false,
                            false,
                            false,
                            false,
                            false,
                          ]
                        }
                      >
                        <Row
                          className="c2"
                        >
                          <div
                            className="c2 row"
                          >
                            <Col>
                              <Styled(Component)
                                gutter={false}
                                hiddenLevel={
                                  Array [
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                  ]
                                }
                                horizontalAlignLevel={
                                  Array [
                                    "inherit",
                                    "inherit",
                                    "inherit",
                                    "inherit",
                                    "inherit",
                                  ]
                                }
                                xs={true}
                              >
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-bdVaJa",
                                        "isStatic": false,
                                        "lastClassName": "c15",
                                        "rules": Array [
                                          [Function],
                                        ],
                                      },
                                      "displayName": "Styled(Component)",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-bdVaJa",
                                      "target": [Function],
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  gutter={false}
                                  hiddenLevel={
                                    Array [
                                      false,
                                      false,
                                      false,
                                      false,
                                      false,
                                    ]
                                  }
                                  horizontalAlignLevel={
                                    Array [
                                      "inherit",
                                      "inherit",
                                      "inherit",
                                      "inherit",
                                      "inherit",
                                    ]
                                  }
                                  xs={true}
                                >
                                  <Component
                                    className="c3"
                                    gutter={false}
                                    hiddenLevel={
                                      Array [
                                        false,
                                        false,
                                        false,
                                        false,
                                        false,
                                      ]
                                    }
                                    horizontalAlignLevel={
                                      Array [
                                        "inherit",
                                        "inherit",
                                        "inherit",
                                        "inherit",
                                        "inherit",
                                      ]
                                    }
                                    xs={true}
                                  >
                                    <Col
                                      className="c3"
                                      xs={true}
                                    >
                                      <div
                                        className="col-xs c3"
                                      >
                                        <Styled(StyledClickable)
                                          aria-expanded={true}
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          <StyledComponent
                                            aria-expanded={true}
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-EHOje",
                                                  "isStatic": true,
                                                  "lastClassName": "c5",
                                                  "rules": Array [
                                                    "padding: 0;",
                                                    "margin: 0;",
                                                    "border-width: 0;",
                                                    "font-family: \\"TELUS-Web\\", \\"Helvetica Neue\\", Helvetica, Arial, sans-serif;",
                                                    "color: #2a2c2e;",
                                                    "appearance: none;",
                                                    "background: none;",
                                                    "box-shadow: none;",
                                                    "cursor: pointer;",
                                                    "display: flex;",
                                                    "width: 100%;",
                                                    "justify-content: center;",
                                                    "background-color: #fff;",
                                                  ],
                                                },
                                                "displayName": "Styled(StyledClickable)",
                                                "foldedComponentIds": Array [
                                                  "c4",
                                                ],
                                                "render": [Function],
                                                "styledComponentId": "sc-EHOje",
                                                "target": "button",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            <button
                                              aria-expanded={true}
                                              className="c4 c5"
                                              onClick={[Function]}
                                              type="button"
                                            >
                                              <Styled(Box)
                                                between={3}
                                                inline={true}
                                                tag="div"
                                                vertical={3}
                                              >
                                                <StyledComponent
                                                  between={3}
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-bZQynM",
                                                        "isStatic": true,
                                                        "lastClassName": "c6",
                                                        "rules": Array [
                                                          "align-items: center;",
                                                        ],
                                                      },
                                                      "defaultProps": Object {
                                                        "below": undefined,
                                                        "between": undefined,
                                                        "className": undefined,
                                                        "horizontal": undefined,
                                                        "inline": false,
                                                        "inset": undefined,
                                                        "tag": "div",
                                                        "vertical": undefined,
                                                      },
                                                      "displayName": "Styled(Box)",
                                                      "foldedComponentIds": Array [],
                                                      "propTypes": Object {
                                                        "below": [Function],
                                                        "between": [Function],
                                                        "children": [Function],
                                                        "className": [Function],
                                                        "horizontal": [Function],
                                                        "inline": [Function],
                                                        "inset": [Function],
                                                        "tag": [Function],
                                                        "vertical": [Function],
                                                      },
                                                      "render": [Function],
                                                      "styledComponentId": "sc-bZQynM",
                                                      "target": Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "defaultProps": Object {
                                                          "below": undefined,
                                                          "between": undefined,
                                                          "className": undefined,
                                                          "horizontal": undefined,
                                                          "inline": false,
                                                          "inset": undefined,
                                                          "tag": "div",
                                                          "vertical": undefined,
                                                        },
                                                        "displayName": "Box",
                                                        "propTypes": Object {
                                                          "below": [Function],
                                                          "between": [Function],
                                                          "children": [Function],
                                                          "className": [Function],
                                                          "horizontal": [Function],
                                                          "inline": [Function],
                                                          "inset": [Function],
                                                          "tag": [Function],
                                                          "vertical": [Function],
                                                        },
                                                        "render": [Function],
                                                      },
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                  inline={true}
                                                  tag="div"
                                                  vertical={3}
                                                >
                                                  <Box
                                                    between={3}
                                                    className="c6"
                                                    inline={true}
                                                    tag="div"
                                                    vertical={3}
                                                  >
                                                    <styled.div
                                                      between={3}
                                                      className="c6"
                                                      inline={true}
                                                      tag="div"
                                                      vertical={3}
                                                    >
                                                      <StyledComponent
                                                        between={3}
                                                        className="c6"
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [
                                                              [Function],
                                                            ],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "sc-bxivhb",
                                                              "isStatic": false,
                                                              "lastClassName": "c17",
                                                              "rules": Array [
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                              ],
                                                            },
                                                            "displayName": "styled.div",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "sc-bxivhb",
                                                            "target": "div",
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                        inline={true}
                                                        tag="div"
                                                        vertical={3}
                                                      >
                                                        <div
                                                          className="c6 sc-bZQynM c6 c7"
                                                        >
                                                          <TermsAndConditions__StyledChevronContainer>
                                                            <StyledComponent
                                                              forwardedComponent={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "attrs": Array [],
                                                                  "componentStyle": ComponentStyle {
                                                                    "componentId": "TermsAndConditions__StyledChevronContainer-sc-1aoonet-0",
                                                                    "isStatic": true,
                                                                    "lastClassName": "c8",
                                                                    "rules": Array [
                                                                      "position: relative;",
                                                                      "width: 24px;",
                                                                      "height: 24px;",
                                                                    ],
                                                                  },
                                                                  "displayName": "TermsAndConditions__StyledChevronContainer",
                                                                  "foldedComponentIds": Array [],
                                                                  "render": [Function],
                                                                  "styledComponentId": "TermsAndConditions__StyledChevronContainer-sc-1aoonet-0",
                                                                  "target": "span",
                                                                  "toString": [Function],
                                                                  "warnTooManyClasses": [Function],
                                                                  "withComponent": [Function],
                                                                }
                                                              }
                                                              forwardedRef={null}
                                                            >
                                                              <span
                                                                className="c8"
                                                              >
                                                                <Circle>
                                                                  <svg
                                                                    height="24px"
                                                                    viewBox="0 0 24 24"
                                                                    width="24px"
                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                    xmlnsXlink="http://www.w3.org/1999/xlink"
                                                                  >
                                                                    <path
                                                                      d="M12,0 C5.373,0 0,5.373 0,12 C0,18.627 5.373,24 12,24 C18.627,24 24,18.627 24,12 C24,5.373 18.627,0 12,0 M12,1 C18.065,1 23,5.935 23,12 C23,18.065 18.065,23 12,23 C5.935,23 1,18.065 1,12 C1,5.935 5.935,1 12,1"
                                                                      fill="#4b286d"
                                                                    />
                                                                  </svg>
                                                                </Circle>
                                                                <Chevron
                                                                  isOpen={true}
                                                                >
                                                                  <Chevron__StyledChevron
                                                                    isOpen={true}
                                                                  >
                                                                    <StyledComponent
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "Chevron__StyledChevron-sc-17gl4qs-0",
                                                                            "isStatic": false,
                                                                            "lastClassName": "c9",
                                                                            "rules": Array [
                                                                              [Function],
                                                                            ],
                                                                          },
                                                                          "displayName": "Chevron__StyledChevron",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "Chevron__StyledChevron-sc-17gl4qs-0",
                                                                          "target": "span",
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={null}
                                                                      isOpen={true}
                                                                    >
                                                                      <span
                                                                        className="c9"
                                                                      >
                                                                        <svg
                                                                          height="8px"
                                                                          viewBox="0 0 12 8"
                                                                          width="12px"
                                                                          xmlns="http://www.w3.org/2000/svg"
                                                                          xmlnsXlink="http://www.w3.org/1999/xlink"
                                                                        >
                                                                          <path
                                                                            d="M11.7940812,0.183230226 C11.4424627,-0.117489399 11.0896181,0.0450442657 10.8868854,0.245275736 L5.99681615,4.74055299 L1.11722187,0.245275732 C0.93839231,0.0814520871 0.490533284,-0.180032793 0.165240429,0.183230232 C-0.160052425,0.546493257 0.0652096387,0.91610528 0.243271687,1.07992892 L5.6348225,6.87660266 C5.81365205,7.04113245 6.10607292,7.04113245 6.28490248,6.87660266 C6.28490248,6.87589653 11.7940809,1.07992896 11.7940809,1.07992896 C11.9792355,0.935042671 12.1456996,0.483949851 11.7940812,0.183230226 Z"
                                                                            transform="rotate(180, 6, 4)"
                                                                          />
                                                                        </svg>
                                                                      </span>
                                                                    </StyledComponent>
                                                                  </Chevron__StyledChevron>
                                                                </Chevron>
                                                              </span>
                                                            </StyledComponent>
                                                          </TermsAndConditions__StyledChevronContainer>
                                                          <Heading
                                                            invert={false}
                                                            level="h4"
                                                            tag="h2"
                                                          >
                                                            <Heading__StyledHeading
                                                              as="h2"
                                                              data-testid="heading"
                                                              invert={false}
                                                              level="h4"
                                                            >
                                                              <StyledComponent
                                                                as="h2"
                                                                data-testid="heading"
                                                                forwardedComponent={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "attrs": Array [],
                                                                    "componentStyle": ComponentStyle {
                                                                      "componentId": "Heading__StyledHeading-mpz92r-0",
                                                                      "isStatic": false,
                                                                      "lastClassName": "c10",
                                                                      "rules": Array [
                                                                        "word-wrap: break-word;",
                                                                        [Function],
                                                                      ],
                                                                    },
                                                                    "displayName": "Heading__StyledHeading",
                                                                    "foldedComponentIds": Array [],
                                                                    "render": [Function],
                                                                    "styledComponentId": "Heading__StyledHeading-mpz92r-0",
                                                                    "target": "h1",
                                                                    "toString": [Function],
                                                                    "warnTooManyClasses": [Function],
                                                                    "withComponent": [Function],
                                                                  }
                                                                }
                                                                forwardedRef={null}
                                                                invert={false}
                                                                level="h4"
                                                              >
                                                                <h2
                                                                  className="c10"
                                                                  data-testid="heading"
                                                                >
                                                                  Hide terms and conditions
                                                                </h2>
                                                              </StyledComponent>
                                                            </Heading__StyledHeading>
                                                          </Heading>
                                                        </div>
                                                      </StyledComponent>
                                                    </styled.div>
                                                  </Box>
                                                </StyledComponent>
                                              </Styled(Box)>
                                            </button>
                                          </StyledComponent>
                                        </Styled(StyledClickable)>
                                      </div>
                                    </Col>
                                  </Component>
                                </StyledComponent>
                              </Styled(Component)>
                            </Col>
                          </div>
                        </Row>
                      </Component>
                    </StyledComponent>
                  </Styled(Component)>
                </Row>
              </div>
            </Grid>
          </Component>
        </StyledComponent>
      </Styled(Component)>
    </FlexGrid>
    <FadeAndReveal
      height={0}
      in={true}
      timeout={150}
    >
      <CSSTransition
        classNames=""
        in={true}
        timeout={
          Object {
            "appear": 150,
            "enter": 150,
            "exit": 0,
          }
        }
      >
        <Transition
          appear={false}
          enter={true}
          exit={true}
          in={true}
          mountOnEnter={false}
          onEnter={[Function]}
          onEntered={[Function]}
          onEntering={[Function]}
          onExit={[Function]}
          onExited={[Function]}
          onExiting={[Function]}
          timeout={
            Object {
              "appear": 150,
              "enter": 150,
              "exit": 0,
            }
          }
          unmountOnExit={false}
        >
          <FadeAndReveal__StyledContainer
            aria-hidden={false}
            style={
              Object {
                "height": 0,
                "opacity": 1,
                "overflow": "hidden",
                "transition": "height 150ms ease-in-out, opacity 150ms ease-in-out",
              }
            }
          >
            <StyledComponent
              aria-hidden={false}
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "FadeAndReveal__StyledContainer-sc-1drkfnv-0",
                    "isStatic": true,
                    "lastClassName": "c11",
                    "rules": Array [
                      "@media (prefers-reduced-motion: reduce) {",
                      "transition: none !important;",
                      "}",
                    ],
                  },
                  "displayName": "FadeAndReveal__StyledContainer",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "FadeAndReveal__StyledContainer-sc-1drkfnv-0",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              style={
                Object {
                  "height": 0,
                  "opacity": 1,
                  "overflow": "hidden",
                  "transition": "height 150ms ease-in-out, opacity 150ms ease-in-out",
                }
              }
            >
              <div
                aria-hidden={false}
                className="c11"
                style={
                  Object {
                    "height": 0,
                    "opacity": 1,
                    "overflow": "hidden",
                    "transition": "height 150ms ease-in-out, opacity 150ms ease-in-out",
                  }
                }
              >
                <div>
                  <FlexGrid
                    gutter={false}
                    limitWidth={false}
                  >
                    <Styled(Component)
                      fluid={true}
                      limitWidth={false}
                      reverseLevel={
                        Array [
                          false,
                          false,
                          false,
                          false,
                          false,
                        ]
                      }
                    >
                      <StyledComponent
                        fluid={true}
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-htpNat",
                              "isStatic": false,
                              "lastClassName": "c14",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "Styled(Component)",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-htpNat",
                            "target": [Function],
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        limitWidth={false}
                        reverseLevel={
                          Array [
                            false,
                            false,
                            false,
                            false,
                            false,
                          ]
                        }
                      >
                        <Component
                          className="c1"
                          fluid={true}
                          limitWidth={false}
                          reverseLevel={
                            Array [
                              false,
                              false,
                              false,
                              false,
                              false,
                            ]
                          }
                        >
                          <Grid
                            className="c1"
                            fluid={true}
                          >
                            <div
                              className="c1 container-fluid"
                            >
                              <Row>
                                <Styled(Component)
                                  reverseLevel={
                                    Array [
                                      false,
                                      false,
                                      false,
                                      false,
                                      false,
                                    ]
                                  }
                                >
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-bwzfXH",
                                          "isStatic": false,
                                          "lastClassName": "c2",
                                          "rules": Array [
                                            [Function],
                                          ],
                                        },
                                        "displayName": "Styled(Component)",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "sc-bwzfXH",
                                        "target": [Function],
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    reverseLevel={
                                      Array [
                                        false,
                                        false,
                                        false,
                                        false,
                                        false,
                                      ]
                                    }
                                  >
                                    <Component
                                      className="c2"
                                      reverseLevel={
                                        Array [
                                          false,
                                          false,
                                          false,
                                          false,
                                          false,
                                        ]
                                      }
                                    >
                                      <Row
                                        className="c2"
                                      >
                                        <div
                                          className="c2 row"
                                        >
                                          <Col>
                                            <Styled(Component)
                                              gutter={false}
                                              hiddenLevel={
                                                Array [
                                                  false,
                                                  false,
                                                  false,
                                                  false,
                                                  false,
                                                ]
                                              }
                                              horizontalAlignLevel={
                                                Array [
                                                  "inherit",
                                                  "inherit",
                                                  "inherit",
                                                  "inherit",
                                                  "inherit",
                                                ]
                                              }
                                              xs={true}
                                            >
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "sc-bdVaJa",
                                                      "isStatic": false,
                                                      "lastClassName": "c15",
                                                      "rules": Array [
                                                        [Function],
                                                      ],
                                                    },
                                                    "displayName": "Styled(Component)",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "sc-bdVaJa",
                                                    "target": [Function],
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                                gutter={false}
                                                hiddenLevel={
                                                  Array [
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                  ]
                                                }
                                                horizontalAlignLevel={
                                                  Array [
                                                    "inherit",
                                                    "inherit",
                                                    "inherit",
                                                    "inherit",
                                                    "inherit",
                                                  ]
                                                }
                                                xs={true}
                                              >
                                                <Component
                                                  className="c3"
                                                  gutter={false}
                                                  hiddenLevel={
                                                    Array [
                                                      false,
                                                      false,
                                                      false,
                                                      false,
                                                      false,
                                                    ]
                                                  }
                                                  horizontalAlignLevel={
                                                    Array [
                                                      "inherit",
                                                      "inherit",
                                                      "inherit",
                                                      "inherit",
                                                      "inherit",
                                                    ]
                                                  }
                                                  xs={true}
                                                >
                                                  <Col
                                                    className="c3"
                                                    xs={true}
                                                  >
                                                    <div
                                                      className="col-xs c3"
                                                    >
                                                      <DimpleDivider>
                                                        <DimpleDivider__StyledDimpleDivider>
                                                          <StyledComponent
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "DimpleDivider__StyledDimpleDivider-quxnvh-0",
                                                                  "isStatic": true,
                                                                  "lastClassName": "c12",
                                                                  "rules": Array [
                                                                    "padding: 0;",
                                                                    "margin: 0;",
                                                                    "border-width: 0;",
                                                                    "height: 32px;",
                                                                    "background-image: radial-gradient(ellipse at top, rgba(150, 150, 150, 0.1) 0%, rgba(0, 0, 0, 0) 70%);",
                                                                  ],
                                                                },
                                                                "displayName": "DimpleDivider__StyledDimpleDivider",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "DimpleDivider__StyledDimpleDivider-quxnvh-0",
                                                                "target": "hr",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                          >
                                                            <hr
                                                              className="c12"
                                                            />
                                                          </StyledComponent>
                                                        </DimpleDivider__StyledDimpleDivider>
                                                      </DimpleDivider>
                                                    </div>
                                                  </Col>
                                                </Component>
                                              </StyledComponent>
                                            </Styled(Component)>
                                          </Col>
                                        </div>
                                      </Row>
                                    </Component>
                                  </StyledComponent>
                                </Styled(Component)>
                              </Row>
                            </div>
                          </Grid>
                        </Component>
                      </StyledComponent>
                    </Styled(Component)>
                  </FlexGrid>
                  <Translate
                    direction="y"
                    distance="0rem"
                    in={true}
                    initialStyle={
                      Object {
                        "transform": "translateY(1rem)",
                      }
                    }
                    timeout={150}
                  >
                    <Transition
                      appear={false}
                      enter={true}
                      exit={true}
                      in={true}
                      mountOnEnter={false}
                      onEnter={[Function]}
                      onEntered={[Function]}
                      onEntering={[Function]}
                      onExit={[Function]}
                      onExited={[Function]}
                      onExiting={[Function]}
                      timeout={150}
                      unmountOnExit={false}
                    >
                      <Translate__StyledContainer
                        style={
                          Object {
                            "transform": "translateY(0rem)",
                            "transition": "transform 150ms",
                          }
                        }
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Translate__StyledContainer-lgiaqm-0",
                                "isStatic": true,
                                "lastClassName": "c13",
                                "rules": Array [
                                  "@media (prefers-reduced-motion: reduce) {",
                                  "transition: none !important;",
                                  "}",
                                ],
                              },
                              "displayName": "Translate__StyledContainer",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "Translate__StyledContainer-lgiaqm-0",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          style={
                            Object {
                              "transform": "translateY(0rem)",
                              "transition": "transform 150ms",
                            }
                          }
                        >
                          <div
                            className="c13"
                            style={
                              Object {
                                "transform": "translateY(0rem)",
                                "transition": "transform 150ms",
                              }
                            }
                          >
                            <FlexGrid
                              gutter={true}
                              limitWidth={true}
                            >
                              <Styled(Component)
                                fluid={true}
                                limitWidth={true}
                                reverseLevel={
                                  Array [
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                  ]
                                }
                              >
                                <StyledComponent
                                  fluid={true}
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-htpNat",
                                        "isStatic": false,
                                        "lastClassName": "c14",
                                        "rules": Array [
                                          [Function],
                                        ],
                                      },
                                      "displayName": "Styled(Component)",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-htpNat",
                                      "target": [Function],
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  limitWidth={true}
                                  reverseLevel={
                                    Array [
                                      false,
                                      false,
                                      false,
                                      false,
                                      false,
                                    ]
                                  }
                                >
                                  <Component
                                    className="c14"
                                    fluid={true}
                                    limitWidth={true}
                                    reverseLevel={
                                      Array [
                                        false,
                                        false,
                                        false,
                                        false,
                                        false,
                                      ]
                                    }
                                  >
                                    <Grid
                                      className="c14"
                                      fluid={true}
                                    >
                                      <div
                                        className="c14 container-fluid"
                                      >
                                        <Row>
                                          <Styled(Component)
                                            reverseLevel={
                                              Array [
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                              ]
                                            }
                                          >
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-bwzfXH",
                                                    "isStatic": false,
                                                    "lastClassName": "c2",
                                                    "rules": Array [
                                                      [Function],
                                                    ],
                                                  },
                                                  "displayName": "Styled(Component)",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-bwzfXH",
                                                  "target": [Function],
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              reverseLevel={
                                                Array [
                                                  false,
                                                  false,
                                                  false,
                                                  false,
                                                  false,
                                                ]
                                              }
                                            >
                                              <Component
                                                className="c2"
                                                reverseLevel={
                                                  Array [
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                  ]
                                                }
                                              >
                                                <Row
                                                  className="c2"
                                                >
                                                  <div
                                                    className="c2 row"
                                                  >
                                                    <Col
                                                      md={10}
                                                      mdOffset={1}
                                                      xs={12}
                                                    >
                                                      <Styled(Component)
                                                        gutter={true}
                                                        hiddenLevel={
                                                          Array [
                                                            12,
                                                            12,
                                                            10,
                                                            10,
                                                            10,
                                                          ]
                                                        }
                                                        horizontalAlignLevel={
                                                          Array [
                                                            "inherit",
                                                            "inherit",
                                                            "inherit",
                                                            "inherit",
                                                            "inherit",
                                                          ]
                                                        }
                                                        md={10}
                                                        mdOffset={1}
                                                        xs={12}
                                                      >
                                                        <StyledComponent
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-bdVaJa",
                                                                "isStatic": false,
                                                                "lastClassName": "c15",
                                                                "rules": Array [
                                                                  [Function],
                                                                ],
                                                              },
                                                              "displayName": "Styled(Component)",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-bdVaJa",
                                                              "target": [Function],
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          gutter={true}
                                                          hiddenLevel={
                                                            Array [
                                                              12,
                                                              12,
                                                              10,
                                                              10,
                                                              10,
                                                            ]
                                                          }
                                                          horizontalAlignLevel={
                                                            Array [
                                                              "inherit",
                                                              "inherit",
                                                              "inherit",
                                                              "inherit",
                                                              "inherit",
                                                            ]
                                                          }
                                                          md={10}
                                                          mdOffset={1}
                                                          xs={12}
                                                        >
                                                          <Component
                                                            className="c15"
                                                            gutter={true}
                                                            hiddenLevel={
                                                              Array [
                                                                12,
                                                                12,
                                                                10,
                                                                10,
                                                                10,
                                                              ]
                                                            }
                                                            horizontalAlignLevel={
                                                              Array [
                                                                "inherit",
                                                                "inherit",
                                                                "inherit",
                                                                "inherit",
                                                                "inherit",
                                                              ]
                                                            }
                                                            md={10}
                                                            mdOffset={1}
                                                            xs={12}
                                                          >
                                                            <Col
                                                              className="c15"
                                                              md={10}
                                                              mdOffset={1}
                                                              xs={12}
                                                            >
                                                              <div
                                                                className="col-xs-12 col-md-offset-1 col-md-10 c15"
                                                              >
                                                                <List
                                                                  below={4}
                                                                  size="small"
                                                                  styledComponent={
                                                                    Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "attrs": Array [],
                                                                      "componentStyle": ComponentStyle {
                                                                        "componentId": "sc-ifAKCX",
                                                                        "isStatic": false,
                                                                        "lastClassName": "c16",
                                                                        "rules": Array [
                                                                          "word-wrap: break-word;",
                                                                          "font-weight: 700;",
                                                                          "font-size: 0.875rem;",
                                                                          "letter-spacing: -0.6px;",
                                                                          "line-height: 1.42857;",
                                                                          "padding-left: 2rem;",
                                                                          "@media (min-width: 768px) {",
                                                                          "padding-left: 1rem;",
                                                                          "}",
                                                                          [Function],
                                                                        ],
                                                                      },
                                                                      "defaultProps": Object {
                                                                        "below": undefined,
                                                                        "between": undefined,
                                                                        "className": undefined,
                                                                        "horizontal": undefined,
                                                                        "inline": false,
                                                                        "inset": undefined,
                                                                        "tag": "div",
                                                                        "vertical": undefined,
                                                                      },
                                                                      "displayName": "Styled(Box)",
                                                                      "foldedComponentIds": Array [],
                                                                      "propTypes": Object {
                                                                        "below": [Function],
                                                                        "between": [Function],
                                                                        "children": [Function],
                                                                        "className": [Function],
                                                                        "horizontal": [Function],
                                                                        "inline": [Function],
                                                                        "inset": [Function],
                                                                        "tag": [Function],
                                                                        "vertical": [Function],
                                                                      },
                                                                      "render": [Function],
                                                                      "styledComponentId": "sc-ifAKCX",
                                                                      "target": Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "defaultProps": Object {
                                                                          "below": undefined,
                                                                          "between": undefined,
                                                                          "className": undefined,
                                                                          "horizontal": undefined,
                                                                          "inline": false,
                                                                          "inset": undefined,
                                                                          "tag": "div",
                                                                          "vertical": undefined,
                                                                        },
                                                                        "displayName": "Box",
                                                                        "propTypes": Object {
                                                                          "below": [Function],
                                                                          "between": [Function],
                                                                          "children": [Function],
                                                                          "className": [Function],
                                                                          "horizontal": [Function],
                                                                          "inline": [Function],
                                                                          "inset": [Function],
                                                                          "tag": [Function],
                                                                          "vertical": [Function],
                                                                        },
                                                                        "render": [Function],
                                                                      },
                                                                      "toString": [Function],
                                                                      "warnTooManyClasses": [Function],
                                                                      "withComponent": [Function],
                                                                    }
                                                                  }
                                                                  type="indexed"
                                                                >
                                                                  <Styled(Box)
                                                                    below={4}
                                                                    between={3}
                                                                    inline={false}
                                                                    size="small"
                                                                    tag="ol"
                                                                    type="indexed"
                                                                  >
                                                                    <StyledComponent
                                                                      below={4}
                                                                      between={3}
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "sc-ifAKCX",
                                                                            "isStatic": false,
                                                                            "lastClassName": "c16",
                                                                            "rules": Array [
                                                                              "word-wrap: break-word;",
                                                                              "font-weight: 700;",
                                                                              "font-size: 0.875rem;",
                                                                              "letter-spacing: -0.6px;",
                                                                              "line-height: 1.42857;",
                                                                              "padding-left: 2rem;",
                                                                              "@media (min-width: 768px) {",
                                                                              "padding-left: 1rem;",
                                                                              "}",
                                                                              [Function],
                                                                            ],
                                                                          },
                                                                          "defaultProps": Object {
                                                                            "below": undefined,
                                                                            "between": undefined,
                                                                            "className": undefined,
                                                                            "horizontal": undefined,
                                                                            "inline": false,
                                                                            "inset": undefined,
                                                                            "tag": "div",
                                                                            "vertical": undefined,
                                                                          },
                                                                          "displayName": "Styled(Box)",
                                                                          "foldedComponentIds": Array [],
                                                                          "propTypes": Object {
                                                                            "below": [Function],
                                                                            "between": [Function],
                                                                            "children": [Function],
                                                                            "className": [Function],
                                                                            "horizontal": [Function],
                                                                            "inline": [Function],
                                                                            "inset": [Function],
                                                                            "tag": [Function],
                                                                            "vertical": [Function],
                                                                          },
                                                                          "render": [Function],
                                                                          "styledComponentId": "sc-ifAKCX",
                                                                          "target": Object {
                                                                            "$$typeof": Symbol(react.forward_ref),
                                                                            "defaultProps": Object {
                                                                              "below": undefined,
                                                                              "between": undefined,
                                                                              "className": undefined,
                                                                              "horizontal": undefined,
                                                                              "inline": false,
                                                                              "inset": undefined,
                                                                              "tag": "div",
                                                                              "vertical": undefined,
                                                                            },
                                                                            "displayName": "Box",
                                                                            "propTypes": Object {
                                                                              "below": [Function],
                                                                              "between": [Function],
                                                                              "children": [Function],
                                                                              "className": [Function],
                                                                              "horizontal": [Function],
                                                                              "inline": [Function],
                                                                              "inset": [Function],
                                                                              "tag": [Function],
                                                                              "vertical": [Function],
                                                                            },
                                                                            "render": [Function],
                                                                          },
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={null}
                                                                      inline={false}
                                                                      size="small"
                                                                      tag="ol"
                                                                      type="indexed"
                                                                    >
                                                                      <Box
                                                                        below={4}
                                                                        between={3}
                                                                        className="c16"
                                                                        inline={false}
                                                                        size="small"
                                                                        tag="ol"
                                                                        type="indexed"
                                                                      >
                                                                        <styled.div
                                                                          below={4}
                                                                          between={3}
                                                                          className="c16"
                                                                          inline={false}
                                                                          size="small"
                                                                          tag="ol"
                                                                          type="indexed"
                                                                        >
                                                                          <StyledComponent
                                                                            below={4}
                                                                            between={3}
                                                                            className="c16"
                                                                            forwardedComponent={
                                                                              Object {
                                                                                "$$typeof": Symbol(react.forward_ref),
                                                                                "attrs": Array [
                                                                                  [Function],
                                                                                ],
                                                                                "componentStyle": ComponentStyle {
                                                                                  "componentId": "sc-bxivhb",
                                                                                  "isStatic": false,
                                                                                  "lastClassName": "c17",
                                                                                  "rules": Array [
                                                                                    [Function],
                                                                                    [Function],
                                                                                    [Function],
                                                                                    [Function],
                                                                                    [Function],
                                                                                  ],
                                                                                },
                                                                                "displayName": "styled.div",
                                                                                "foldedComponentIds": Array [],
                                                                                "render": [Function],
                                                                                "styledComponentId": "sc-bxivhb",
                                                                                "target": "div",
                                                                                "toString": [Function],
                                                                                "warnTooManyClasses": [Function],
                                                                                "withComponent": [Function],
                                                                              }
                                                                            }
                                                                            forwardedRef={null}
                                                                            inline={false}
                                                                            size="small"
                                                                            tag="ol"
                                                                            type="indexed"
                                                                          >
                                                                            <ol
                                                                              className="c16 sc-ifAKCX c16 c17"
                                                                              size="small"
                                                                              type="indexed"
                                                                            >
                                                                              <Item
                                                                                key=".$One"
                                                                                styledComponent={
                                                                                  Object {
                                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                                    "attrs": Array [],
                                                                                    "componentStyle": ComponentStyle {
                                                                                      "componentId": "List__StyledListItem-ju21tg-0",
                                                                                      "isStatic": true,
                                                                                      "lastClassName": "c18",
                                                                                      "rules": Array [
                                                                                        "& > span {",
                                                                                        "font-weight: 500;",
                                                                                        "}",
                                                                                        "padding-left: 1rem;",
                                                                                      ],
                                                                                    },
                                                                                    "displayName": "List__StyledListItem",
                                                                                    "foldedComponentIds": Array [],
                                                                                    "render": [Function],
                                                                                    "styledComponentId": "List__StyledListItem-ju21tg-0",
                                                                                    "target": "li",
                                                                                    "toString": [Function],
                                                                                    "warnTooManyClasses": [Function],
                                                                                    "withComponent": [Function],
                                                                                  }
                                                                                }
                                                                              >
                                                                                <List__StyledListItem>
                                                                                  <StyledComponent
                                                                                    forwardedComponent={
                                                                                      Object {
                                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                                        "attrs": Array [],
                                                                                        "componentStyle": ComponentStyle {
                                                                                          "componentId": "List__StyledListItem-ju21tg-0",
                                                                                          "isStatic": true,
                                                                                          "lastClassName": "c18",
                                                                                          "rules": Array [
                                                                                            "& > span {",
                                                                                            "font-weight: 500;",
                                                                                            "}",
                                                                                            "padding-left: 1rem;",
                                                                                          ],
                                                                                        },
                                                                                        "displayName": "List__StyledListItem",
                                                                                        "foldedComponentIds": Array [],
                                                                                        "render": [Function],
                                                                                        "styledComponentId": "List__StyledListItem-ju21tg-0",
                                                                                        "target": "li",
                                                                                        "toString": [Function],
                                                                                        "warnTooManyClasses": [Function],
                                                                                        "withComponent": [Function],
                                                                                      }
                                                                                    }
                                                                                    forwardedRef={null}
                                                                                  >
                                                                                    <li
                                                                                      className="c18"
                                                                                    >
                                                                                      One
                                                                                    </li>
                                                                                  </StyledComponent>
                                                                                </List__StyledListItem>
                                                                              </Item>
                                                                              <Item
                                                                                key=".$Two"
                                                                                styledComponent={
                                                                                  Object {
                                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                                    "attrs": Array [],
                                                                                    "componentStyle": ComponentStyle {
                                                                                      "componentId": "List__StyledListItem-ju21tg-0",
                                                                                      "isStatic": true,
                                                                                      "lastClassName": "c18",
                                                                                      "rules": Array [
                                                                                        "& > span {",
                                                                                        "font-weight: 500;",
                                                                                        "}",
                                                                                        "padding-left: 1rem;",
                                                                                      ],
                                                                                    },
                                                                                    "displayName": "List__StyledListItem",
                                                                                    "foldedComponentIds": Array [],
                                                                                    "render": [Function],
                                                                                    "styledComponentId": "List__StyledListItem-ju21tg-0",
                                                                                    "target": "li",
                                                                                    "toString": [Function],
                                                                                    "warnTooManyClasses": [Function],
                                                                                    "withComponent": [Function],
                                                                                  }
                                                                                }
                                                                              >
                                                                                <List__StyledListItem>
                                                                                  <StyledComponent
                                                                                    forwardedComponent={
                                                                                      Object {
                                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                                        "attrs": Array [],
                                                                                        "componentStyle": ComponentStyle {
                                                                                          "componentId": "List__StyledListItem-ju21tg-0",
                                                                                          "isStatic": true,
                                                                                          "lastClassName": "c18",
                                                                                          "rules": Array [
                                                                                            "& > span {",
                                                                                            "font-weight: 500;",
                                                                                            "}",
                                                                                            "padding-left: 1rem;",
                                                                                          ],
                                                                                        },
                                                                                        "displayName": "List__StyledListItem",
                                                                                        "foldedComponentIds": Array [],
                                                                                        "render": [Function],
                                                                                        "styledComponentId": "List__StyledListItem-ju21tg-0",
                                                                                        "target": "li",
                                                                                        "toString": [Function],
                                                                                        "warnTooManyClasses": [Function],
                                                                                        "withComponent": [Function],
                                                                                      }
                                                                                    }
                                                                                    forwardedRef={null}
                                                                                  >
                                                                                    <li
                                                                                      className="c18"
                                                                                    >
                                                                                      Two
                                                                                    </li>
                                                                                  </StyledComponent>
                                                                                </List__StyledListItem>
                                                                              </Item>
                                                                              <Item
                                                                                key=".$Three"
                                                                                styledComponent={
                                                                                  Object {
                                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                                    "attrs": Array [],
                                                                                    "componentStyle": ComponentStyle {
                                                                                      "componentId": "List__StyledListItem-ju21tg-0",
                                                                                      "isStatic": true,
                                                                                      "lastClassName": "c18",
                                                                                      "rules": Array [
                                                                                        "& > span {",
                                                                                        "font-weight: 500;",
                                                                                        "}",
                                                                                        "padding-left: 1rem;",
                                                                                      ],
                                                                                    },
                                                                                    "displayName": "List__StyledListItem",
                                                                                    "foldedComponentIds": Array [],
                                                                                    "render": [Function],
                                                                                    "styledComponentId": "List__StyledListItem-ju21tg-0",
                                                                                    "target": "li",
                                                                                    "toString": [Function],
                                                                                    "warnTooManyClasses": [Function],
                                                                                    "withComponent": [Function],
                                                                                  }
                                                                                }
                                                                              >
                                                                                <List__StyledListItem>
                                                                                  <StyledComponent
                                                                                    forwardedComponent={
                                                                                      Object {
                                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                                        "attrs": Array [],
                                                                                        "componentStyle": ComponentStyle {
                                                                                          "componentId": "List__StyledListItem-ju21tg-0",
                                                                                          "isStatic": true,
                                                                                          "lastClassName": "c18",
                                                                                          "rules": Array [
                                                                                            "& > span {",
                                                                                            "font-weight: 500;",
                                                                                            "}",
                                                                                            "padding-left: 1rem;",
                                                                                          ],
                                                                                        },
                                                                                        "displayName": "List__StyledListItem",
                                                                                        "foldedComponentIds": Array [],
                                                                                        "render": [Function],
                                                                                        "styledComponentId": "List__StyledListItem-ju21tg-0",
                                                                                        "target": "li",
                                                                                        "toString": [Function],
                                                                                        "warnTooManyClasses": [Function],
                                                                                        "withComponent": [Function],
                                                                                      }
                                                                                    }
                                                                                    forwardedRef={null}
                                                                                  >
                                                                                    <li
                                                                                      className="c18"
                                                                                    >
                                                                                      Three
                                                                                    </li>
                                                                                  </StyledComponent>
                                                                                </List__StyledListItem>
                                                                              </Item>
                                                                            </ol>
                                                                          </StyledComponent>
                                                                        </styled.div>
                                                                      </Box>
                                                                    </StyledComponent>
                                                                  </Styled(Box)>
                                                                </List>
                                                              </div>
                                                            </Col>
                                                          </Component>
                                                        </StyledComponent>
                                                      </Styled(Component)>
                                                    </Col>
                                                  </div>
                                                </Row>
                                              </Component>
                                            </StyledComponent>
                                          </Styled(Component)>
                                        </Row>
                                      </div>
                                    </Grid>
                                  </Component>
                                </StyledComponent>
                              </Styled(Component)>
                            </FlexGrid>
                          </div>
                        </StyledComponent>
                      </Translate__StyledContainer>
                    </Transition>
                  </Translate>
                </div>
              </div>
            </StyledComponent>
          </FadeAndReveal__StyledContainer>
        </Transition>
      </CSSTransition>
    </FadeAndReveal>
    <HairlineDivider
      gradient={false}
      vertical={false}
    >
      <HairlineDivider__StyledHairlineDivider
        gradient={false}
        vertical={false}
      >
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "HairlineDivider__StyledHairlineDivider-biamlk-0",
                "isStatic": false,
                "lastClassName": "c0",
                "rules": Array [
                  "padding: 0;",
                  "margin: 0;",
                  "border-width: 0;",
                  [Function],
                ],
              },
              "displayName": "HairlineDivider__StyledHairlineDivider",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "HairlineDivider__StyledHairlineDivider-biamlk-0",
              "target": "hr",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          gradient={false}
          vertical={false}
        >
          <hr
            className="c0"
          />
        </StyledComponent>
      </HairlineDivider__StyledHairlineDivider>
    </HairlineDivider>
  </div>
</TermsAndConditions>
`;

exports[`TermsAndConditions renders expanded with indexedContent and nonIndexedContent 1`] = `
.c0 {
  padding: 0;
  margin: 0;
  border-width: 0;
  -webkit-transform: rotate(-0.00001deg);
  -ms-transform: rotate(-0.00001deg);
  transform: rotate(-0.00001deg);
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: 100%;
  height: 1px;
  background-color: #d8d8d8;
}

.c12 {
  padding: 0;
  margin: 0;
  border-width: 0;
  height: 32px;
  background-image: radial-gradient(ellipse at top,rgba(150,150,150,0.1) 0%,rgba(0,0,0,0) 70%);
}

div.c3 {
  padding-left: 0;
  padding-right: 0;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

div.c15 {
  padding-left: 1rem;
  padding-right: 1rem;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c2 {
  width: 100%;
}

div.c2 {
  margin: 0 auto;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin: 0 auto;
  width: 100%;
}

div.c1 {
  padding: 0;
}

.c14 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin: 0 auto;
  width: 100%;
}

div.c14 {
  padding: 0;
}

.c10 {
  word-wrap: break-word;
  color: #2a2c2e;
  font-weight: 700;
  font-size: 1rem;
  line-height: 1.25;
  -webkit-letter-spacing: -0.6px;
  -moz-letter-spacing: -0.6px;
  -ms-letter-spacing: -0.6px;
  letter-spacing: -0.6px;
}

.c10 sup {
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
  font-size: 0.875rem;
  top: -0.5em;
}

.c10 > span {
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.c7 > *:not(:last-child) {
  margin-right: 1rem;
}

.c17 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-bottom: 1.5rem;
}

.c17 > *:not(:last-child) {
  margin-bottom: 1rem;
}

.c19 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c19 > *:not(:last-child) {
  margin-bottom: 1rem;
}

.c4:hover .c22 {
  -webkit-transform: translate(6px,2px);
  -ms-transform: translate(6px,2px);
  transform: translate(6px,2px);
}

.c9 {
  line-height: 24px;
  position: absolute;
  top: 0;
  left: 0;
  -webkit-transition: -webkit-transform 300ms;
  -webkit-transition: transform 300ms;
  transition: transform 300ms;
  -webkit-transform: translate(6px,-2px);
  -ms-transform: translate(6px,-2px);
  transform: translate(6px,-2px);
}

.c4:hover .c9 {
  -webkit-transform: translate(6px,-5px);
  -ms-transform: translate(6px,-5px);
  transform: translate(6px,-5px);
}

.c18 {
  padding-left: 1rem;
}

.c18 > span {
  font-weight: 500;
}

.c16 {
  word-wrap: break-word;
  font-weight: 700;
  font-size: 0.875rem;
  -webkit-letter-spacing: -0.6px;
  -moz-letter-spacing: -0.6px;
  -ms-letter-spacing: -0.6px;
  letter-spacing: -0.6px;
  line-height: 1.42857;
  padding-left: 2rem;
  list-style: decimal;
}

.c21 {
  word-wrap: break-word;
  font-weight: 700;
  font-size: 0.875rem;
  -webkit-letter-spacing: -0.6px;
  -moz-letter-spacing: -0.6px;
  -ms-letter-spacing: -0.6px;
  letter-spacing: -0.6px;
  line-height: 1.42857;
  padding-left: 2rem;
  list-style: none;
}

.c5 {
  padding: 0;
  margin: 0;
  border-width: 0;
  font-family: "TELUS-Web","Helvetica Neue",Helvetica,Arial,sans-serif;
  color: #2a2c2e;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: none;
  box-shadow: none;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  background-color: #fff;
}

.c6 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c8 {
  position: relative;
  width: 24px;
  height: 24px;
}

.c20 {
  padding-left: 2rem;
}

@media (max-width:575px) {
  .c3 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:576px) {
  .c3 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:768px) {
  .c3 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:992px) {
  .c3 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:1200px) {
  .c3 {
    display: block;
    text-align: inherit;
  }
}

@media (max-width:575px) {
  .c15 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:576px) {
  .c15 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:768px) {
  .c15 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:992px) {
  .c15 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:1200px) {
  .c15 {
    display: block;
    text-align: inherit;
  }
}

@media (max-width:575px) {
  div.c2 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:576px) {
  div.c2 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:768px) {
  div.c2 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:992px) {
  div.c2 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:1200px) {
  div.c2 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (max-width:575px) {
  .c1 {
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:576px) {
  .c1 {
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:768px) {
  .c1 {
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:992px) {
  .c1 {
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:1200px) {
  .c1 {
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (max-width:575px) {
  .c14 {
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:576px) {
  .c14 {
    max-width: 36rem;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:768px) {
  .c14 {
    max-width: 48rem;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:992px) {
  .c14 {
    max-width: 62rem;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:1200px) {
  .c14 {
    max-width: 75rem;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (prefers-reduced-motion:reduce) {
  .c13 {
    -webkit-transition: none !important;
    transition: none !important;
  }
}

@media (prefers-reduced-motion:reduce) {
  .c11 {
    -webkit-transition: none !important;
    transition: none !important;
  }
}

@media (prefers-reduced-motion:reduce) {
  .c9 {
    -webkit-transition: none;
    transition: none;
  }
}

@media (min-width:768px) {
  .c16 {
    padding-left: 1rem;
  }
}

@media (min-width:768px) {
  .c21 {
    padding-left: 1rem;
  }
}

<TermsAndConditions
  copy="en"
  indexedContent={
    Array [
      "One",
      "Two",
      "Three",
    ]
  }
  nonIndexedContent={
    Array [
      "Four",
      "Five",
    ]
  }
>
  <div>
    <HairlineDivider
      gradient={false}
      vertical={false}
    >
      <HairlineDivider__StyledHairlineDivider
        gradient={false}
        vertical={false}
      >
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "HairlineDivider__StyledHairlineDivider-biamlk-0",
                "isStatic": false,
                "lastClassName": "c0",
                "rules": Array [
                  "padding: 0;",
                  "margin: 0;",
                  "border-width: 0;",
                  [Function],
                ],
              },
              "displayName": "HairlineDivider__StyledHairlineDivider",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "HairlineDivider__StyledHairlineDivider-biamlk-0",
              "target": "hr",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          gradient={false}
          vertical={false}
        >
          <hr
            className="c0"
          />
        </StyledComponent>
      </HairlineDivider__StyledHairlineDivider>
    </HairlineDivider>
    <FlexGrid
      gutter={false}
      limitWidth={false}
    >
      <Styled(Component)
        fluid={true}
        limitWidth={false}
        reverseLevel={
          Array [
            false,
            false,
            false,
            false,
            false,
          ]
        }
      >
        <StyledComponent
          fluid={true}
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-htpNat",
                "isStatic": false,
                "lastClassName": "c14",
                "rules": Array [
                  [Function],
                ],
              },
              "displayName": "Styled(Component)",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-htpNat",
              "target": [Function],
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          limitWidth={false}
          reverseLevel={
            Array [
              false,
              false,
              false,
              false,
              false,
            ]
          }
        >
          <Component
            className="c1"
            fluid={true}
            limitWidth={false}
            reverseLevel={
              Array [
                false,
                false,
                false,
                false,
                false,
              ]
            }
          >
            <Grid
              className="c1"
              fluid={true}
            >
              <div
                className="c1 container-fluid"
              >
                <Row>
                  <Styled(Component)
                    reverseLevel={
                      Array [
                        false,
                        false,
                        false,
                        false,
                        false,
                      ]
                    }
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-bwzfXH",
                            "isStatic": false,
                            "lastClassName": "c2",
                            "rules": Array [
                              [Function],
                            ],
                          },
                          "displayName": "Styled(Component)",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-bwzfXH",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      reverseLevel={
                        Array [
                          false,
                          false,
                          false,
                          false,
                          false,
                        ]
                      }
                    >
                      <Component
                        className="c2"
                        reverseLevel={
                          Array [
                            false,
                            false,
                            false,
                            false,
                            false,
                          ]
                        }
                      >
                        <Row
                          className="c2"
                        >
                          <div
                            className="c2 row"
                          >
                            <Col>
                              <Styled(Component)
                                gutter={false}
                                hiddenLevel={
                                  Array [
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                  ]
                                }
                                horizontalAlignLevel={
                                  Array [
                                    "inherit",
                                    "inherit",
                                    "inherit",
                                    "inherit",
                                    "inherit",
                                  ]
                                }
                                xs={true}
                              >
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-bdVaJa",
                                        "isStatic": false,
                                        "lastClassName": "c15",
                                        "rules": Array [
                                          [Function],
                                        ],
                                      },
                                      "displayName": "Styled(Component)",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-bdVaJa",
                                      "target": [Function],
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  gutter={false}
                                  hiddenLevel={
                                    Array [
                                      false,
                                      false,
                                      false,
                                      false,
                                      false,
                                    ]
                                  }
                                  horizontalAlignLevel={
                                    Array [
                                      "inherit",
                                      "inherit",
                                      "inherit",
                                      "inherit",
                                      "inherit",
                                    ]
                                  }
                                  xs={true}
                                >
                                  <Component
                                    className="c3"
                                    gutter={false}
                                    hiddenLevel={
                                      Array [
                                        false,
                                        false,
                                        false,
                                        false,
                                        false,
                                      ]
                                    }
                                    horizontalAlignLevel={
                                      Array [
                                        "inherit",
                                        "inherit",
                                        "inherit",
                                        "inherit",
                                        "inherit",
                                      ]
                                    }
                                    xs={true}
                                  >
                                    <Col
                                      className="c3"
                                      xs={true}
                                    >
                                      <div
                                        className="col-xs c3"
                                      >
                                        <Styled(StyledClickable)
                                          aria-expanded={true}
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          <StyledComponent
                                            aria-expanded={true}
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-EHOje",
                                                  "isStatic": true,
                                                  "lastClassName": "c5",
                                                  "rules": Array [
                                                    "padding: 0;",
                                                    "margin: 0;",
                                                    "border-width: 0;",
                                                    "font-family: \\"TELUS-Web\\", \\"Helvetica Neue\\", Helvetica, Arial, sans-serif;",
                                                    "color: #2a2c2e;",
                                                    "appearance: none;",
                                                    "background: none;",
                                                    "box-shadow: none;",
                                                    "cursor: pointer;",
                                                    "display: flex;",
                                                    "width: 100%;",
                                                    "justify-content: center;",
                                                    "background-color: #fff;",
                                                  ],
                                                },
                                                "displayName": "Styled(StyledClickable)",
                                                "foldedComponentIds": Array [
                                                  "c4",
                                                ],
                                                "render": [Function],
                                                "styledComponentId": "sc-EHOje",
                                                "target": "button",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            <button
                                              aria-expanded={true}
                                              className="c4 c5"
                                              onClick={[Function]}
                                              type="button"
                                            >
                                              <Styled(Box)
                                                between={3}
                                                inline={true}
                                                tag="div"
                                                vertical={3}
                                              >
                                                <StyledComponent
                                                  between={3}
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-bZQynM",
                                                        "isStatic": true,
                                                        "lastClassName": "c6",
                                                        "rules": Array [
                                                          "align-items: center;",
                                                        ],
                                                      },
                                                      "defaultProps": Object {
                                                        "below": undefined,
                                                        "between": undefined,
                                                        "className": undefined,
                                                        "horizontal": undefined,
                                                        "inline": false,
                                                        "inset": undefined,
                                                        "tag": "div",
                                                        "vertical": undefined,
                                                      },
                                                      "displayName": "Styled(Box)",
                                                      "foldedComponentIds": Array [],
                                                      "propTypes": Object {
                                                        "below": [Function],
                                                        "between": [Function],
                                                        "children": [Function],
                                                        "className": [Function],
                                                        "horizontal": [Function],
                                                        "inline": [Function],
                                                        "inset": [Function],
                                                        "tag": [Function],
                                                        "vertical": [Function],
                                                      },
                                                      "render": [Function],
                                                      "styledComponentId": "sc-bZQynM",
                                                      "target": Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "defaultProps": Object {
                                                          "below": undefined,
                                                          "between": undefined,
                                                          "className": undefined,
                                                          "horizontal": undefined,
                                                          "inline": false,
                                                          "inset": undefined,
                                                          "tag": "div",
                                                          "vertical": undefined,
                                                        },
                                                        "displayName": "Box",
                                                        "propTypes": Object {
                                                          "below": [Function],
                                                          "between": [Function],
                                                          "children": [Function],
                                                          "className": [Function],
                                                          "horizontal": [Function],
                                                          "inline": [Function],
                                                          "inset": [Function],
                                                          "tag": [Function],
                                                          "vertical": [Function],
                                                        },
                                                        "render": [Function],
                                                      },
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                  inline={true}
                                                  tag="div"
                                                  vertical={3}
                                                >
                                                  <Box
                                                    between={3}
                                                    className="c6"
                                                    inline={true}
                                                    tag="div"
                                                    vertical={3}
                                                  >
                                                    <styled.div
                                                      between={3}
                                                      className="c6"
                                                      inline={true}
                                                      tag="div"
                                                      vertical={3}
                                                    >
                                                      <StyledComponent
                                                        between={3}
                                                        className="c6"
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [
                                                              [Function],
                                                            ],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "sc-bxivhb",
                                                              "isStatic": false,
                                                              "lastClassName": "c17",
                                                              "rules": Array [
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                              ],
                                                            },
                                                            "displayName": "styled.div",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "sc-bxivhb",
                                                            "target": "div",
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                        inline={true}
                                                        tag="div"
                                                        vertical={3}
                                                      >
                                                        <div
                                                          className="c6 sc-bZQynM c6 c7"
                                                        >
                                                          <TermsAndConditions__StyledChevronContainer>
                                                            <StyledComponent
                                                              forwardedComponent={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "attrs": Array [],
                                                                  "componentStyle": ComponentStyle {
                                                                    "componentId": "TermsAndConditions__StyledChevronContainer-sc-1aoonet-0",
                                                                    "isStatic": true,
                                                                    "lastClassName": "c8",
                                                                    "rules": Array [
                                                                      "position: relative;",
                                                                      "width: 24px;",
                                                                      "height: 24px;",
                                                                    ],
                                                                  },
                                                                  "displayName": "TermsAndConditions__StyledChevronContainer",
                                                                  "foldedComponentIds": Array [],
                                                                  "render": [Function],
                                                                  "styledComponentId": "TermsAndConditions__StyledChevronContainer-sc-1aoonet-0",
                                                                  "target": "span",
                                                                  "toString": [Function],
                                                                  "warnTooManyClasses": [Function],
                                                                  "withComponent": [Function],
                                                                }
                                                              }
                                                              forwardedRef={null}
                                                            >
                                                              <span
                                                                className="c8"
                                                              >
                                                                <Circle>
                                                                  <svg
                                                                    height="24px"
                                                                    viewBox="0 0 24 24"
                                                                    width="24px"
                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                    xmlnsXlink="http://www.w3.org/1999/xlink"
                                                                  >
                                                                    <path
                                                                      d="M12,0 C5.373,0 0,5.373 0,12 C0,18.627 5.373,24 12,24 C18.627,24 24,18.627 24,12 C24,5.373 18.627,0 12,0 M12,1 C18.065,1 23,5.935 23,12 C23,18.065 18.065,23 12,23 C5.935,23 1,18.065 1,12 C1,5.935 5.935,1 12,1"
                                                                      fill="#4b286d"
                                                                    />
                                                                  </svg>
                                                                </Circle>
                                                                <Chevron
                                                                  isOpen={true}
                                                                >
                                                                  <Chevron__StyledChevron
                                                                    isOpen={true}
                                                                  >
                                                                    <StyledComponent
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "Chevron__StyledChevron-sc-17gl4qs-0",
                                                                            "isStatic": false,
                                                                            "lastClassName": "c9",
                                                                            "rules": Array [
                                                                              [Function],
                                                                            ],
                                                                          },
                                                                          "displayName": "Chevron__StyledChevron",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "Chevron__StyledChevron-sc-17gl4qs-0",
                                                                          "target": "span",
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={null}
                                                                      isOpen={true}
                                                                    >
                                                                      <span
                                                                        className="c9"
                                                                      >
                                                                        <svg
                                                                          height="8px"
                                                                          viewBox="0 0 12 8"
                                                                          width="12px"
                                                                          xmlns="http://www.w3.org/2000/svg"
                                                                          xmlnsXlink="http://www.w3.org/1999/xlink"
                                                                        >
                                                                          <path
                                                                            d="M11.7940812,0.183230226 C11.4424627,-0.117489399 11.0896181,0.0450442657 10.8868854,0.245275736 L5.99681615,4.74055299 L1.11722187,0.245275732 C0.93839231,0.0814520871 0.490533284,-0.180032793 0.165240429,0.183230232 C-0.160052425,0.546493257 0.0652096387,0.91610528 0.243271687,1.07992892 L5.6348225,6.87660266 C5.81365205,7.04113245 6.10607292,7.04113245 6.28490248,6.87660266 C6.28490248,6.87589653 11.7940809,1.07992896 11.7940809,1.07992896 C11.9792355,0.935042671 12.1456996,0.483949851 11.7940812,0.183230226 Z"
                                                                            transform="rotate(180, 6, 4)"
                                                                          />
                                                                        </svg>
                                                                      </span>
                                                                    </StyledComponent>
                                                                  </Chevron__StyledChevron>
                                                                </Chevron>
                                                              </span>
                                                            </StyledComponent>
                                                          </TermsAndConditions__StyledChevronContainer>
                                                          <Heading
                                                            invert={false}
                                                            level="h4"
                                                            tag="h2"
                                                          >
                                                            <Heading__StyledHeading
                                                              as="h2"
                                                              data-testid="heading"
                                                              invert={false}
                                                              level="h4"
                                                            >
                                                              <StyledComponent
                                                                as="h2"
                                                                data-testid="heading"
                                                                forwardedComponent={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "attrs": Array [],
                                                                    "componentStyle": ComponentStyle {
                                                                      "componentId": "Heading__StyledHeading-mpz92r-0",
                                                                      "isStatic": false,
                                                                      "lastClassName": "c10",
                                                                      "rules": Array [
                                                                        "word-wrap: break-word;",
                                                                        [Function],
                                                                      ],
                                                                    },
                                                                    "displayName": "Heading__StyledHeading",
                                                                    "foldedComponentIds": Array [],
                                                                    "render": [Function],
                                                                    "styledComponentId": "Heading__StyledHeading-mpz92r-0",
                                                                    "target": "h1",
                                                                    "toString": [Function],
                                                                    "warnTooManyClasses": [Function],
                                                                    "withComponent": [Function],
                                                                  }
                                                                }
                                                                forwardedRef={null}
                                                                invert={false}
                                                                level="h4"
                                                              >
                                                                <h2
                                                                  className="c10"
                                                                  data-testid="heading"
                                                                >
                                                                  Hide terms and conditions
                                                                </h2>
                                                              </StyledComponent>
                                                            </Heading__StyledHeading>
                                                          </Heading>
                                                        </div>
                                                      </StyledComponent>
                                                    </styled.div>
                                                  </Box>
                                                </StyledComponent>
                                              </Styled(Box)>
                                            </button>
                                          </StyledComponent>
                                        </Styled(StyledClickable)>
                                      </div>
                                    </Col>
                                  </Component>
                                </StyledComponent>
                              </Styled(Component)>
                            </Col>
                          </div>
                        </Row>
                      </Component>
                    </StyledComponent>
                  </Styled(Component)>
                </Row>
              </div>
            </Grid>
          </Component>
        </StyledComponent>
      </Styled(Component)>
    </FlexGrid>
    <FadeAndReveal
      height={0}
      in={true}
      timeout={150}
    >
      <CSSTransition
        classNames=""
        in={true}
        timeout={
          Object {
            "appear": 150,
            "enter": 150,
            "exit": 0,
          }
        }
      >
        <Transition
          appear={false}
          enter={true}
          exit={true}
          in={true}
          mountOnEnter={false}
          onEnter={[Function]}
          onEntered={[Function]}
          onEntering={[Function]}
          onExit={[Function]}
          onExited={[Function]}
          onExiting={[Function]}
          timeout={
            Object {
              "appear": 150,
              "enter": 150,
              "exit": 0,
            }
          }
          unmountOnExit={false}
        >
          <FadeAndReveal__StyledContainer
            aria-hidden={false}
            style={
              Object {
                "height": 0,
                "opacity": 1,
                "overflow": "hidden",
                "transition": "height 150ms ease-in-out, opacity 150ms ease-in-out",
              }
            }
          >
            <StyledComponent
              aria-hidden={false}
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "FadeAndReveal__StyledContainer-sc-1drkfnv-0",
                    "isStatic": true,
                    "lastClassName": "c11",
                    "rules": Array [
                      "@media (prefers-reduced-motion: reduce) {",
                      "transition: none !important;",
                      "}",
                    ],
                  },
                  "displayName": "FadeAndReveal__StyledContainer",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "FadeAndReveal__StyledContainer-sc-1drkfnv-0",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              style={
                Object {
                  "height": 0,
                  "opacity": 1,
                  "overflow": "hidden",
                  "transition": "height 150ms ease-in-out, opacity 150ms ease-in-out",
                }
              }
            >
              <div
                aria-hidden={false}
                className="c11"
                style={
                  Object {
                    "height": 0,
                    "opacity": 1,
                    "overflow": "hidden",
                    "transition": "height 150ms ease-in-out, opacity 150ms ease-in-out",
                  }
                }
              >
                <div>
                  <FlexGrid
                    gutter={false}
                    limitWidth={false}
                  >
                    <Styled(Component)
                      fluid={true}
                      limitWidth={false}
                      reverseLevel={
                        Array [
                          false,
                          false,
                          false,
                          false,
                          false,
                        ]
                      }
                    >
                      <StyledComponent
                        fluid={true}
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-htpNat",
                              "isStatic": false,
                              "lastClassName": "c14",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "Styled(Component)",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-htpNat",
                            "target": [Function],
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        limitWidth={false}
                        reverseLevel={
                          Array [
                            false,
                            false,
                            false,
                            false,
                            false,
                          ]
                        }
                      >
                        <Component
                          className="c1"
                          fluid={true}
                          limitWidth={false}
                          reverseLevel={
                            Array [
                              false,
                              false,
                              false,
                              false,
                              false,
                            ]
                          }
                        >
                          <Grid
                            className="c1"
                            fluid={true}
                          >
                            <div
                              className="c1 container-fluid"
                            >
                              <Row>
                                <Styled(Component)
                                  reverseLevel={
                                    Array [
                                      false,
                                      false,
                                      false,
                                      false,
                                      false,
                                    ]
                                  }
                                >
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-bwzfXH",
                                          "isStatic": false,
                                          "lastClassName": "c2",
                                          "rules": Array [
                                            [Function],
                                          ],
                                        },
                                        "displayName": "Styled(Component)",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "sc-bwzfXH",
                                        "target": [Function],
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    reverseLevel={
                                      Array [
                                        false,
                                        false,
                                        false,
                                        false,
                                        false,
                                      ]
                                    }
                                  >
                                    <Component
                                      className="c2"
                                      reverseLevel={
                                        Array [
                                          false,
                                          false,
                                          false,
                                          false,
                                          false,
                                        ]
                                      }
                                    >
                                      <Row
                                        className="c2"
                                      >
                                        <div
                                          className="c2 row"
                                        >
                                          <Col>
                                            <Styled(Component)
                                              gutter={false}
                                              hiddenLevel={
                                                Array [
                                                  false,
                                                  false,
                                                  false,
                                                  false,
                                                  false,
                                                ]
                                              }
                                              horizontalAlignLevel={
                                                Array [
                                                  "inherit",
                                                  "inherit",
                                                  "inherit",
                                                  "inherit",
                                                  "inherit",
                                                ]
                                              }
                                              xs={true}
                                            >
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "sc-bdVaJa",
                                                      "isStatic": false,
                                                      "lastClassName": "c15",
                                                      "rules": Array [
                                                        [Function],
                                                      ],
                                                    },
                                                    "displayName": "Styled(Component)",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "sc-bdVaJa",
                                                    "target": [Function],
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                                gutter={false}
                                                hiddenLevel={
                                                  Array [
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                  ]
                                                }
                                                horizontalAlignLevel={
                                                  Array [
                                                    "inherit",
                                                    "inherit",
                                                    "inherit",
                                                    "inherit",
                                                    "inherit",
                                                  ]
                                                }
                                                xs={true}
                                              >
                                                <Component
                                                  className="c3"
                                                  gutter={false}
                                                  hiddenLevel={
                                                    Array [
                                                      false,
                                                      false,
                                                      false,
                                                      false,
                                                      false,
                                                    ]
                                                  }
                                                  horizontalAlignLevel={
                                                    Array [
                                                      "inherit",
                                                      "inherit",
                                                      "inherit",
                                                      "inherit",
                                                      "inherit",
                                                    ]
                                                  }
                                                  xs={true}
                                                >
                                                  <Col
                                                    className="c3"
                                                    xs={true}
                                                  >
                                                    <div
                                                      className="col-xs c3"
                                                    >
                                                      <DimpleDivider>
                                                        <DimpleDivider__StyledDimpleDivider>
                                                          <StyledComponent
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "DimpleDivider__StyledDimpleDivider-quxnvh-0",
                                                                  "isStatic": true,
                                                                  "lastClassName": "c12",
                                                                  "rules": Array [
                                                                    "padding: 0;",
                                                                    "margin: 0;",
                                                                    "border-width: 0;",
                                                                    "height: 32px;",
                                                                    "background-image: radial-gradient(ellipse at top, rgba(150, 150, 150, 0.1) 0%, rgba(0, 0, 0, 0) 70%);",
                                                                  ],
                                                                },
                                                                "displayName": "DimpleDivider__StyledDimpleDivider",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "DimpleDivider__StyledDimpleDivider-quxnvh-0",
                                                                "target": "hr",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                          >
                                                            <hr
                                                              className="c12"
                                                            />
                                                          </StyledComponent>
                                                        </DimpleDivider__StyledDimpleDivider>
                                                      </DimpleDivider>
                                                    </div>
                                                  </Col>
                                                </Component>
                                              </StyledComponent>
                                            </Styled(Component)>
                                          </Col>
                                        </div>
                                      </Row>
                                    </Component>
                                  </StyledComponent>
                                </Styled(Component)>
                              </Row>
                            </div>
                          </Grid>
                        </Component>
                      </StyledComponent>
                    </Styled(Component)>
                  </FlexGrid>
                  <Translate
                    direction="y"
                    distance="0rem"
                    in={true}
                    initialStyle={
                      Object {
                        "transform": "translateY(1rem)",
                      }
                    }
                    timeout={150}
                  >
                    <Transition
                      appear={false}
                      enter={true}
                      exit={true}
                      in={true}
                      mountOnEnter={false}
                      onEnter={[Function]}
                      onEntered={[Function]}
                      onEntering={[Function]}
                      onExit={[Function]}
                      onExited={[Function]}
                      onExiting={[Function]}
                      timeout={150}
                      unmountOnExit={false}
                    >
                      <Translate__StyledContainer
                        style={
                          Object {
                            "transform": "translateY(0rem)",
                            "transition": "transform 150ms",
                          }
                        }
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Translate__StyledContainer-lgiaqm-0",
                                "isStatic": true,
                                "lastClassName": "c13",
                                "rules": Array [
                                  "@media (prefers-reduced-motion: reduce) {",
                                  "transition: none !important;",
                                  "}",
                                ],
                              },
                              "displayName": "Translate__StyledContainer",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "Translate__StyledContainer-lgiaqm-0",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          style={
                            Object {
                              "transform": "translateY(0rem)",
                              "transition": "transform 150ms",
                            }
                          }
                        >
                          <div
                            className="c13"
                            style={
                              Object {
                                "transform": "translateY(0rem)",
                                "transition": "transform 150ms",
                              }
                            }
                          >
                            <FlexGrid
                              gutter={true}
                              limitWidth={true}
                            >
                              <Styled(Component)
                                fluid={true}
                                limitWidth={true}
                                reverseLevel={
                                  Array [
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                  ]
                                }
                              >
                                <StyledComponent
                                  fluid={true}
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-htpNat",
                                        "isStatic": false,
                                        "lastClassName": "c14",
                                        "rules": Array [
                                          [Function],
                                        ],
                                      },
                                      "displayName": "Styled(Component)",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-htpNat",
                                      "target": [Function],
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  limitWidth={true}
                                  reverseLevel={
                                    Array [
                                      false,
                                      false,
                                      false,
                                      false,
                                      false,
                                    ]
                                  }
                                >
                                  <Component
                                    className="c14"
                                    fluid={true}
                                    limitWidth={true}
                                    reverseLevel={
                                      Array [
                                        false,
                                        false,
                                        false,
                                        false,
                                        false,
                                      ]
                                    }
                                  >
                                    <Grid
                                      className="c14"
                                      fluid={true}
                                    >
                                      <div
                                        className="c14 container-fluid"
                                      >
                                        <Row>
                                          <Styled(Component)
                                            reverseLevel={
                                              Array [
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                              ]
                                            }
                                          >
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-bwzfXH",
                                                    "isStatic": false,
                                                    "lastClassName": "c2",
                                                    "rules": Array [
                                                      [Function],
                                                    ],
                                                  },
                                                  "displayName": "Styled(Component)",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-bwzfXH",
                                                  "target": [Function],
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              reverseLevel={
                                                Array [
                                                  false,
                                                  false,
                                                  false,
                                                  false,
                                                  false,
                                                ]
                                              }
                                            >
                                              <Component
                                                className="c2"
                                                reverseLevel={
                                                  Array [
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                  ]
                                                }
                                              >
                                                <Row
                                                  className="c2"
                                                >
                                                  <div
                                                    className="c2 row"
                                                  >
                                                    <Col
                                                      md={10}
                                                      mdOffset={1}
                                                      xs={12}
                                                    >
                                                      <Styled(Component)
                                                        gutter={true}
                                                        hiddenLevel={
                                                          Array [
                                                            12,
                                                            12,
                                                            10,
                                                            10,
                                                            10,
                                                          ]
                                                        }
                                                        horizontalAlignLevel={
                                                          Array [
                                                            "inherit",
                                                            "inherit",
                                                            "inherit",
                                                            "inherit",
                                                            "inherit",
                                                          ]
                                                        }
                                                        md={10}
                                                        mdOffset={1}
                                                        xs={12}
                                                      >
                                                        <StyledComponent
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-bdVaJa",
                                                                "isStatic": false,
                                                                "lastClassName": "c15",
                                                                "rules": Array [
                                                                  [Function],
                                                                ],
                                                              },
                                                              "displayName": "Styled(Component)",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-bdVaJa",
                                                              "target": [Function],
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          gutter={true}
                                                          hiddenLevel={
                                                            Array [
                                                              12,
                                                              12,
                                                              10,
                                                              10,
                                                              10,
                                                            ]
                                                          }
                                                          horizontalAlignLevel={
                                                            Array [
                                                              "inherit",
                                                              "inherit",
                                                              "inherit",
                                                              "inherit",
                                                              "inherit",
                                                            ]
                                                          }
                                                          md={10}
                                                          mdOffset={1}
                                                          xs={12}
                                                        >
                                                          <Component
                                                            className="c15"
                                                            gutter={true}
                                                            hiddenLevel={
                                                              Array [
                                                                12,
                                                                12,
                                                                10,
                                                                10,
                                                                10,
                                                              ]
                                                            }
                                                            horizontalAlignLevel={
                                                              Array [
                                                                "inherit",
                                                                "inherit",
                                                                "inherit",
                                                                "inherit",
                                                                "inherit",
                                                              ]
                                                            }
                                                            md={10}
                                                            mdOffset={1}
                                                            xs={12}
                                                          >
                                                            <Col
                                                              className="c15"
                                                              md={10}
                                                              mdOffset={1}
                                                              xs={12}
                                                            >
                                                              <div
                                                                className="col-xs-12 col-md-offset-1 col-md-10 c15"
                                                              >
                                                                <List
                                                                  below={4}
                                                                  size="small"
                                                                  styledComponent={
                                                                    Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "attrs": Array [],
                                                                      "componentStyle": ComponentStyle {
                                                                        "componentId": "sc-ifAKCX",
                                                                        "isStatic": false,
                                                                        "lastClassName": "c21",
                                                                        "rules": Array [
                                                                          "word-wrap: break-word;",
                                                                          "font-weight: 700;",
                                                                          "font-size: 0.875rem;",
                                                                          "letter-spacing: -0.6px;",
                                                                          "line-height: 1.42857;",
                                                                          "padding-left: 2rem;",
                                                                          "@media (min-width: 768px) {",
                                                                          "padding-left: 1rem;",
                                                                          "}",
                                                                          [Function],
                                                                        ],
                                                                      },
                                                                      "defaultProps": Object {
                                                                        "below": undefined,
                                                                        "between": undefined,
                                                                        "className": undefined,
                                                                        "horizontal": undefined,
                                                                        "inline": false,
                                                                        "inset": undefined,
                                                                        "tag": "div",
                                                                        "vertical": undefined,
                                                                      },
                                                                      "displayName": "Styled(Box)",
                                                                      "foldedComponentIds": Array [],
                                                                      "propTypes": Object {
                                                                        "below": [Function],
                                                                        "between": [Function],
                                                                        "children": [Function],
                                                                        "className": [Function],
                                                                        "horizontal": [Function],
                                                                        "inline": [Function],
                                                                        "inset": [Function],
                                                                        "tag": [Function],
                                                                        "vertical": [Function],
                                                                      },
                                                                      "render": [Function],
                                                                      "styledComponentId": "sc-ifAKCX",
                                                                      "target": Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "defaultProps": Object {
                                                                          "below": undefined,
                                                                          "between": undefined,
                                                                          "className": undefined,
                                                                          "horizontal": undefined,
                                                                          "inline": false,
                                                                          "inset": undefined,
                                                                          "tag": "div",
                                                                          "vertical": undefined,
                                                                        },
                                                                        "displayName": "Box",
                                                                        "propTypes": Object {
                                                                          "below": [Function],
                                                                          "between": [Function],
                                                                          "children": [Function],
                                                                          "className": [Function],
                                                                          "horizontal": [Function],
                                                                          "inline": [Function],
                                                                          "inset": [Function],
                                                                          "tag": [Function],
                                                                          "vertical": [Function],
                                                                        },
                                                                        "render": [Function],
                                                                      },
                                                                      "toString": [Function],
                                                                      "warnTooManyClasses": [Function],
                                                                      "withComponent": [Function],
                                                                    }
                                                                  }
                                                                  type="indexed"
                                                                >
                                                                  <Styled(Box)
                                                                    below={4}
                                                                    between={3}
                                                                    inline={false}
                                                                    size="small"
                                                                    tag="ol"
                                                                    type="indexed"
                                                                  >
                                                                    <StyledComponent
                                                                      below={4}
                                                                      between={3}
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "sc-ifAKCX",
                                                                            "isStatic": false,
                                                                            "lastClassName": "c21",
                                                                            "rules": Array [
                                                                              "word-wrap: break-word;",
                                                                              "font-weight: 700;",
                                                                              "font-size: 0.875rem;",
                                                                              "letter-spacing: -0.6px;",
                                                                              "line-height: 1.42857;",
                                                                              "padding-left: 2rem;",
                                                                              "@media (min-width: 768px) {",
                                                                              "padding-left: 1rem;",
                                                                              "}",
                                                                              [Function],
                                                                            ],
                                                                          },
                                                                          "defaultProps": Object {
                                                                            "below": undefined,
                                                                            "between": undefined,
                                                                            "className": undefined,
                                                                            "horizontal": undefined,
                                                                            "inline": false,
                                                                            "inset": undefined,
                                                                            "tag": "div",
                                                                            "vertical": undefined,
                                                                          },
                                                                          "displayName": "Styled(Box)",
                                                                          "foldedComponentIds": Array [],
                                                                          "propTypes": Object {
                                                                            "below": [Function],
                                                                            "between": [Function],
                                                                            "children": [Function],
                                                                            "className": [Function],
                                                                            "horizontal": [Function],
                                                                            "inline": [Function],
                                                                            "inset": [Function],
                                                                            "tag": [Function],
                                                                            "vertical": [Function],
                                                                          },
                                                                          "render": [Function],
                                                                          "styledComponentId": "sc-ifAKCX",
                                                                          "target": Object {
                                                                            "$$typeof": Symbol(react.forward_ref),
                                                                            "defaultProps": Object {
                                                                              "below": undefined,
                                                                              "between": undefined,
                                                                              "className": undefined,
                                                                              "horizontal": undefined,
                                                                              "inline": false,
                                                                              "inset": undefined,
                                                                              "tag": "div",
                                                                              "vertical": undefined,
                                                                            },
                                                                            "displayName": "Box",
                                                                            "propTypes": Object {
                                                                              "below": [Function],
                                                                              "between": [Function],
                                                                              "children": [Function],
                                                                              "className": [Function],
                                                                              "horizontal": [Function],
                                                                              "inline": [Function],
                                                                              "inset": [Function],
                                                                              "tag": [Function],
                                                                              "vertical": [Function],
                                                                            },
                                                                            "render": [Function],
                                                                          },
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={null}
                                                                      inline={false}
                                                                      size="small"
                                                                      tag="ol"
                                                                      type="indexed"
                                                                    >
                                                                      <Box
                                                                        below={4}
                                                                        between={3}
                                                                        className="c16"
                                                                        inline={false}
                                                                        size="small"
                                                                        tag="ol"
                                                                        type="indexed"
                                                                      >
                                                                        <styled.div
                                                                          below={4}
                                                                          between={3}
                                                                          className="c16"
                                                                          inline={false}
                                                                          size="small"
                                                                          tag="ol"
                                                                          type="indexed"
                                                                        >
                                                                          <StyledComponent
                                                                            below={4}
                                                                            between={3}
                                                                            className="c16"
                                                                            forwardedComponent={
                                                                              Object {
                                                                                "$$typeof": Symbol(react.forward_ref),
                                                                                "attrs": Array [
                                                                                  [Function],
                                                                                ],
                                                                                "componentStyle": ComponentStyle {
                                                                                  "componentId": "sc-bxivhb",
                                                                                  "isStatic": false,
                                                                                  "lastClassName": "c17",
                                                                                  "rules": Array [
                                                                                    [Function],
                                                                                    [Function],
                                                                                    [Function],
                                                                                    [Function],
                                                                                    [Function],
                                                                                  ],
                                                                                },
                                                                                "displayName": "styled.div",
                                                                                "foldedComponentIds": Array [],
                                                                                "render": [Function],
                                                                                "styledComponentId": "sc-bxivhb",
                                                                                "target": "div",
                                                                                "toString": [Function],
                                                                                "warnTooManyClasses": [Function],
                                                                                "withComponent": [Function],
                                                                              }
                                                                            }
                                                                            forwardedRef={null}
                                                                            inline={false}
                                                                            size="small"
                                                                            tag="ol"
                                                                            type="indexed"
                                                                          >
                                                                            <ol
                                                                              className="c16 sc-ifAKCX c16 c17"
                                                                              size="small"
                                                                              type="indexed"
                                                                            >
                                                                              <Item
                                                                                key=".$One"
                                                                                styledComponent={
                                                                                  Object {
                                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                                    "attrs": Array [],
                                                                                    "componentStyle": ComponentStyle {
                                                                                      "componentId": "List__StyledListItem-ju21tg-0",
                                                                                      "isStatic": true,
                                                                                      "lastClassName": "c18",
                                                                                      "rules": Array [
                                                                                        "& > span {",
                                                                                        "font-weight: 500;",
                                                                                        "}",
                                                                                        "padding-left: 1rem;",
                                                                                      ],
                                                                                    },
                                                                                    "displayName": "List__StyledListItem",
                                                                                    "foldedComponentIds": Array [],
                                                                                    "render": [Function],
                                                                                    "styledComponentId": "List__StyledListItem-ju21tg-0",
                                                                                    "target": "li",
                                                                                    "toString": [Function],
                                                                                    "warnTooManyClasses": [Function],
                                                                                    "withComponent": [Function],
                                                                                  }
                                                                                }
                                                                              >
                                                                                <List__StyledListItem>
                                                                                  <StyledComponent
                                                                                    forwardedComponent={
                                                                                      Object {
                                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                                        "attrs": Array [],
                                                                                        "componentStyle": ComponentStyle {
                                                                                          "componentId": "List__StyledListItem-ju21tg-0",
                                                                                          "isStatic": true,
                                                                                          "lastClassName": "c18",
                                                                                          "rules": Array [
                                                                                            "& > span {",
                                                                                            "font-weight: 500;",
                                                                                            "}",
                                                                                            "padding-left: 1rem;",
                                                                                          ],
                                                                                        },
                                                                                        "displayName": "List__StyledListItem",
                                                                                        "foldedComponentIds": Array [],
                                                                                        "render": [Function],
                                                                                        "styledComponentId": "List__StyledListItem-ju21tg-0",
                                                                                        "target": "li",
                                                                                        "toString": [Function],
                                                                                        "warnTooManyClasses": [Function],
                                                                                        "withComponent": [Function],
                                                                                      }
                                                                                    }
                                                                                    forwardedRef={null}
                                                                                  >
                                                                                    <li
                                                                                      className="c18"
                                                                                    >
                                                                                      One
                                                                                    </li>
                                                                                  </StyledComponent>
                                                                                </List__StyledListItem>
                                                                              </Item>
                                                                              <Item
                                                                                key=".$Two"
                                                                                styledComponent={
                                                                                  Object {
                                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                                    "attrs": Array [],
                                                                                    "componentStyle": ComponentStyle {
                                                                                      "componentId": "List__StyledListItem-ju21tg-0",
                                                                                      "isStatic": true,
                                                                                      "lastClassName": "c18",
                                                                                      "rules": Array [
                                                                                        "& > span {",
                                                                                        "font-weight: 500;",
                                                                                        "}",
                                                                                        "padding-left: 1rem;",
                                                                                      ],
                                                                                    },
                                                                                    "displayName": "List__StyledListItem",
                                                                                    "foldedComponentIds": Array [],
                                                                                    "render": [Function],
                                                                                    "styledComponentId": "List__StyledListItem-ju21tg-0",
                                                                                    "target": "li",
                                                                                    "toString": [Function],
                                                                                    "warnTooManyClasses": [Function],
                                                                                    "withComponent": [Function],
                                                                                  }
                                                                                }
                                                                              >
                                                                                <List__StyledListItem>
                                                                                  <StyledComponent
                                                                                    forwardedComponent={
                                                                                      Object {
                                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                                        "attrs": Array [],
                                                                                        "componentStyle": ComponentStyle {
                                                                                          "componentId": "List__StyledListItem-ju21tg-0",
                                                                                          "isStatic": true,
                                                                                          "lastClassName": "c18",
                                                                                          "rules": Array [
                                                                                            "& > span {",
                                                                                            "font-weight: 500;",
                                                                                            "}",
                                                                                            "padding-left: 1rem;",
                                                                                          ],
                                                                                        },
                                                                                        "displayName": "List__StyledListItem",
                                                                                        "foldedComponentIds": Array [],
                                                                                        "render": [Function],
                                                                                        "styledComponentId": "List__StyledListItem-ju21tg-0",
                                                                                        "target": "li",
                                                                                        "toString": [Function],
                                                                                        "warnTooManyClasses": [Function],
                                                                                        "withComponent": [Function],
                                                                                      }
                                                                                    }
                                                                                    forwardedRef={null}
                                                                                  >
                                                                                    <li
                                                                                      className="c18"
                                                                                    >
                                                                                      Two
                                                                                    </li>
                                                                                  </StyledComponent>
                                                                                </List__StyledListItem>
                                                                              </Item>
                                                                              <Item
                                                                                key=".$Three"
                                                                                styledComponent={
                                                                                  Object {
                                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                                    "attrs": Array [],
                                                                                    "componentStyle": ComponentStyle {
                                                                                      "componentId": "List__StyledListItem-ju21tg-0",
                                                                                      "isStatic": true,
                                                                                      "lastClassName": "c18",
                                                                                      "rules": Array [
                                                                                        "& > span {",
                                                                                        "font-weight: 500;",
                                                                                        "}",
                                                                                        "padding-left: 1rem;",
                                                                                      ],
                                                                                    },
                                                                                    "displayName": "List__StyledListItem",
                                                                                    "foldedComponentIds": Array [],
                                                                                    "render": [Function],
                                                                                    "styledComponentId": "List__StyledListItem-ju21tg-0",
                                                                                    "target": "li",
                                                                                    "toString": [Function],
                                                                                    "warnTooManyClasses": [Function],
                                                                                    "withComponent": [Function],
                                                                                  }
                                                                                }
                                                                              >
                                                                                <List__StyledListItem>
                                                                                  <StyledComponent
                                                                                    forwardedComponent={
                                                                                      Object {
                                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                                        "attrs": Array [],
                                                                                        "componentStyle": ComponentStyle {
                                                                                          "componentId": "List__StyledListItem-ju21tg-0",
                                                                                          "isStatic": true,
                                                                                          "lastClassName": "c18",
                                                                                          "rules": Array [
                                                                                            "& > span {",
                                                                                            "font-weight: 500;",
                                                                                            "}",
                                                                                            "padding-left: 1rem;",
                                                                                          ],
                                                                                        },
                                                                                        "displayName": "List__StyledListItem",
                                                                                        "foldedComponentIds": Array [],
                                                                                        "render": [Function],
                                                                                        "styledComponentId": "List__StyledListItem-ju21tg-0",
                                                                                        "target": "li",
                                                                                        "toString": [Function],
                                                                                        "warnTooManyClasses": [Function],
                                                                                        "withComponent": [Function],
                                                                                      }
                                                                                    }
                                                                                    forwardedRef={null}
                                                                                  >
                                                                                    <li
                                                                                      className="c18"
                                                                                    >
                                                                                      Three
                                                                                    </li>
                                                                                  </StyledComponent>
                                                                                </List__StyledListItem>
                                                                              </Item>
                                                                            </ol>
                                                                          </StyledComponent>
                                                                        </styled.div>
                                                                      </Box>
                                                                    </StyledComponent>
                                                                  </Styled(Box)>
                                                                </List>
                                                              </div>
                                                            </Col>
                                                          </Component>
                                                        </StyledComponent>
                                                      </Styled(Component)>
                                                    </Col>
                                                  </div>
                                                </Row>
                                              </Component>
                                            </StyledComponent>
                                          </Styled(Component)>
                                        </Row>
                                      </div>
                                    </Grid>
                                  </Component>
                                </StyledComponent>
                              </Styled(Component)>
                            </FlexGrid>
                            <FlexGrid
                              gutter={true}
                              limitWidth={true}
                            >
                              <Styled(Component)
                                fluid={true}
                                limitWidth={true}
                                reverseLevel={
                                  Array [
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                  ]
                                }
                              >
                                <StyledComponent
                                  fluid={true}
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-htpNat",
                                        "isStatic": false,
                                        "lastClassName": "c14",
                                        "rules": Array [
                                          [Function],
                                        ],
                                      },
                                      "displayName": "Styled(Component)",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-htpNat",
                                      "target": [Function],
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  limitWidth={true}
                                  reverseLevel={
                                    Array [
                                      false,
                                      false,
                                      false,
                                      false,
                                      false,
                                    ]
                                  }
                                >
                                  <Component
                                    className="c14"
                                    fluid={true}
                                    limitWidth={true}
                                    reverseLevel={
                                      Array [
                                        false,
                                        false,
                                        false,
                                        false,
                                        false,
                                      ]
                                    }
                                  >
                                    <Grid
                                      className="c14"
                                      fluid={true}
                                    >
                                      <div
                                        className="c14 container-fluid"
                                      >
                                        <Row>
                                          <Styled(Component)
                                            reverseLevel={
                                              Array [
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                              ]
                                            }
                                          >
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-bwzfXH",
                                                    "isStatic": false,
                                                    "lastClassName": "c2",
                                                    "rules": Array [
                                                      [Function],
                                                    ],
                                                  },
                                                  "displayName": "Styled(Component)",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-bwzfXH",
                                                  "target": [Function],
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              reverseLevel={
                                                Array [
                                                  false,
                                                  false,
                                                  false,
                                                  false,
                                                  false,
                                                ]
                                              }
                                            >
                                              <Component
                                                className="c2"
                                                reverseLevel={
                                                  Array [
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                  ]
                                                }
                                              >
                                                <Row
                                                  className="c2"
                                                >
                                                  <div
                                                    className="c2 row"
                                                  >
                                                    <Col
                                                      md={10}
                                                      mdOffset={1}
                                                      xs={12}
                                                    >
                                                      <Styled(Component)
                                                        gutter={true}
                                                        hiddenLevel={
                                                          Array [
                                                            12,
                                                            12,
                                                            10,
                                                            10,
                                                            10,
                                                          ]
                                                        }
                                                        horizontalAlignLevel={
                                                          Array [
                                                            "inherit",
                                                            "inherit",
                                                            "inherit",
                                                            "inherit",
                                                            "inherit",
                                                          ]
                                                        }
                                                        md={10}
                                                        mdOffset={1}
                                                        xs={12}
                                                      >
                                                        <StyledComponent
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-bdVaJa",
                                                                "isStatic": false,
                                                                "lastClassName": "c15",
                                                                "rules": Array [
                                                                  [Function],
                                                                ],
                                                              },
                                                              "displayName": "Styled(Component)",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-bdVaJa",
                                                              "target": [Function],
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          gutter={true}
                                                          hiddenLevel={
                                                            Array [
                                                              12,
                                                              12,
                                                              10,
                                                              10,
                                                              10,
                                                            ]
                                                          }
                                                          horizontalAlignLevel={
                                                            Array [
                                                              "inherit",
                                                              "inherit",
                                                              "inherit",
                                                              "inherit",
                                                              "inherit",
                                                            ]
                                                          }
                                                          md={10}
                                                          mdOffset={1}
                                                          xs={12}
                                                        >
                                                          <Component
                                                            className="c15"
                                                            gutter={true}
                                                            hiddenLevel={
                                                              Array [
                                                                12,
                                                                12,
                                                                10,
                                                                10,
                                                                10,
                                                              ]
                                                            }
                                                            horizontalAlignLevel={
                                                              Array [
                                                                "inherit",
                                                                "inherit",
                                                                "inherit",
                                                                "inherit",
                                                                "inherit",
                                                              ]
                                                            }
                                                            md={10}
                                                            mdOffset={1}
                                                            xs={12}
                                                          >
                                                            <Col
                                                              className="c15"
                                                              md={10}
                                                              mdOffset={1}
                                                              xs={12}
                                                            >
                                                              <div
                                                                className="col-xs-12 col-md-offset-1 col-md-10 c15"
                                                              >
                                                                <Box
                                                                  between={3}
                                                                  inline={false}
                                                                  tag="div"
                                                                >
                                                                  <styled.div
                                                                    between={3}
                                                                    inline={false}
                                                                    tag="div"
                                                                  >
                                                                    <StyledComponent
                                                                      between={3}
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "attrs": Array [
                                                                            [Function],
                                                                          ],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "sc-bxivhb",
                                                                            "isStatic": false,
                                                                            "lastClassName": "c17",
                                                                            "rules": Array [
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                            ],
                                                                          },
                                                                          "displayName": "styled.div",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "sc-bxivhb",
                                                                          "target": "div",
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={null}
                                                                      inline={false}
                                                                      tag="div"
                                                                    >
                                                                      <div
                                                                        className="c19"
                                                                      >
                                                                        <styled.div
                                                                          _css={
                                                                            Object {
                                                                              "paddingLeft": "2rem",
                                                                            }
                                                                          }
                                                                        >
                                                                          <StyledComponent
                                                                            _css={
                                                                              Object {
                                                                                "paddingLeft": "2rem",
                                                                              }
                                                                            }
                                                                            forwardedComponent={
                                                                              Object {
                                                                                "$$typeof": Symbol(react.forward_ref),
                                                                                "attrs": Array [],
                                                                                "componentStyle": ComponentStyle {
                                                                                  "componentId": "sc-gzVnrw",
                                                                                  "isStatic": false,
                                                                                  "lastClassName": "c20",
                                                                                  "rules": Array [
                                                                                    [Function],
                                                                                  ],
                                                                                },
                                                                                "displayName": "styled.div",
                                                                                "foldedComponentIds": Array [],
                                                                                "render": [Function],
                                                                                "styledComponentId": "sc-gzVnrw",
                                                                                "target": "div",
                                                                                "toString": [Function],
                                                                                "warnTooManyClasses": [Function],
                                                                                "withComponent": [Function],
                                                                              }
                                                                            }
                                                                            forwardedRef={null}
                                                                          >
                                                                            <div
                                                                              className="c20"
                                                                            >
                                                                              <Heading
                                                                                invert={false}
                                                                                level="h4"
                                                                                tag="span"
                                                                              >
                                                                                <Heading__StyledHeading
                                                                                  as="span"
                                                                                  data-testid="heading"
                                                                                  invert={false}
                                                                                  level="h4"
                                                                                >
                                                                                  <StyledComponent
                                                                                    as="span"
                                                                                    data-testid="heading"
                                                                                    forwardedComponent={
                                                                                      Object {
                                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                                        "attrs": Array [],
                                                                                        "componentStyle": ComponentStyle {
                                                                                          "componentId": "Heading__StyledHeading-mpz92r-0",
                                                                                          "isStatic": false,
                                                                                          "lastClassName": "c10",
                                                                                          "rules": Array [
                                                                                            "word-wrap: break-word;",
                                                                                            [Function],
                                                                                          ],
                                                                                        },
                                                                                        "displayName": "Heading__StyledHeading",
                                                                                        "foldedComponentIds": Array [],
                                                                                        "render": [Function],
                                                                                        "styledComponentId": "Heading__StyledHeading-mpz92r-0",
                                                                                        "target": "h1",
                                                                                        "toString": [Function],
                                                                                        "warnTooManyClasses": [Function],
                                                                                        "withComponent": [Function],
                                                                                      }
                                                                                    }
                                                                                    forwardedRef={null}
                                                                                    invert={false}
                                                                                    level="h4"
                                                                                  >
                                                                                    <span
                                                                                      className="c10"
                                                                                      data-testid="heading"
                                                                                    >
                                                                                      The following applies to all terms and conditions above
                                                                                    </span>
                                                                                  </StyledComponent>
                                                                                </Heading__StyledHeading>
                                                                              </Heading>
                                                                            </div>
                                                                          </StyledComponent>
                                                                        </styled.div>
                                                                        <List
                                                                          below={4}
                                                                          size="small"
                                                                          styledComponent={
                                                                            Object {
                                                                              "$$typeof": Symbol(react.forward_ref),
                                                                              "attrs": Array [],
                                                                              "componentStyle": ComponentStyle {
                                                                                "componentId": "sc-ifAKCX",
                                                                                "isStatic": false,
                                                                                "lastClassName": "c21",
                                                                                "rules": Array [
                                                                                  "word-wrap: break-word;",
                                                                                  "font-weight: 700;",
                                                                                  "font-size: 0.875rem;",
                                                                                  "letter-spacing: -0.6px;",
                                                                                  "line-height: 1.42857;",
                                                                                  "padding-left: 2rem;",
                                                                                  "@media (min-width: 768px) {",
                                                                                  "padding-left: 1rem;",
                                                                                  "}",
                                                                                  [Function],
                                                                                ],
                                                                              },
                                                                              "defaultProps": Object {
                                                                                "below": undefined,
                                                                                "between": undefined,
                                                                                "className": undefined,
                                                                                "horizontal": undefined,
                                                                                "inline": false,
                                                                                "inset": undefined,
                                                                                "tag": "div",
                                                                                "vertical": undefined,
                                                                              },
                                                                              "displayName": "Styled(Box)",
                                                                              "foldedComponentIds": Array [],
                                                                              "propTypes": Object {
                                                                                "below": [Function],
                                                                                "between": [Function],
                                                                                "children": [Function],
                                                                                "className": [Function],
                                                                                "horizontal": [Function],
                                                                                "inline": [Function],
                                                                                "inset": [Function],
                                                                                "tag": [Function],
                                                                                "vertical": [Function],
                                                                              },
                                                                              "render": [Function],
                                                                              "styledComponentId": "sc-ifAKCX",
                                                                              "target": Object {
                                                                                "$$typeof": Symbol(react.forward_ref),
                                                                                "defaultProps": Object {
                                                                                  "below": undefined,
                                                                                  "between": undefined,
                                                                                  "className": undefined,
                                                                                  "horizontal": undefined,
                                                                                  "inline": false,
                                                                                  "inset": undefined,
                                                                                  "tag": "div",
                                                                                  "vertical": undefined,
                                                                                },
                                                                                "displayName": "Box",
                                                                                "propTypes": Object {
                                                                                  "below": [Function],
                                                                                  "between": [Function],
                                                                                  "children": [Function],
                                                                                  "className": [Function],
                                                                                  "horizontal": [Function],
                                                                                  "inline": [Function],
                                                                                  "inset": [Function],
                                                                                  "tag": [Function],
                                                                                  "vertical": [Function],
                                                                                },
                                                                                "render": [Function],
                                                                              },
                                                                              "toString": [Function],
                                                                              "warnTooManyClasses": [Function],
                                                                              "withComponent": [Function],
                                                                            }
                                                                          }
                                                                          type="nonIndexed"
                                                                        >
                                                                          <Styled(Box)
                                                                            below={4}
                                                                            between={3}
                                                                            inline={false}
                                                                            size="small"
                                                                            tag="ul"
                                                                            type="nonIndexed"
                                                                          >
                                                                            <StyledComponent
                                                                              below={4}
                                                                              between={3}
                                                                              forwardedComponent={
                                                                                Object {
                                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                                  "attrs": Array [],
                                                                                  "componentStyle": ComponentStyle {
                                                                                    "componentId": "sc-ifAKCX",
                                                                                    "isStatic": false,
                                                                                    "lastClassName": "c21",
                                                                                    "rules": Array [
                                                                                      "word-wrap: break-word;",
                                                                                      "font-weight: 700;",
                                                                                      "font-size: 0.875rem;",
                                                                                      "letter-spacing: -0.6px;",
                                                                                      "line-height: 1.42857;",
                                                                                      "padding-left: 2rem;",
                                                                                      "@media (min-width: 768px) {",
                                                                                      "padding-left: 1rem;",
                                                                                      "}",
                                                                                      [Function],
                                                                                    ],
                                                                                  },
                                                                                  "defaultProps": Object {
                                                                                    "below": undefined,
                                                                                    "between": undefined,
                                                                                    "className": undefined,
                                                                                    "horizontal": undefined,
                                                                                    "inline": false,
                                                                                    "inset": undefined,
                                                                                    "tag": "div",
                                                                                    "vertical": undefined,
                                                                                  },
                                                                                  "displayName": "Styled(Box)",
                                                                                  "foldedComponentIds": Array [],
                                                                                  "propTypes": Object {
                                                                                    "below": [Function],
                                                                                    "between": [Function],
                                                                                    "children": [Function],
                                                                                    "className": [Function],
                                                                                    "horizontal": [Function],
                                                                                    "inline": [Function],
                                                                                    "inset": [Function],
                                                                                    "tag": [Function],
                                                                                    "vertical": [Function],
                                                                                  },
                                                                                  "render": [Function],
                                                                                  "styledComponentId": "sc-ifAKCX",
                                                                                  "target": Object {
                                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                                    "defaultProps": Object {
                                                                                      "below": undefined,
                                                                                      "between": undefined,
                                                                                      "className": undefined,
                                                                                      "horizontal": undefined,
                                                                                      "inline": false,
                                                                                      "inset": undefined,
                                                                                      "tag": "div",
                                                                                      "vertical": undefined,
                                                                                    },
                                                                                    "displayName": "Box",
                                                                                    "propTypes": Object {
                                                                                      "below": [Function],
                                                                                      "between": [Function],
                                                                                      "children": [Function],
                                                                                      "className": [Function],
                                                                                      "horizontal": [Function],
                                                                                      "inline": [Function],
                                                                                      "inset": [Function],
                                                                                      "tag": [Function],
                                                                                      "vertical": [Function],
                                                                                    },
                                                                                    "render": [Function],
                                                                                  },
                                                                                  "toString": [Function],
                                                                                  "warnTooManyClasses": [Function],
                                                                                  "withComponent": [Function],
                                                                                }
                                                                              }
                                                                              forwardedRef={null}
                                                                              inline={false}
                                                                              size="small"
                                                                              tag="ul"
                                                                              type="nonIndexed"
                                                                            >
                                                                              <Box
                                                                                below={4}
                                                                                between={3}
                                                                                className="c21"
                                                                                inline={false}
                                                                                size="small"
                                                                                tag="ul"
                                                                                type="nonIndexed"
                                                                              >
                                                                                <styled.div
                                                                                  below={4}
                                                                                  between={3}
                                                                                  className="c21"
                                                                                  inline={false}
                                                                                  size="small"
                                                                                  tag="ul"
                                                                                  type="nonIndexed"
                                                                                >
                                                                                  <StyledComponent
                                                                                    below={4}
                                                                                    between={3}
                                                                                    className="c21"
                                                                                    forwardedComponent={
                                                                                      Object {
                                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                                        "attrs": Array [
                                                                                          [Function],
                                                                                        ],
                                                                                        "componentStyle": ComponentStyle {
                                                                                          "componentId": "sc-bxivhb",
                                                                                          "isStatic": false,
                                                                                          "lastClassName": "c17",
                                                                                          "rules": Array [
                                                                                            [Function],
                                                                                            [Function],
                                                                                            [Function],
                                                                                            [Function],
                                                                                            [Function],
                                                                                          ],
                                                                                        },
                                                                                        "displayName": "styled.div",
                                                                                        "foldedComponentIds": Array [],
                                                                                        "render": [Function],
                                                                                        "styledComponentId": "sc-bxivhb",
                                                                                        "target": "div",
                                                                                        "toString": [Function],
                                                                                        "warnTooManyClasses": [Function],
                                                                                        "withComponent": [Function],
                                                                                      }
                                                                                    }
                                                                                    forwardedRef={null}
                                                                                    inline={false}
                                                                                    size="small"
                                                                                    tag="ul"
                                                                                    type="nonIndexed"
                                                                                  >
                                                                                    <ul
                                                                                      className="c21 sc-ifAKCX c21 c17"
                                                                                      size="small"
                                                                                      type="nonIndexed"
                                                                                    >
                                                                                      <Item
                                                                                        key=".$Four"
                                                                                        styledComponent={
                                                                                          Object {
                                                                                            "$$typeof": Symbol(react.forward_ref),
                                                                                            "attrs": Array [],
                                                                                            "componentStyle": ComponentStyle {
                                                                                              "componentId": "List__StyledListItem-ju21tg-0",
                                                                                              "isStatic": true,
                                                                                              "lastClassName": "c18",
                                                                                              "rules": Array [
                                                                                                "& > span {",
                                                                                                "font-weight: 500;",
                                                                                                "}",
                                                                                                "padding-left: 1rem;",
                                                                                              ],
                                                                                            },
                                                                                            "displayName": "List__StyledListItem",
                                                                                            "foldedComponentIds": Array [],
                                                                                            "render": [Function],
                                                                                            "styledComponentId": "List__StyledListItem-ju21tg-0",
                                                                                            "target": "li",
                                                                                            "toString": [Function],
                                                                                            "warnTooManyClasses": [Function],
                                                                                            "withComponent": [Function],
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <List__StyledListItem>
                                                                                          <StyledComponent
                                                                                            forwardedComponent={
                                                                                              Object {
                                                                                                "$$typeof": Symbol(react.forward_ref),
                                                                                                "attrs": Array [],
                                                                                                "componentStyle": ComponentStyle {
                                                                                                  "componentId": "List__StyledListItem-ju21tg-0",
                                                                                                  "isStatic": true,
                                                                                                  "lastClassName": "c18",
                                                                                                  "rules": Array [
                                                                                                    "& > span {",
                                                                                                    "font-weight: 500;",
                                                                                                    "}",
                                                                                                    "padding-left: 1rem;",
                                                                                                  ],
                                                                                                },
                                                                                                "displayName": "List__StyledListItem",
                                                                                                "foldedComponentIds": Array [],
                                                                                                "render": [Function],
                                                                                                "styledComponentId": "List__StyledListItem-ju21tg-0",
                                                                                                "target": "li",
                                                                                                "toString": [Function],
                                                                                                "warnTooManyClasses": [Function],
                                                                                                "withComponent": [Function],
                                                                                              }
                                                                                            }
                                                                                            forwardedRef={null}
                                                                                          >
                                                                                            <li
                                                                                              className="c18"
                                                                                            >
                                                                                              Four
                                                                                            </li>
                                                                                          </StyledComponent>
                                                                                        </List__StyledListItem>
                                                                                      </Item>
                                                                                      <Item
                                                                                        key=".$Five"
                                                                                        styledComponent={
                                                                                          Object {
                                                                                            "$$typeof": Symbol(react.forward_ref),
                                                                                            "attrs": Array [],
                                                                                            "componentStyle": ComponentStyle {
                                                                                              "componentId": "List__StyledListItem-ju21tg-0",
                                                                                              "isStatic": true,
                                                                                              "lastClassName": "c18",
                                                                                              "rules": Array [
                                                                                                "& > span {",
                                                                                                "font-weight: 500;",
                                                                                                "}",
                                                                                                "padding-left: 1rem;",
                                                                                              ],
                                                                                            },
                                                                                            "displayName": "List__StyledListItem",
                                                                                            "foldedComponentIds": Array [],
                                                                                            "render": [Function],
                                                                                            "styledComponentId": "List__StyledListItem-ju21tg-0",
                                                                                            "target": "li",
                                                                                            "toString": [Function],
                                                                                            "warnTooManyClasses": [Function],
                                                                                            "withComponent": [Function],
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <List__StyledListItem>
                                                                                          <StyledComponent
                                                                                            forwardedComponent={
                                                                                              Object {
                                                                                                "$$typeof": Symbol(react.forward_ref),
                                                                                                "attrs": Array [],
                                                                                                "componentStyle": ComponentStyle {
                                                                                                  "componentId": "List__StyledListItem-ju21tg-0",
                                                                                                  "isStatic": true,
                                                                                                  "lastClassName": "c18",
                                                                                                  "rules": Array [
                                                                                                    "& > span {",
                                                                                                    "font-weight: 500;",
                                                                                                    "}",
                                                                                                    "padding-left: 1rem;",
                                                                                                  ],
                                                                                                },
                                                                                                "displayName": "List__StyledListItem",
                                                                                                "foldedComponentIds": Array [],
                                                                                                "render": [Function],
                                                                                                "styledComponentId": "List__StyledListItem-ju21tg-0",
                                                                                                "target": "li",
                                                                                                "toString": [Function],
                                                                                                "warnTooManyClasses": [Function],
                                                                                                "withComponent": [Function],
                                                                                              }
                                                                                            }
                                                                                            forwardedRef={null}
                                                                                          >
                                                                                            <li
                                                                                              className="c18"
                                                                                            >
                                                                                              Five
                                                                                            </li>
                                                                                          </StyledComponent>
                                                                                        </List__StyledListItem>
                                                                                      </Item>
                                                                                    </ul>
                                                                                  </StyledComponent>
                                                                                </styled.div>
                                                                              </Box>
                                                                            </StyledComponent>
                                                                          </Styled(Box)>
                                                                        </List>
                                                                      </div>
                                                                    </StyledComponent>
                                                                  </styled.div>
                                                                </Box>
                                                              </div>
                                                            </Col>
                                                          </Component>
                                                        </StyledComponent>
                                                      </Styled(Component)>
                                                    </Col>
                                                  </div>
                                                </Row>
                                              </Component>
                                            </StyledComponent>
                                          </Styled(Component)>
                                        </Row>
                                      </div>
                                    </Grid>
                                  </Component>
                                </StyledComponent>
                              </Styled(Component)>
                            </FlexGrid>
                          </div>
                        </StyledComponent>
                      </Translate__StyledContainer>
                    </Transition>
                  </Translate>
                </div>
              </div>
            </StyledComponent>
          </FadeAndReveal__StyledContainer>
        </Transition>
      </CSSTransition>
    </FadeAndReveal>
    <HairlineDivider
      gradient={false}
      vertical={false}
    >
      <HairlineDivider__StyledHairlineDivider
        gradient={false}
        vertical={false}
      >
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "HairlineDivider__StyledHairlineDivider-biamlk-0",
                "isStatic": false,
                "lastClassName": "c0",
                "rules": Array [
                  "padding: 0;",
                  "margin: 0;",
                  "border-width: 0;",
                  [Function],
                ],
              },
              "displayName": "HairlineDivider__StyledHairlineDivider",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "HairlineDivider__StyledHairlineDivider-biamlk-0",
              "target": "hr",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          gradient={false}
          vertical={false}
        >
          <hr
            className="c0"
          />
        </StyledComponent>
      </HairlineDivider__StyledHairlineDivider>
    </HairlineDivider>
  </div>
</TermsAndConditions>
`;

exports[`TermsAndConditions renders expanded with just nonIndexedContent 1`] = `
.c0 {
  padding: 0;
  margin: 0;
  border-width: 0;
  -webkit-transform: rotate(-0.00001deg);
  -ms-transform: rotate(-0.00001deg);
  transform: rotate(-0.00001deg);
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: 100%;
  height: 1px;
  background-color: #d8d8d8;
}

.c12 {
  padding: 0;
  margin: 0;
  border-width: 0;
  height: 32px;
  background-image: radial-gradient(ellipse at top,rgba(150,150,150,0.1) 0%,rgba(0,0,0,0) 70%);
}

div.c3 {
  padding-left: 0;
  padding-right: 0;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

div.c15 {
  padding-left: 1rem;
  padding-right: 1rem;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c2 {
  width: 100%;
}

div.c2 {
  margin: 0 auto;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin: 0 auto;
  width: 100%;
}

div.c1 {
  padding: 0;
}

.c14 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin: 0 auto;
  width: 100%;
}

div.c14 {
  padding: 0;
}

.c10 {
  word-wrap: break-word;
  color: #2a2c2e;
  font-weight: 700;
  font-size: 1rem;
  line-height: 1.25;
  -webkit-letter-spacing: -0.6px;
  -moz-letter-spacing: -0.6px;
  -ms-letter-spacing: -0.6px;
  letter-spacing: -0.6px;
}

.c10 sup {
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
  font-size: 0.875rem;
  top: -0.5em;
}

.c10 > span {
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.c7 > *:not(:last-child) {
  margin-right: 1rem;
}

.c18 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-bottom: 1.5rem;
}

.c18 > *:not(:last-child) {
  margin-bottom: 1rem;
}

.c16 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c16 > *:not(:last-child) {
  margin-bottom: 1rem;
}

.c4:hover .c20 {
  -webkit-transform: translate(6px,2px);
  -ms-transform: translate(6px,2px);
  transform: translate(6px,2px);
}

.c9 {
  line-height: 24px;
  position: absolute;
  top: 0;
  left: 0;
  -webkit-transition: -webkit-transform 300ms;
  -webkit-transition: transform 300ms;
  transition: transform 300ms;
  -webkit-transform: translate(6px,-2px);
  -ms-transform: translate(6px,-2px);
  transform: translate(6px,-2px);
}

.c4:hover .c9 {
  -webkit-transform: translate(6px,-5px);
  -ms-transform: translate(6px,-5px);
  transform: translate(6px,-5px);
}

.c19 {
  padding-left: 1rem;
}

.c19 > span {
  font-weight: 500;
}

.c17 {
  word-wrap: break-word;
  font-weight: 700;
  font-size: 0.875rem;
  -webkit-letter-spacing: -0.6px;
  -moz-letter-spacing: -0.6px;
  -ms-letter-spacing: -0.6px;
  letter-spacing: -0.6px;
  line-height: 1.42857;
  padding-left: 2rem;
  list-style: none;
}

.c5 {
  padding: 0;
  margin: 0;
  border-width: 0;
  font-family: "TELUS-Web","Helvetica Neue",Helvetica,Arial,sans-serif;
  color: #2a2c2e;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: none;
  box-shadow: none;
  cursor: pointer;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  background-color: #fff;
}

.c6 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c8 {
  position: relative;
  width: 24px;
  height: 24px;
}

@media (max-width:575px) {
  .c3 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:576px) {
  .c3 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:768px) {
  .c3 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:992px) {
  .c3 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:1200px) {
  .c3 {
    display: block;
    text-align: inherit;
  }
}

@media (max-width:575px) {
  .c15 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:576px) {
  .c15 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:768px) {
  .c15 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:992px) {
  .c15 {
    display: block;
    text-align: inherit;
  }
}

@media (min-width:1200px) {
  .c15 {
    display: block;
    text-align: inherit;
  }
}

@media (max-width:575px) {
  div.c2 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:576px) {
  div.c2 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:768px) {
  div.c2 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:992px) {
  div.c2 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (min-width:1200px) {
  div.c2 {
    -webkit-flex-direction: row;
    -ms-flex-direction: row;
    flex-direction: row;
  }
}

@media (max-width:575px) {
  .c1 {
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:576px) {
  .c1 {
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:768px) {
  .c1 {
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:992px) {
  .c1 {
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:1200px) {
  .c1 {
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (max-width:575px) {
  .c14 {
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:576px) {
  .c14 {
    max-width: 36rem;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:768px) {
  .c14 {
    max-width: 48rem;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:992px) {
  .c14 {
    max-width: 62rem;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (min-width:1200px) {
  .c14 {
    max-width: 75rem;
    -webkit-flex-direction: column;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}

@media (prefers-reduced-motion:reduce) {
  .c13 {
    -webkit-transition: none !important;
    transition: none !important;
  }
}

@media (prefers-reduced-motion:reduce) {
  .c11 {
    -webkit-transition: none !important;
    transition: none !important;
  }
}

@media (prefers-reduced-motion:reduce) {
  .c9 {
    -webkit-transition: none;
    transition: none;
  }
}

@media (min-width:768px) {
  .c17 {
    padding-left: 1rem;
  }
}

<TermsAndConditions
  copy="en"
  indexedContent={Array []}
  nonIndexedContent={
    Array [
      "Four",
      "Five",
    ]
  }
>
  <div>
    <HairlineDivider
      gradient={false}
      vertical={false}
    >
      <HairlineDivider__StyledHairlineDivider
        gradient={false}
        vertical={false}
      >
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "HairlineDivider__StyledHairlineDivider-biamlk-0",
                "isStatic": false,
                "lastClassName": "c0",
                "rules": Array [
                  "padding: 0;",
                  "margin: 0;",
                  "border-width: 0;",
                  [Function],
                ],
              },
              "displayName": "HairlineDivider__StyledHairlineDivider",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "HairlineDivider__StyledHairlineDivider-biamlk-0",
              "target": "hr",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          gradient={false}
          vertical={false}
        >
          <hr
            className="c0"
          />
        </StyledComponent>
      </HairlineDivider__StyledHairlineDivider>
    </HairlineDivider>
    <FlexGrid
      gutter={false}
      limitWidth={false}
    >
      <Styled(Component)
        fluid={true}
        limitWidth={false}
        reverseLevel={
          Array [
            false,
            false,
            false,
            false,
            false,
          ]
        }
      >
        <StyledComponent
          fluid={true}
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-htpNat",
                "isStatic": false,
                "lastClassName": "c14",
                "rules": Array [
                  [Function],
                ],
              },
              "displayName": "Styled(Component)",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-htpNat",
              "target": [Function],
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          limitWidth={false}
          reverseLevel={
            Array [
              false,
              false,
              false,
              false,
              false,
            ]
          }
        >
          <Component
            className="c1"
            fluid={true}
            limitWidth={false}
            reverseLevel={
              Array [
                false,
                false,
                false,
                false,
                false,
              ]
            }
          >
            <Grid
              className="c1"
              fluid={true}
            >
              <div
                className="c1 container-fluid"
              >
                <Row>
                  <Styled(Component)
                    reverseLevel={
                      Array [
                        false,
                        false,
                        false,
                        false,
                        false,
                      ]
                    }
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-bwzfXH",
                            "isStatic": false,
                            "lastClassName": "c2",
                            "rules": Array [
                              [Function],
                            ],
                          },
                          "displayName": "Styled(Component)",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-bwzfXH",
                          "target": [Function],
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      reverseLevel={
                        Array [
                          false,
                          false,
                          false,
                          false,
                          false,
                        ]
                      }
                    >
                      <Component
                        className="c2"
                        reverseLevel={
                          Array [
                            false,
                            false,
                            false,
                            false,
                            false,
                          ]
                        }
                      >
                        <Row
                          className="c2"
                        >
                          <div
                            className="c2 row"
                          >
                            <Col>
                              <Styled(Component)
                                gutter={false}
                                hiddenLevel={
                                  Array [
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                  ]
                                }
                                horizontalAlignLevel={
                                  Array [
                                    "inherit",
                                    "inherit",
                                    "inherit",
                                    "inherit",
                                    "inherit",
                                  ]
                                }
                                xs={true}
                              >
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-bdVaJa",
                                        "isStatic": false,
                                        "lastClassName": "c15",
                                        "rules": Array [
                                          [Function],
                                        ],
                                      },
                                      "displayName": "Styled(Component)",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-bdVaJa",
                                      "target": [Function],
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  gutter={false}
                                  hiddenLevel={
                                    Array [
                                      false,
                                      false,
                                      false,
                                      false,
                                      false,
                                    ]
                                  }
                                  horizontalAlignLevel={
                                    Array [
                                      "inherit",
                                      "inherit",
                                      "inherit",
                                      "inherit",
                                      "inherit",
                                    ]
                                  }
                                  xs={true}
                                >
                                  <Component
                                    className="c3"
                                    gutter={false}
                                    hiddenLevel={
                                      Array [
                                        false,
                                        false,
                                        false,
                                        false,
                                        false,
                                      ]
                                    }
                                    horizontalAlignLevel={
                                      Array [
                                        "inherit",
                                        "inherit",
                                        "inherit",
                                        "inherit",
                                        "inherit",
                                      ]
                                    }
                                    xs={true}
                                  >
                                    <Col
                                      className="c3"
                                      xs={true}
                                    >
                                      <div
                                        className="col-xs c3"
                                      >
                                        <Styled(StyledClickable)
                                          aria-expanded={true}
                                          onClick={[Function]}
                                          type="button"
                                        >
                                          <StyledComponent
                                            aria-expanded={true}
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-EHOje",
                                                  "isStatic": true,
                                                  "lastClassName": "c5",
                                                  "rules": Array [
                                                    "padding: 0;",
                                                    "margin: 0;",
                                                    "border-width: 0;",
                                                    "font-family: \\"TELUS-Web\\", \\"Helvetica Neue\\", Helvetica, Arial, sans-serif;",
                                                    "color: #2a2c2e;",
                                                    "appearance: none;",
                                                    "background: none;",
                                                    "box-shadow: none;",
                                                    "cursor: pointer;",
                                                    "display: flex;",
                                                    "width: 100%;",
                                                    "justify-content: center;",
                                                    "background-color: #fff;",
                                                  ],
                                                },
                                                "displayName": "Styled(StyledClickable)",
                                                "foldedComponentIds": Array [
                                                  "c4",
                                                ],
                                                "render": [Function],
                                                "styledComponentId": "sc-EHOje",
                                                "target": "button",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            <button
                                              aria-expanded={true}
                                              className="c4 c5"
                                              onClick={[Function]}
                                              type="button"
                                            >
                                              <Styled(Box)
                                                between={3}
                                                inline={true}
                                                tag="div"
                                                vertical={3}
                                              >
                                                <StyledComponent
                                                  between={3}
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-bZQynM",
                                                        "isStatic": true,
                                                        "lastClassName": "c6",
                                                        "rules": Array [
                                                          "align-items: center;",
                                                        ],
                                                      },
                                                      "defaultProps": Object {
                                                        "below": undefined,
                                                        "between": undefined,
                                                        "className": undefined,
                                                        "horizontal": undefined,
                                                        "inline": false,
                                                        "inset": undefined,
                                                        "tag": "div",
                                                        "vertical": undefined,
                                                      },
                                                      "displayName": "Styled(Box)",
                                                      "foldedComponentIds": Array [],
                                                      "propTypes": Object {
                                                        "below": [Function],
                                                        "between": [Function],
                                                        "children": [Function],
                                                        "className": [Function],
                                                        "horizontal": [Function],
                                                        "inline": [Function],
                                                        "inset": [Function],
                                                        "tag": [Function],
                                                        "vertical": [Function],
                                                      },
                                                      "render": [Function],
                                                      "styledComponentId": "sc-bZQynM",
                                                      "target": Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "defaultProps": Object {
                                                          "below": undefined,
                                                          "between": undefined,
                                                          "className": undefined,
                                                          "horizontal": undefined,
                                                          "inline": false,
                                                          "inset": undefined,
                                                          "tag": "div",
                                                          "vertical": undefined,
                                                        },
                                                        "displayName": "Box",
                                                        "propTypes": Object {
                                                          "below": [Function],
                                                          "between": [Function],
                                                          "children": [Function],
                                                          "className": [Function],
                                                          "horizontal": [Function],
                                                          "inline": [Function],
                                                          "inset": [Function],
                                                          "tag": [Function],
                                                          "vertical": [Function],
                                                        },
                                                        "render": [Function],
                                                      },
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                  inline={true}
                                                  tag="div"
                                                  vertical={3}
                                                >
                                                  <Box
                                                    between={3}
                                                    className="c6"
                                                    inline={true}
                                                    tag="div"
                                                    vertical={3}
                                                  >
                                                    <styled.div
                                                      between={3}
                                                      className="c6"
                                                      inline={true}
                                                      tag="div"
                                                      vertical={3}
                                                    >
                                                      <StyledComponent
                                                        between={3}
                                                        className="c6"
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [
                                                              [Function],
                                                            ],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "sc-bxivhb",
                                                              "isStatic": false,
                                                              "lastClassName": "c18",
                                                              "rules": Array [
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                                [Function],
                                                              ],
                                                            },
                                                            "displayName": "styled.div",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "sc-bxivhb",
                                                            "target": "div",
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                        inline={true}
                                                        tag="div"
                                                        vertical={3}
                                                      >
                                                        <div
                                                          className="c6 sc-bZQynM c6 c7"
                                                        >
                                                          <TermsAndConditions__StyledChevronContainer>
                                                            <StyledComponent
                                                              forwardedComponent={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "attrs": Array [],
                                                                  "componentStyle": ComponentStyle {
                                                                    "componentId": "TermsAndConditions__StyledChevronContainer-sc-1aoonet-0",
                                                                    "isStatic": true,
                                                                    "lastClassName": "c8",
                                                                    "rules": Array [
                                                                      "position: relative;",
                                                                      "width: 24px;",
                                                                      "height: 24px;",
                                                                    ],
                                                                  },
                                                                  "displayName": "TermsAndConditions__StyledChevronContainer",
                                                                  "foldedComponentIds": Array [],
                                                                  "render": [Function],
                                                                  "styledComponentId": "TermsAndConditions__StyledChevronContainer-sc-1aoonet-0",
                                                                  "target": "span",
                                                                  "toString": [Function],
                                                                  "warnTooManyClasses": [Function],
                                                                  "withComponent": [Function],
                                                                }
                                                              }
                                                              forwardedRef={null}
                                                            >
                                                              <span
                                                                className="c8"
                                                              >
                                                                <Circle>
                                                                  <svg
                                                                    height="24px"
                                                                    viewBox="0 0 24 24"
                                                                    width="24px"
                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                    xmlnsXlink="http://www.w3.org/1999/xlink"
                                                                  >
                                                                    <path
                                                                      d="M12,0 C5.373,0 0,5.373 0,12 C0,18.627 5.373,24 12,24 C18.627,24 24,18.627 24,12 C24,5.373 18.627,0 12,0 M12,1 C18.065,1 23,5.935 23,12 C23,18.065 18.065,23 12,23 C5.935,23 1,18.065 1,12 C1,5.935 5.935,1 12,1"
                                                                      fill="#4b286d"
                                                                    />
                                                                  </svg>
                                                                </Circle>
                                                                <Chevron
                                                                  isOpen={true}
                                                                >
                                                                  <Chevron__StyledChevron
                                                                    isOpen={true}
                                                                  >
                                                                    <StyledComponent
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "Chevron__StyledChevron-sc-17gl4qs-0",
                                                                            "isStatic": false,
                                                                            "lastClassName": "c9",
                                                                            "rules": Array [
                                                                              [Function],
                                                                            ],
                                                                          },
                                                                          "displayName": "Chevron__StyledChevron",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "Chevron__StyledChevron-sc-17gl4qs-0",
                                                                          "target": "span",
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={null}
                                                                      isOpen={true}
                                                                    >
                                                                      <span
                                                                        className="c9"
                                                                      >
                                                                        <svg
                                                                          height="8px"
                                                                          viewBox="0 0 12 8"
                                                                          width="12px"
                                                                          xmlns="http://www.w3.org/2000/svg"
                                                                          xmlnsXlink="http://www.w3.org/1999/xlink"
                                                                        >
                                                                          <path
                                                                            d="M11.7940812,0.183230226 C11.4424627,-0.117489399 11.0896181,0.0450442657 10.8868854,0.245275736 L5.99681615,4.74055299 L1.11722187,0.245275732 C0.93839231,0.0814520871 0.490533284,-0.180032793 0.165240429,0.183230232 C-0.160052425,0.546493257 0.0652096387,0.91610528 0.243271687,1.07992892 L5.6348225,6.87660266 C5.81365205,7.04113245 6.10607292,7.04113245 6.28490248,6.87660266 C6.28490248,6.87589653 11.7940809,1.07992896 11.7940809,1.07992896 C11.9792355,0.935042671 12.1456996,0.483949851 11.7940812,0.183230226 Z"
                                                                            transform="rotate(180, 6, 4)"
                                                                          />
                                                                        </svg>
                                                                      </span>
                                                                    </StyledComponent>
                                                                  </Chevron__StyledChevron>
                                                                </Chevron>
                                                              </span>
                                                            </StyledComponent>
                                                          </TermsAndConditions__StyledChevronContainer>
                                                          <Heading
                                                            invert={false}
                                                            level="h4"
                                                            tag="h2"
                                                          >
                                                            <Heading__StyledHeading
                                                              as="h2"
                                                              data-testid="heading"
                                                              invert={false}
                                                              level="h4"
                                                            >
                                                              <StyledComponent
                                                                as="h2"
                                                                data-testid="heading"
                                                                forwardedComponent={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "attrs": Array [],
                                                                    "componentStyle": ComponentStyle {
                                                                      "componentId": "Heading__StyledHeading-mpz92r-0",
                                                                      "isStatic": false,
                                                                      "lastClassName": "c10",
                                                                      "rules": Array [
                                                                        "word-wrap: break-word;",
                                                                        [Function],
                                                                      ],
                                                                    },
                                                                    "displayName": "Heading__StyledHeading",
                                                                    "foldedComponentIds": Array [],
                                                                    "render": [Function],
                                                                    "styledComponentId": "Heading__StyledHeading-mpz92r-0",
                                                                    "target": "h1",
                                                                    "toString": [Function],
                                                                    "warnTooManyClasses": [Function],
                                                                    "withComponent": [Function],
                                                                  }
                                                                }
                                                                forwardedRef={null}
                                                                invert={false}
                                                                level="h4"
                                                              >
                                                                <h2
                                                                  className="c10"
                                                                  data-testid="heading"
                                                                >
                                                                  Hide terms and conditions
                                                                </h2>
                                                              </StyledComponent>
                                                            </Heading__StyledHeading>
                                                          </Heading>
                                                        </div>
                                                      </StyledComponent>
                                                    </styled.div>
                                                  </Box>
                                                </StyledComponent>
                                              </Styled(Box)>
                                            </button>
                                          </StyledComponent>
                                        </Styled(StyledClickable)>
                                      </div>
                                    </Col>
                                  </Component>
                                </StyledComponent>
                              </Styled(Component)>
                            </Col>
                          </div>
                        </Row>
                      </Component>
                    </StyledComponent>
                  </Styled(Component)>
                </Row>
              </div>
            </Grid>
          </Component>
        </StyledComponent>
      </Styled(Component)>
    </FlexGrid>
    <FadeAndReveal
      height={0}
      in={true}
      timeout={150}
    >
      <CSSTransition
        classNames=""
        in={true}
        timeout={
          Object {
            "appear": 150,
            "enter": 150,
            "exit": 0,
          }
        }
      >
        <Transition
          appear={false}
          enter={true}
          exit={true}
          in={true}
          mountOnEnter={false}
          onEnter={[Function]}
          onEntered={[Function]}
          onEntering={[Function]}
          onExit={[Function]}
          onExited={[Function]}
          onExiting={[Function]}
          timeout={
            Object {
              "appear": 150,
              "enter": 150,
              "exit": 0,
            }
          }
          unmountOnExit={false}
        >
          <FadeAndReveal__StyledContainer
            aria-hidden={false}
            style={
              Object {
                "height": 0,
                "opacity": 1,
                "overflow": "hidden",
                "transition": "height 150ms ease-in-out, opacity 150ms ease-in-out",
              }
            }
          >
            <StyledComponent
              aria-hidden={false}
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "FadeAndReveal__StyledContainer-sc-1drkfnv-0",
                    "isStatic": true,
                    "lastClassName": "c11",
                    "rules": Array [
                      "@media (prefers-reduced-motion: reduce) {",
                      "transition: none !important;",
                      "}",
                    ],
                  },
                  "displayName": "FadeAndReveal__StyledContainer",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "FadeAndReveal__StyledContainer-sc-1drkfnv-0",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              style={
                Object {
                  "height": 0,
                  "opacity": 1,
                  "overflow": "hidden",
                  "transition": "height 150ms ease-in-out, opacity 150ms ease-in-out",
                }
              }
            >
              <div
                aria-hidden={false}
                className="c11"
                style={
                  Object {
                    "height": 0,
                    "opacity": 1,
                    "overflow": "hidden",
                    "transition": "height 150ms ease-in-out, opacity 150ms ease-in-out",
                  }
                }
              >
                <div>
                  <FlexGrid
                    gutter={false}
                    limitWidth={false}
                  >
                    <Styled(Component)
                      fluid={true}
                      limitWidth={false}
                      reverseLevel={
                        Array [
                          false,
                          false,
                          false,
                          false,
                          false,
                        ]
                      }
                    >
                      <StyledComponent
                        fluid={true}
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-htpNat",
                              "isStatic": false,
                              "lastClassName": "c14",
                              "rules": Array [
                                [Function],
                              ],
                            },
                            "displayName": "Styled(Component)",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-htpNat",
                            "target": [Function],
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        limitWidth={false}
                        reverseLevel={
                          Array [
                            false,
                            false,
                            false,
                            false,
                            false,
                          ]
                        }
                      >
                        <Component
                          className="c1"
                          fluid={true}
                          limitWidth={false}
                          reverseLevel={
                            Array [
                              false,
                              false,
                              false,
                              false,
                              false,
                            ]
                          }
                        >
                          <Grid
                            className="c1"
                            fluid={true}
                          >
                            <div
                              className="c1 container-fluid"
                            >
                              <Row>
                                <Styled(Component)
                                  reverseLevel={
                                    Array [
                                      false,
                                      false,
                                      false,
                                      false,
                                      false,
                                    ]
                                  }
                                >
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-bwzfXH",
                                          "isStatic": false,
                                          "lastClassName": "c2",
                                          "rules": Array [
                                            [Function],
                                          ],
                                        },
                                        "displayName": "Styled(Component)",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "sc-bwzfXH",
                                        "target": [Function],
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    reverseLevel={
                                      Array [
                                        false,
                                        false,
                                        false,
                                        false,
                                        false,
                                      ]
                                    }
                                  >
                                    <Component
                                      className="c2"
                                      reverseLevel={
                                        Array [
                                          false,
                                          false,
                                          false,
                                          false,
                                          false,
                                        ]
                                      }
                                    >
                                      <Row
                                        className="c2"
                                      >
                                        <div
                                          className="c2 row"
                                        >
                                          <Col>
                                            <Styled(Component)
                                              gutter={false}
                                              hiddenLevel={
                                                Array [
                                                  false,
                                                  false,
                                                  false,
                                                  false,
                                                  false,
                                                ]
                                              }
                                              horizontalAlignLevel={
                                                Array [
                                                  "inherit",
                                                  "inherit",
                                                  "inherit",
                                                  "inherit",
                                                  "inherit",
                                                ]
                                              }
                                              xs={true}
                                            >
                                              <StyledComponent
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "sc-bdVaJa",
                                                      "isStatic": false,
                                                      "lastClassName": "c15",
                                                      "rules": Array [
                                                        [Function],
                                                      ],
                                                    },
                                                    "displayName": "Styled(Component)",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "sc-bdVaJa",
                                                    "target": [Function],
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                                gutter={false}
                                                hiddenLevel={
                                                  Array [
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                  ]
                                                }
                                                horizontalAlignLevel={
                                                  Array [
                                                    "inherit",
                                                    "inherit",
                                                    "inherit",
                                                    "inherit",
                                                    "inherit",
                                                  ]
                                                }
                                                xs={true}
                                              >
                                                <Component
                                                  className="c3"
                                                  gutter={false}
                                                  hiddenLevel={
                                                    Array [
                                                      false,
                                                      false,
                                                      false,
                                                      false,
                                                      false,
                                                    ]
                                                  }
                                                  horizontalAlignLevel={
                                                    Array [
                                                      "inherit",
                                                      "inherit",
                                                      "inherit",
                                                      "inherit",
                                                      "inherit",
                                                    ]
                                                  }
                                                  xs={true}
                                                >
                                                  <Col
                                                    className="c3"
                                                    xs={true}
                                                  >
                                                    <div
                                                      className="col-xs c3"
                                                    >
                                                      <DimpleDivider>
                                                        <DimpleDivider__StyledDimpleDivider>
                                                          <StyledComponent
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "DimpleDivider__StyledDimpleDivider-quxnvh-0",
                                                                  "isStatic": true,
                                                                  "lastClassName": "c12",
                                                                  "rules": Array [
                                                                    "padding: 0;",
                                                                    "margin: 0;",
                                                                    "border-width: 0;",
                                                                    "height: 32px;",
                                                                    "background-image: radial-gradient(ellipse at top, rgba(150, 150, 150, 0.1) 0%, rgba(0, 0, 0, 0) 70%);",
                                                                  ],
                                                                },
                                                                "displayName": "DimpleDivider__StyledDimpleDivider",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "DimpleDivider__StyledDimpleDivider-quxnvh-0",
                                                                "target": "hr",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                          >
                                                            <hr
                                                              className="c12"
                                                            />
                                                          </StyledComponent>
                                                        </DimpleDivider__StyledDimpleDivider>
                                                      </DimpleDivider>
                                                    </div>
                                                  </Col>
                                                </Component>
                                              </StyledComponent>
                                            </Styled(Component)>
                                          </Col>
                                        </div>
                                      </Row>
                                    </Component>
                                  </StyledComponent>
                                </Styled(Component)>
                              </Row>
                            </div>
                          </Grid>
                        </Component>
                      </StyledComponent>
                    </Styled(Component)>
                  </FlexGrid>
                  <Translate
                    direction="y"
                    distance="0rem"
                    in={true}
                    initialStyle={
                      Object {
                        "transform": "translateY(1rem)",
                      }
                    }
                    timeout={150}
                  >
                    <Transition
                      appear={false}
                      enter={true}
                      exit={true}
                      in={true}
                      mountOnEnter={false}
                      onEnter={[Function]}
                      onEntered={[Function]}
                      onEntering={[Function]}
                      onExit={[Function]}
                      onExited={[Function]}
                      onExiting={[Function]}
                      timeout={150}
                      unmountOnExit={false}
                    >
                      <Translate__StyledContainer
                        style={
                          Object {
                            "transform": "translateY(0rem)",
                            "transition": "transform 150ms",
                          }
                        }
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "Translate__StyledContainer-lgiaqm-0",
                                "isStatic": true,
                                "lastClassName": "c13",
                                "rules": Array [
                                  "@media (prefers-reduced-motion: reduce) {",
                                  "transition: none !important;",
                                  "}",
                                ],
                              },
                              "displayName": "Translate__StyledContainer",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "Translate__StyledContainer-lgiaqm-0",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          style={
                            Object {
                              "transform": "translateY(0rem)",
                              "transition": "transform 150ms",
                            }
                          }
                        >
                          <div
                            className="c13"
                            style={
                              Object {
                                "transform": "translateY(0rem)",
                                "transition": "transform 150ms",
                              }
                            }
                          >
                            <FlexGrid
                              gutter={true}
                              limitWidth={true}
                            >
                              <Styled(Component)
                                fluid={true}
                                limitWidth={true}
                                reverseLevel={
                                  Array [
                                    false,
                                    false,
                                    false,
                                    false,
                                    false,
                                  ]
                                }
                              >
                                <StyledComponent
                                  fluid={true}
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-htpNat",
                                        "isStatic": false,
                                        "lastClassName": "c14",
                                        "rules": Array [
                                          [Function],
                                        ],
                                      },
                                      "displayName": "Styled(Component)",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-htpNat",
                                      "target": [Function],
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  limitWidth={true}
                                  reverseLevel={
                                    Array [
                                      false,
                                      false,
                                      false,
                                      false,
                                      false,
                                    ]
                                  }
                                >
                                  <Component
                                    className="c14"
                                    fluid={true}
                                    limitWidth={true}
                                    reverseLevel={
                                      Array [
                                        false,
                                        false,
                                        false,
                                        false,
                                        false,
                                      ]
                                    }
                                  >
                                    <Grid
                                      className="c14"
                                      fluid={true}
                                    >
                                      <div
                                        className="c14 container-fluid"
                                      >
                                        <Row>
                                          <Styled(Component)
                                            reverseLevel={
                                              Array [
                                                false,
                                                false,
                                                false,
                                                false,
                                                false,
                                              ]
                                            }
                                          >
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-bwzfXH",
                                                    "isStatic": false,
                                                    "lastClassName": "c2",
                                                    "rules": Array [
                                                      [Function],
                                                    ],
                                                  },
                                                  "displayName": "Styled(Component)",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-bwzfXH",
                                                  "target": [Function],
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              reverseLevel={
                                                Array [
                                                  false,
                                                  false,
                                                  false,
                                                  false,
                                                  false,
                                                ]
                                              }
                                            >
                                              <Component
                                                className="c2"
                                                reverseLevel={
                                                  Array [
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                    false,
                                                  ]
                                                }
                                              >
                                                <Row
                                                  className="c2"
                                                >
                                                  <div
                                                    className="c2 row"
                                                  >
                                                    <Col
                                                      md={10}
                                                      mdOffset={1}
                                                      xs={12}
                                                    >
                                                      <Styled(Component)
                                                        gutter={true}
                                                        hiddenLevel={
                                                          Array [
                                                            12,
                                                            12,
                                                            10,
                                                            10,
                                                            10,
                                                          ]
                                                        }
                                                        horizontalAlignLevel={
                                                          Array [
                                                            "inherit",
                                                            "inherit",
                                                            "inherit",
                                                            "inherit",
                                                            "inherit",
                                                          ]
                                                        }
                                                        md={10}
                                                        mdOffset={1}
                                                        xs={12}
                                                      >
                                                        <StyledComponent
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-bdVaJa",
                                                                "isStatic": false,
                                                                "lastClassName": "c15",
                                                                "rules": Array [
                                                                  [Function],
                                                                ],
                                                              },
                                                              "displayName": "Styled(Component)",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-bdVaJa",
                                                              "target": [Function],
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          gutter={true}
                                                          hiddenLevel={
                                                            Array [
                                                              12,
                                                              12,
                                                              10,
                                                              10,
                                                              10,
                                                            ]
                                                          }
                                                          horizontalAlignLevel={
                                                            Array [
                                                              "inherit",
                                                              "inherit",
                                                              "inherit",
                                                              "inherit",
                                                              "inherit",
                                                            ]
                                                          }
                                                          md={10}
                                                          mdOffset={1}
                                                          xs={12}
                                                        >
                                                          <Component
                                                            className="c15"
                                                            gutter={true}
                                                            hiddenLevel={
                                                              Array [
                                                                12,
                                                                12,
                                                                10,
                                                                10,
                                                                10,
                                                              ]
                                                            }
                                                            horizontalAlignLevel={
                                                              Array [
                                                                "inherit",
                                                                "inherit",
                                                                "inherit",
                                                                "inherit",
                                                                "inherit",
                                                              ]
                                                            }
                                                            md={10}
                                                            mdOffset={1}
                                                            xs={12}
                                                          >
                                                            <Col
                                                              className="c15"
                                                              md={10}
                                                              mdOffset={1}
                                                              xs={12}
                                                            >
                                                              <div
                                                                className="col-xs-12 col-md-offset-1 col-md-10 c15"
                                                              >
                                                                <Box
                                                                  between={3}
                                                                  inline={false}
                                                                  tag="div"
                                                                >
                                                                  <styled.div
                                                                    between={3}
                                                                    inline={false}
                                                                    tag="div"
                                                                  >
                                                                    <StyledComponent
                                                                      between={3}
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "attrs": Array [
                                                                            [Function],
                                                                          ],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "sc-bxivhb",
                                                                            "isStatic": false,
                                                                            "lastClassName": "c18",
                                                                            "rules": Array [
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                            ],
                                                                          },
                                                                          "displayName": "styled.div",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "sc-bxivhb",
                                                                          "target": "div",
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={null}
                                                                      inline={false}
                                                                      tag="div"
                                                                    >
                                                                      <div
                                                                        className="c16"
                                                                      >
                                                                        <List
                                                                          below={4}
                                                                          size="small"
                                                                          styledComponent={
                                                                            Object {
                                                                              "$$typeof": Symbol(react.forward_ref),
                                                                              "attrs": Array [],
                                                                              "componentStyle": ComponentStyle {
                                                                                "componentId": "sc-ifAKCX",
                                                                                "isStatic": false,
                                                                                "lastClassName": "c17",
                                                                                "rules": Array [
                                                                                  "word-wrap: break-word;",
                                                                                  "font-weight: 700;",
                                                                                  "font-size: 0.875rem;",
                                                                                  "letter-spacing: -0.6px;",
                                                                                  "line-height: 1.42857;",
                                                                                  "padding-left: 2rem;",
                                                                                  "@media (min-width: 768px) {",
                                                                                  "padding-left: 1rem;",
                                                                                  "}",
                                                                                  [Function],
                                                                                ],
                                                                              },
                                                                              "defaultProps": Object {
                                                                                "below": undefined,
                                                                                "between": undefined,
                                                                                "className": undefined,
                                                                                "horizontal": undefined,
                                                                                "inline": false,
                                                                                "inset": undefined,
                                                                                "tag": "div",
                                                                                "vertical": undefined,
                                                                              },
                                                                              "displayName": "Styled(Box)",
                                                                              "foldedComponentIds": Array [],
                                                                              "propTypes": Object {
                                                                                "below": [Function],
                                                                                "between": [Function],
                                                                                "children": [Function],
                                                                                "className": [Function],
                                                                                "horizontal": [Function],
                                                                                "inline": [Function],
                                                                                "inset": [Function],
                                                                                "tag": [Function],
                                                                                "vertical": [Function],
                                                                              },
                                                                              "render": [Function],
                                                                              "styledComponentId": "sc-ifAKCX",
                                                                              "target": Object {
                                                                                "$$typeof": Symbol(react.forward_ref),
                                                                                "defaultProps": Object {
                                                                                  "below": undefined,
                                                                                  "between": undefined,
                                                                                  "className": undefined,
                                                                                  "horizontal": undefined,
                                                                                  "inline": false,
                                                                                  "inset": undefined,
                                                                                  "tag": "div",
                                                                                  "vertical": undefined,
                                                                                },
                                                                                "displayName": "Box",
                                                                                "propTypes": Object {
                                                                                  "below": [Function],
                                                                                  "between": [Function],
                                                                                  "children": [Function],
                                                                                  "className": [Function],
                                                                                  "horizontal": [Function],
                                                                                  "inline": [Function],
                                                                                  "inset": [Function],
                                                                                  "tag": [Function],
                                                                                  "vertical": [Function],
                                                                                },
                                                                                "render": [Function],
                                                                              },
                                                                              "toString": [Function],
                                                                              "warnTooManyClasses": [Function],
                                                                              "withComponent": [Function],
                                                                            }
                                                                          }
                                                                          type="nonIndexed"
                                                                        >
                                                                          <Styled(Box)
                                                                            below={4}
                                                                            between={3}
                                                                            inline={false}
                                                                            size="small"
                                                                            tag="ul"
                                                                            type="nonIndexed"
                                                                          >
                                                                            <StyledComponent
                                                                              below={4}
                                                                              between={3}
                                                                              forwardedComponent={
                                                                                Object {
                                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                                  "attrs": Array [],
                                                                                  "componentStyle": ComponentStyle {
                                                                                    "componentId": "sc-ifAKCX",
                                                                                    "isStatic": false,
                                                                                    "lastClassName": "c17",
                                                                                    "rules": Array [
                                                                                      "word-wrap: break-word;",
                                                                                      "font-weight: 700;",
                                                                                      "font-size: 0.875rem;",
                                                                                      "letter-spacing: -0.6px;",
                                                                                      "line-height: 1.42857;",
                                                                                      "padding-left: 2rem;",
                                                                                      "@media (min-width: 768px) {",
                                                                                      "padding-left: 1rem;",
                                                                                      "}",
                                                                                      [Function],
                                                                                    ],
                                                                                  },
                                                                                  "defaultProps": Object {
                                                                                    "below": undefined,
                                                                                    "between": undefined,
                                                                                    "className": undefined,
                                                                                    "horizontal": undefined,
                                                                                    "inline": false,
                                                                                    "inset": undefined,
                                                                                    "tag": "div",
                                                                                    "vertical": undefined,
                                                                                  },
                                                                                  "displayName": "Styled(Box)",
                                                                                  "foldedComponentIds": Array [],
                                                                                  "propTypes": Object {
                                                                                    "below": [Function],
                                                                                    "between": [Function],
                                                                                    "children": [Function],
                                                                                    "className": [Function],
                                                                                    "horizontal": [Function],
                                                                                    "inline": [Function],
                                                                                    "inset": [Function],
                                                                                    "tag": [Function],
                                                                                    "vertical": [Function],
                                                                                  },
                                                                                  "render": [Function],
                                                                                  "styledComponentId": "sc-ifAKCX",
                                                                                  "target": Object {
                                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                                    "defaultProps": Object {
                                                                                      "below": undefined,
                                                                                      "between": undefined,
                                                                                      "className": undefined,
                                                                                      "horizontal": undefined,
                                                                                      "inline": false,
                                                                                      "inset": undefined,
                                                                                      "tag": "div",
                                                                                      "vertical": undefined,
                                                                                    },
                                                                                    "displayName": "Box",
                                                                                    "propTypes": Object {
                                                                                      "below": [Function],
                                                                                      "between": [Function],
                                                                                      "children": [Function],
                                                                                      "className": [Function],
                                                                                      "horizontal": [Function],
                                                                                      "inline": [Function],
                                                                                      "inset": [Function],
                                                                                      "tag": [Function],
                                                                                      "vertical": [Function],
                                                                                    },
                                                                                    "render": [Function],
                                                                                  },
                                                                                  "toString": [Function],
                                                                                  "warnTooManyClasses": [Function],
                                                                                  "withComponent": [Function],
                                                                                }
                                                                              }
                                                                              forwardedRef={null}
                                                                              inline={false}
                                                                              size="small"
                                                                              tag="ul"
                                                                              type="nonIndexed"
                                                                            >
                                                                              <Box
                                                                                below={4}
                                                                                between={3}
                                                                                className="c17"
                                                                                inline={false}
                                                                                size="small"
                                                                                tag="ul"
                                                                                type="nonIndexed"
                                                                              >
                                                                                <styled.div
                                                                                  below={4}
                                                                                  between={3}
                                                                                  className="c17"
                                                                                  inline={false}
                                                                                  size="small"
                                                                                  tag="ul"
                                                                                  type="nonIndexed"
                                                                                >
                                                                                  <StyledComponent
                                                                                    below={4}
                                                                                    between={3}
                                                                                    className="c17"
                                                                                    forwardedComponent={
                                                                                      Object {
                                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                                        "attrs": Array [
                                                                                          [Function],
                                                                                        ],
                                                                                        "componentStyle": ComponentStyle {
                                                                                          "componentId": "sc-bxivhb",
                                                                                          "isStatic": false,
                                                                                          "lastClassName": "c18",
                                                                                          "rules": Array [
                                                                                            [Function],
                                                                                            [Function],
                                                                                            [Function],
                                                                                            [Function],
                                                                                            [Function],
                                                                                          ],
                                                                                        },
                                                                                        "displayName": "styled.div",
                                                                                        "foldedComponentIds": Array [],
                                                                                        "render": [Function],
                                                                                        "styledComponentId": "sc-bxivhb",
                                                                                        "target": "div",
                                                                                        "toString": [Function],
                                                                                        "warnTooManyClasses": [Function],
                                                                                        "withComponent": [Function],
                                                                                      }
                                                                                    }
                                                                                    forwardedRef={null}
                                                                                    inline={false}
                                                                                    size="small"
                                                                                    tag="ul"
                                                                                    type="nonIndexed"
                                                                                  >
                                                                                    <ul
                                                                                      className="c17 sc-ifAKCX c17 c18"
                                                                                      size="small"
                                                                                      type="nonIndexed"
                                                                                    >
                                                                                      <Item
                                                                                        key=".$Four"
                                                                                        styledComponent={
                                                                                          Object {
                                                                                            "$$typeof": Symbol(react.forward_ref),
                                                                                            "attrs": Array [],
                                                                                            "componentStyle": ComponentStyle {
                                                                                              "componentId": "List__StyledListItem-ju21tg-0",
                                                                                              "isStatic": true,
                                                                                              "lastClassName": "c19",
                                                                                              "rules": Array [
                                                                                                "& > span {",
                                                                                                "font-weight: 500;",
                                                                                                "}",
                                                                                                "padding-left: 1rem;",
                                                                                              ],
                                                                                            },
                                                                                            "displayName": "List__StyledListItem",
                                                                                            "foldedComponentIds": Array [],
                                                                                            "render": [Function],
                                                                                            "styledComponentId": "List__StyledListItem-ju21tg-0",
                                                                                            "target": "li",
                                                                                            "toString": [Function],
                                                                                            "warnTooManyClasses": [Function],
                                                                                            "withComponent": [Function],
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <List__StyledListItem>
                                                                                          <StyledComponent
                                                                                            forwardedComponent={
                                                                                              Object {
                                                                                                "$$typeof": Symbol(react.forward_ref),
                                                                                                "attrs": Array [],
                                                                                                "componentStyle": ComponentStyle {
                                                                                                  "componentId": "List__StyledListItem-ju21tg-0",
                                                                                                  "isStatic": true,
                                                                                                  "lastClassName": "c19",
                                                                                                  "rules": Array [
                                                                                                    "& > span {",
                                                                                                    "font-weight: 500;",
                                                                                                    "}",
                                                                                                    "padding-left: 1rem;",
                                                                                                  ],
                                                                                                },
                                                                                                "displayName": "List__StyledListItem",
                                                                                                "foldedComponentIds": Array [],
                                                                                                "render": [Function],
                                                                                                "styledComponentId": "List__StyledListItem-ju21tg-0",
                                                                                                "target": "li",
                                                                                                "toString": [Function],
                                                                                                "warnTooManyClasses": [Function],
                                                                                                "withComponent": [Function],
                                                                                              }
                                                                                            }
                                                                                            forwardedRef={null}
                                                                                          >
                                                                                            <li
                                                                                              className="c19"
                                                                                            >
                                                                                              Four
                                                                                            </li>
                                                                                          </StyledComponent>
                                                                                        </List__StyledListItem>
                                                                                      </Item>
                                                                                      <Item
                                                                                        key=".$Five"
                                                                                        styledComponent={
                                                                                          Object {
                                                                                            "$$typeof": Symbol(react.forward_ref),
                                                                                            "attrs": Array [],
                                                                                            "componentStyle": ComponentStyle {
                                                                                              "componentId": "List__StyledListItem-ju21tg-0",
                                                                                              "isStatic": true,
                                                                                              "lastClassName": "c19",
                                                                                              "rules": Array [
                                                                                                "& > span {",
                                                                                                "font-weight: 500;",
                                                                                                "}",
                                                                                                "padding-left: 1rem;",
                                                                                              ],
                                                                                            },
                                                                                            "displayName": "List__StyledListItem",
                                                                                            "foldedComponentIds": Array [],
                                                                                            "render": [Function],
                                                                                            "styledComponentId": "List__StyledListItem-ju21tg-0",
                                                                                            "target": "li",
                                                                                            "toString": [Function],
                                                                                            "warnTooManyClasses": [Function],
                                                                                            "withComponent": [Function],
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <List__StyledListItem>
                                                                                          <StyledComponent
                                                                                            forwardedComponent={
                                                                                              Object {
                                                                                                "$$typeof": Symbol(react.forward_ref),
                                                                                                "attrs": Array [],
                                                                                                "componentStyle": ComponentStyle {
                                                                                                  "componentId": "List__StyledListItem-ju21tg-0",
                                                                                                  "isStatic": true,
                                                                                                  "lastClassName": "c19",
                                                                                                  "rules": Array [
                                                                                                    "& > span {",
                                                                                                    "font-weight: 500;",
                                                                                                    "}",
                                                                                                    "padding-left: 1rem;",
                                                                                                  ],
                                                                                                },
                                                                                                "displayName": "List__StyledListItem",
                                                                                                "foldedComponentIds": Array [],
                                                                                                "render": [Function],
                                                                                                "styledComponentId": "List__StyledListItem-ju21tg-0",
                                                                                                "target": "li",
                                                                                                "toString": [Function],
                                                                                                "warnTooManyClasses": [Function],
                                                                                                "withComponent": [Function],
                                                                                              }
                                                                                            }
                                                                                            forwardedRef={null}
                                                                                          >
                                                                                            <li
                                                                                              className="c19"
                                                                                            >
                                                                                              Five
                                                                                            </li>
                                                                                          </StyledComponent>
                                                                                        </List__StyledListItem>
                                                                                      </Item>
                                                                                    </ul>
                                                                                  </StyledComponent>
                                                                                </styled.div>
                                                                              </Box>
                                                                            </StyledComponent>
                                                                          </Styled(Box)>
                                                                        </List>
                                                                      </div>
                                                                    </StyledComponent>
                                                                  </styled.div>
                                                                </Box>
                                                              </div>
                                                            </Col>
                                                          </Component>
                                                        </StyledComponent>
                                                      </Styled(Component)>
                                                    </Col>
                                                  </div>
                                                </Row>
                                              </Component>
                                            </StyledComponent>
                                          </Styled(Component)>
                                        </Row>
                                      </div>
                                    </Grid>
                                  </Component>
                                </StyledComponent>
                              </Styled(Component)>
                            </FlexGrid>
                          </div>
                        </StyledComponent>
                      </Translate__StyledContainer>
                    </Transition>
                  </Translate>
                </div>
              </div>
            </StyledComponent>
          </FadeAndReveal__StyledContainer>
        </Transition>
      </CSSTransition>
    </FadeAndReveal>
    <HairlineDivider
      gradient={false}
      vertical={false}
    >
      <HairlineDivider__StyledHairlineDivider
        gradient={false}
        vertical={false}
      >
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "HairlineDivider__StyledHairlineDivider-biamlk-0",
                "isStatic": false,
                "lastClassName": "c0",
                "rules": Array [
                  "padding: 0;",
                  "margin: 0;",
                  "border-width: 0;",
                  [Function],
                ],
              },
              "displayName": "HairlineDivider__StyledHairlineDivider",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "HairlineDivider__StyledHairlineDivider-biamlk-0",
              "target": "hr",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          gradient={false}
          vertical={false}
        >
          <hr
            className="c0"
          />
        </StyledComponent>
      </HairlineDivider__StyledHairlineDivider>
    </HairlineDivider>
  </div>
</TermsAndConditions>
`;
