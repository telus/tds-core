// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TermsAndConditions renders 1`] = `
.c0 {
  padding: 0;
  margin: 0;
  border-width: 0;
  -webkit-transform: rotate(-0.00001deg);
  -ms-transform: rotate(-0.00001deg);
  transform: rotate(-0.00001deg);
  width: 100%;
  height: 1px;
  background-color: #d8d8d8;
}

.c8 {
  padding: 0;
  margin: 0;
  border-width: 0;
  height: 32px;
  background-image: radial-gradient(ellipse at top,rgba(150,150,150,0.1) 0%,rgba(0,0,0,0) 70%);
}

.c7 {
  word-wrap: break-word;
  color: #2a2c2e;
  font-weight: 700;
  font-size: 1rem;
  line-height: 1.25;
  -webkit-letter-spacing: -0.6px;
  -moz-letter-spacing: -0.6px;
  -ms-letter-spacing: -0.6px;
  letter-spacing: -0.6px;
}

.c7 .c12,
.c7 sup {
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
  font-size: 0.875rem;
  top: -0.5em;
}

.c4 {
  padding-top: 1rem;
  padding-bottom: 1rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c4 > *:not(:last-child) {
  margin-right: 1rem;
}

.c10 {
  margin-bottom: 1.5rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c10 > *:not(:last-child) {
  margin-bottom: 1rem;
}

.c2 {
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  background-color: #fff;
}

.c6 {
  line-height: 24px;
  position: absolute;
  top: 0;
  left: 0;
  -webkit-transition: -webkit-transform 300ms;
  -webkit-transition: transform 300ms;
  transition: transform 300ms;
  -webkit-transform: translate(6px,-1px);
  -ms-transform: translate(6px,-1px);
  transform: translate(6px,-1px);
}

.c1:hover .c6 {
  -webkit-transform: translate(6px,2px);
  -ms-transform: translate(6px,2px);
  transform: translate(6px,2px);
}

.c11 {
  padding-left: 1rem;
}

.c11 > span {
  font-weight: 500;
}

.c9 {
  word-wrap: break-word;
  font-weight: 700;
  font-size: 0.875rem;
  -webkit-letter-spacing: -0.6px;
  -moz-letter-spacing: -0.6px;
  -ms-letter-spacing: -0.6px;
  letter-spacing: -0.6px;
  line-height: 1.42857;
  padding-left: 2rem;
  list-style: decimal;
}

.c3 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c5 {
  position: relative;
  width: 24px;
  height: 24px;
}

@media (min-width:768px) {
  .c10 {
    margin-bottom: 2rem;
  }
}

@media (min-width:768px) {
  .c9 {
    padding-left: 1rem;
  }
}

<div>
  <hr
    class="c0"
  />
  <div
    class="TDS_FlexGrid-modules__flexGrid___QxDgy TDS_FlexGrid-modules__xsReverseCancel___20p12 TDS_FlexGrid-modules__smReverseCancel___-_YfQ TDS_FlexGrid-modules__mdReverseCancel___3cUDQ TDS_FlexGrid-modules__lgReverseCancel___1lfjg TDS_FlexGrid-modules__xlReverseCancel___OIqvi TDS_flexboxgrid2__container-fluid___3c7kO"
  >
    <div
      class="TDS_Row-modules__flexRow___3CHOR TDS_Row-modules__xsReverseCancel___3qDNC TDS_Row-modules__smReverseCancel___VUTb9 TDS_Row-modules__mdReverseCancel___1MWfN TDS_Row-modules__lgReverseCancel___1Ngyt TDS_Row-modules__xlReverseCancel___16npr TDS_flexboxgrid2__row___3YyB2"
    >
      <div
        class="TDS_flexboxgrid2__col-xs___2KrHO TDS_Col-modules__xsVisible___yQn24 TDS_Col-modules__smVisible___3-waa TDS_Col-modules__mdVisible___wUg94 TDS_Col-modules__lgVisible___7FbXv TDS_Col-modules__xlVisible___1AW2r TDS_Col-modules__gutterless___11Fxy"
      >
        <button
          class="clickable c1 c2"
          type="button"
        >
          <div
            class="c3 sc-bxivhb c3 c4"
          >
            <span
              class="c5"
            >
              <svg
                height="24px"
                viewBox="0 0 24 24"
                width="24px"
                xlink="http://www.w3.org/1999/xlink"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M12,0 C5.373,0 0,5.373 0,12 C0,18.627 5.373,24 12,24 C18.627,24 24,18.627 24,12 C24,5.373 18.627,0 12,0 M12,1 C18.065,1 23,5.935 23,12 C23,18.065 18.065,23 12,23 C5.935,23 1,18.065 1,12 C1,5.935 5.935,1 12,1"
                  fill="#4b286d"
                />
              </svg>
              <span
                class="c6"
              >
                <svg
                  height="8px"
                  viewBox="0 0 12 8"
                  width="12px"
                  xlink="http://www.w3.org/1999/xlink"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M11.7940812,0.183230226 C11.4424627,-0.117489399 11.0896181,0.0450442657 10.8868854,0.245275736 L5.99681615,4.74055299 L1.11722187,0.245275732 C0.93839231,0.0814520871 0.490533284,-0.180032793 0.165240429,0.183230232 C-0.160052425,0.546493257 0.0652096387,0.91610528 0.243271687,1.07992892 L5.6348225,6.87660266 C5.81365205,7.04113245 6.10607292,7.04113245 6.28490248,6.87660266 C6.28490248,6.87589653 11.7940809,1.07992896 11.7940809,1.07992896 C11.9792355,0.935042671 12.1456996,0.483949851 11.7940812,0.183230226 Z"
                  />
                </svg>
              </span>
            </span>
            <h2
              class="c7"
              data-testid="heading"
            >
              View terms and conditions
            </h2>
          </div>
        </button>
      </div>
    </div>
  </div>
  <div
    style="transition:height 150ms, opacity 150ms ease-in-out;opacity:0;height:0;overflow:hidden"
  >
    <div>
      <div
        class="TDS_FlexGrid-modules__flexGrid___QxDgy TDS_FlexGrid-modules__xsReverseCancel___20p12 TDS_FlexGrid-modules__smReverseCancel___-_YfQ TDS_FlexGrid-modules__mdReverseCancel___3cUDQ TDS_FlexGrid-modules__lgReverseCancel___1lfjg TDS_FlexGrid-modules__xlReverseCancel___OIqvi TDS_flexboxgrid2__container-fluid___3c7kO"
      >
        <div
          class="TDS_Row-modules__flexRow___3CHOR TDS_Row-modules__xsReverseCancel___3qDNC TDS_Row-modules__smReverseCancel___VUTb9 TDS_Row-modules__mdReverseCancel___1MWfN TDS_Row-modules__lgReverseCancel___1Ngyt TDS_Row-modules__xlReverseCancel___16npr TDS_flexboxgrid2__row___3YyB2"
        >
          <div
            class="TDS_flexboxgrid2__col-xs___2KrHO TDS_Col-modules__xsVisible___yQn24 TDS_Col-modules__smVisible___3-waa TDS_Col-modules__mdVisible___wUg94 TDS_Col-modules__lgVisible___7FbXv TDS_Col-modules__xlVisible___1AW2r TDS_Col-modules__gutterless___11Fxy"
          >
            <hr
              class="c8"
            />
          </div>
        </div>
      </div>
      <div
        style="transform:translateY(1rem);transition:transform 150ms"
      >
        <div
          class="TDS_FlexGrid-modules__flexGrid___QxDgy TDS_FlexGrid-modules__limitWidth___2SDcu TDS_FlexGrid-modules__xsReverseCancel___20p12 TDS_FlexGrid-modules__smReverseCancel___-_YfQ TDS_FlexGrid-modules__mdReverseCancel___3cUDQ TDS_FlexGrid-modules__lgReverseCancel___1lfjg TDS_FlexGrid-modules__xlReverseCancel___OIqvi TDS_flexboxgrid2__container-fluid___3c7kO"
        >
          <div
            class="TDS_Row-modules__flexRow___3CHOR TDS_Row-modules__xsReverseCancel___3qDNC TDS_Row-modules__smReverseCancel___VUTb9 TDS_Row-modules__mdReverseCancel___1MWfN TDS_Row-modules__lgReverseCancel___1Ngyt TDS_Row-modules__xlReverseCancel___16npr TDS_flexboxgrid2__row___3YyB2"
          >
            <div
              class="TDS_flexboxgrid2__col-xs-12___3Q9tF TDS_flexboxgrid2__col-md-offset-1___1P1Ln TDS_flexboxgrid2__col-md-10___7fKo2 TDS_Col-modules__xsVisible___yQn24 TDS_Col-modules__smVisible___3-waa TDS_Col-modules__mdVisible___wUg94 TDS_Col-modules__lgVisible___7FbXv TDS_Col-modules__xlVisible___1AW2r TDS_Col-modules__padding___2tLQS"
            >
              <ol
                class="c9 sc-htpNat c9 c10"
                type="indexed"
              >
                <li
                  class="c11"
                >
                  One
                </li>
                <li
                  class="c11"
                >
                  Two
                </li>
                <li
                  class="c11"
                >
                  Three
                </li>
              </ol>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <hr
    class="c0"
  />
</div>
`;

exports[`TermsAndConditions renders expanded 1`] = `
.c0 {
  padding: 0;
  margin: 0;
  border-width: 0;
  -webkit-transform: rotate(-0.00001deg);
  -ms-transform: rotate(-0.00001deg);
  transform: rotate(-0.00001deg);
  width: 100%;
  height: 1px;
  background-color: #d8d8d8;
}

.c8 {
  padding: 0;
  margin: 0;
  border-width: 0;
  height: 32px;
  background-image: radial-gradient(ellipse at top,rgba(150,150,150,0.1) 0%,rgba(0,0,0,0) 70%);
}

.c7 {
  word-wrap: break-word;
  color: #2a2c2e;
  font-weight: 700;
  font-size: 1rem;
  line-height: 1.25;
  -webkit-letter-spacing: -0.6px;
  -moz-letter-spacing: -0.6px;
  -ms-letter-spacing: -0.6px;
  letter-spacing: -0.6px;
}

.c7 .c13,
.c7 sup {
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
  font-size: 0.875rem;
  top: -0.5em;
}

.c4 {
  padding-top: 1rem;
  padding-bottom: 1rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c4 > *:not(:last-child) {
  margin-right: 1rem;
}

.c10 {
  margin-bottom: 1.5rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c10 > *:not(:last-child) {
  margin-bottom: 1rem;
}

.c2 {
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  background-color: #fff;
}

.c1:hover .c12 {
  -webkit-transform: translate(6px,2px);
  -ms-transform: translate(6px,2px);
  transform: translate(6px,2px);
}

.c6 {
  line-height: 24px;
  position: absolute;
  top: 0;
  left: 0;
  -webkit-transition: -webkit-transform 300ms;
  -webkit-transition: transform 300ms;
  transition: transform 300ms;
  -webkit-transform: translate(6px,-2px);
  -ms-transform: translate(6px,-2px);
  transform: translate(6px,-2px);
}

.c1:hover .c6 {
  -webkit-transform: translate(6px,-5px);
  -ms-transform: translate(6px,-5px);
  transform: translate(6px,-5px);
}

.c11 {
  padding-left: 1rem;
}

.c11 > span {
  font-weight: 500;
}

.c9 {
  word-wrap: break-word;
  font-weight: 700;
  font-size: 0.875rem;
  -webkit-letter-spacing: -0.6px;
  -moz-letter-spacing: -0.6px;
  -ms-letter-spacing: -0.6px;
  letter-spacing: -0.6px;
  line-height: 1.42857;
  padding-left: 2rem;
  list-style: decimal;
}

.c3 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c5 {
  position: relative;
  width: 24px;
  height: 24px;
}

@media (min-width:768px) {
  .c10 {
    margin-bottom: 2rem;
  }
}

@media (min-width:768px) {
  .c9 {
    padding-left: 1rem;
  }
}

<TermsAndConditions
  copy="en"
  indexedContent={
    Array [
      "One",
      "Two",
      "Three",
    ]
  }
  nonIndexedContent={Array []}
>
  <div>
    <HairlineDivider
      gradient={false}
      vertical={false}
    >
      <HairlineDivider__StyledHairlineDivider
        gradient={false}
        vertical={false}
      >
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "HairlineDivider__StyledHairlineDivider-biamlk-0",
                "isStatic": false,
                "lastClassName": "c0",
                "rules": Array [
                  "padding: 0;",
                  "margin: 0;",
                  "border-width: 0;",
                  [Function],
                ],
              },
              "displayName": "HairlineDivider__StyledHairlineDivider",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "HairlineDivider__StyledHairlineDivider-biamlk-0",
              "target": "hr",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          gradient={false}
          vertical={false}
        >
          <hr
            className="c0"
          />
        </StyledComponent>
      </HairlineDivider__StyledHairlineDivider>
    </HairlineDivider>
    <FlexGrid
      gutter={false}
      limitWidth={false}
    >
      <Broadcast
        channel="flex-grid"
        compareValues={[Function]}
        value={false}
      >
        <Grid
          className="TDS_FlexGrid-modules__flexGrid___QxDgy TDS_FlexGrid-modules__xsReverseCancel___20p12 TDS_FlexGrid-modules__smReverseCancel___-_YfQ TDS_FlexGrid-modules__mdReverseCancel___3cUDQ TDS_FlexGrid-modules__lgReverseCancel___1lfjg TDS_FlexGrid-modules__xlReverseCancel___OIqvi"
          fluid={true}
        >
          <div
            className="TDS_FlexGrid-modules__flexGrid___QxDgy TDS_FlexGrid-modules__xsReverseCancel___20p12 TDS_FlexGrid-modules__smReverseCancel___-_YfQ TDS_FlexGrid-modules__mdReverseCancel___3cUDQ TDS_FlexGrid-modules__lgReverseCancel___1lfjg TDS_FlexGrid-modules__xlReverseCancel___OIqvi TDS_flexboxgrid2__container-fluid___3c7kO"
          >
            <Row>
              <Row
                className="TDS_Row-modules__flexRow___3CHOR TDS_Row-modules__xsReverseCancel___3qDNC TDS_Row-modules__smReverseCancel___VUTb9 TDS_Row-modules__mdReverseCancel___1MWfN TDS_Row-modules__lgReverseCancel___1Ngyt TDS_Row-modules__xlReverseCancel___16npr"
              >
                <div
                  className="TDS_Row-modules__flexRow___3CHOR TDS_Row-modules__xsReverseCancel___3qDNC TDS_Row-modules__smReverseCancel___VUTb9 TDS_Row-modules__mdReverseCancel___1MWfN TDS_Row-modules__lgReverseCancel___1Ngyt TDS_Row-modules__xlReverseCancel___16npr TDS_flexboxgrid2__row___3YyB2"
                >
                  <Col>
                    <Subscriber
                      channel="flex-grid"
                      quiet={false}
                    >
                      <Col
                        className="TDS_Col-modules__xsVisible___yQn24 TDS_Col-modules__smVisible___3-waa TDS_Col-modules__mdVisible___wUg94 TDS_Col-modules__lgVisible___7FbXv TDS_Col-modules__xlVisible___1AW2r TDS_Col-modules__gutterless___11Fxy"
                        xs={true}
                      >
                        <div
                          className="TDS_flexboxgrid2__col-xs___2KrHO TDS_Col-modules__xsVisible___yQn24 TDS_Col-modules__smVisible___3-waa TDS_Col-modules__mdVisible___wUg94 TDS_Col-modules__lgVisible___7FbXv TDS_Col-modules__xlVisible___1AW2r TDS_Col-modules__gutterless___11Fxy"
                        >
                          <Styled(Clickable)
                            onClick={[Function]}
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c1",
                                    "isStatic": true,
                                    "lastClassName": "c2",
                                    "rules": Array [
                                      "width: 100%;",
                                      "display: flex;",
                                      "justify-content: center;",
                                      "background-color: #fff;",
                                    ],
                                  },
                                  "displayName": "Styled(Clickable)",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c1",
                                  "target": [Function],
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              onClick={[Function]}
                            >
                              <Clickable
                                className="c1 c2"
                                onClick={[Function]}
                                type="button"
                              >
                                <button
                                  className="clickable c1 c2"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <Styled(Box)
                                    between={3}
                                    inline={true}
                                    vertical={3}
                                  >
                                    <StyledComponent
                                      between={3}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-bxivhb",
                                            "isStatic": true,
                                            "lastClassName": "c3",
                                            "rules": Array [
                                              "align-items: center;",
                                            ],
                                          },
                                          "displayName": "Styled(Box)",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-bxivhb",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      inline={true}
                                      vertical={3}
                                    >
                                      <Box
                                        between={3}
                                        className="c3"
                                        inline={true}
                                        tag="div"
                                        vertical={3}
                                      >
                                        <styled.div
                                          between={3}
                                          className="c3"
                                          inline={true}
                                          tag="div"
                                          vertical={3}
                                        >
                                          <StyledComponent
                                            between={3}
                                            className="c3"
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [
                                                  [Function],
                                                ],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-bdVaJa",
                                                  "isStatic": false,
                                                  "lastClassName": "c10",
                                                  "rules": Array [
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-bdVaJa",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            inline={true}
                                            tag="div"
                                            vertical={3}
                                          >
                                            <div
                                              className="c3 sc-bxivhb c3 c4"
                                            >
                                              <TermsAndConditions__StyledChevronContainer>
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "TermsAndConditions__StyledChevronContainer-sc-1aoonet-0",
                                                        "isStatic": true,
                                                        "lastClassName": "c5",
                                                        "rules": Array [
                                                          "position: relative;",
                                                          "width: 24px;",
                                                          "height: 24px;",
                                                        ],
                                                      },
                                                      "displayName": "TermsAndConditions__StyledChevronContainer",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "TermsAndConditions__StyledChevronContainer-sc-1aoonet-0",
                                                      "target": "span",
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                >
                                                  <span
                                                    className="c5"
                                                  >
                                                    <Circle>
                                                      <svg
                                                        height="24px"
                                                        viewBox="0 0 24 24"
                                                        width="24px"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                        xmlnsXlink="http://www.w3.org/1999/xlink"
                                                      >
                                                        <path
                                                          d="M12,0 C5.373,0 0,5.373 0,12 C0,18.627 5.373,24 12,24 C18.627,24 24,18.627 24,12 C24,5.373 18.627,0 12,0 M12,1 C18.065,1 23,5.935 23,12 C23,18.065 18.065,23 12,23 C5.935,23 1,18.065 1,12 C1,5.935 5.935,1 12,1"
                                                          fill="#4b286d"
                                                        />
                                                      </svg>
                                                    </Circle>
                                                    <Chevron
                                                      isOpen={true}
                                                    >
                                                      <Chevron__StyledChevron
                                                        isOpen={true}
                                                      >
                                                        <StyledComponent
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "Chevron__StyledChevron-sc-17gl4qs-0",
                                                                "isStatic": false,
                                                                "lastClassName": "c6",
                                                                "rules": Array [
                                                                  [Function],
                                                                ],
                                                              },
                                                              "displayName": "Chevron__StyledChevron",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "Chevron__StyledChevron-sc-17gl4qs-0",
                                                              "target": "span",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          isOpen={true}
                                                        >
                                                          <span
                                                            className="c6"
                                                          >
                                                            <svg
                                                              height="8px"
                                                              viewBox="0 0 12 8"
                                                              width="12px"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                              xmlnsXlink="http://www.w3.org/1999/xlink"
                                                            >
                                                              <path
                                                                d="M11.7940812,0.183230226 C11.4424627,-0.117489399 11.0896181,0.0450442657 10.8868854,0.245275736 L5.99681615,4.74055299 L1.11722187,0.245275732 C0.93839231,0.0814520871 0.490533284,-0.180032793 0.165240429,0.183230232 C-0.160052425,0.546493257 0.0652096387,0.91610528 0.243271687,1.07992892 L5.6348225,6.87660266 C5.81365205,7.04113245 6.10607292,7.04113245 6.28490248,6.87660266 C6.28490248,6.87589653 11.7940809,1.07992896 11.7940809,1.07992896 C11.9792355,0.935042671 12.1456996,0.483949851 11.7940812,0.183230226 Z"
                                                                transform="rotate(180, 6, 4)"
                                                              />
                                                            </svg>
                                                          </span>
                                                        </StyledComponent>
                                                      </Chevron__StyledChevron>
                                                    </Chevron>
                                                  </span>
                                                </StyledComponent>
                                              </TermsAndConditions__StyledChevronContainer>
                                              <Heading
                                                invert={false}
                                                level="h4"
                                                tag="h2"
                                              >
                                                <Heading__StyledHeading
                                                  as="h2"
                                                  data-testid="heading"
                                                  invert={false}
                                                  level="h4"
                                                >
                                                  <StyledComponent
                                                    as="h2"
                                                    data-testid="heading"
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "Heading__StyledHeading-mpz92r-0",
                                                          "isStatic": false,
                                                          "lastClassName": "c7",
                                                          "rules": Array [
                                                            "word-wrap: break-word;",
                                                            [Function],
                                                          ],
                                                        },
                                                        "displayName": "Heading__StyledHeading",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "Heading__StyledHeading-mpz92r-0",
                                                        "target": "h1",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    invert={false}
                                                    level="h4"
                                                  >
                                                    <h2
                                                      className="c7"
                                                      data-testid="heading"
                                                    >
                                                      Hide terms and conditions
                                                    </h2>
                                                  </StyledComponent>
                                                </Heading__StyledHeading>
                                              </Heading>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </Box>
                                    </StyledComponent>
                                  </Styled(Box)>
                                </button>
                              </Clickable>
                            </StyledComponent>
                          </Styled(Clickable)>
                        </div>
                      </Col>
                    </Subscriber>
                  </Col>
                </div>
              </Row>
            </Row>
          </div>
        </Grid>
      </Broadcast>
    </FlexGrid>
    <FadeAndReveal
      delay={0}
      duration={150}
      height={0}
      in={true}
      timeout={150}
    >
      <Transition
        appear={false}
        duration={150}
        enter={true}
        exit={true}
        in={true}
        mountOnEnter={false}
        onEnter={[Function]}
        onEntered={[Function]}
        onEntering={[Function]}
        onExit={[Function]}
        onExited={[Function]}
        onExiting={[Function]}
        timeout={150}
        unmountOnExit={false}
      >
        <div
          style={
            Object {
              "height": 0,
              "opacity": 1,
              "overflow": "hidden",
              "transition": "height 150ms, opacity 150ms ease-in-out",
            }
          }
        >
          <div>
            <FlexGrid
              gutter={false}
              limitWidth={false}
            >
              <Broadcast
                channel="flex-grid"
                compareValues={[Function]}
                value={false}
              >
                <Grid
                  className="TDS_FlexGrid-modules__flexGrid___QxDgy TDS_FlexGrid-modules__xsReverseCancel___20p12 TDS_FlexGrid-modules__smReverseCancel___-_YfQ TDS_FlexGrid-modules__mdReverseCancel___3cUDQ TDS_FlexGrid-modules__lgReverseCancel___1lfjg TDS_FlexGrid-modules__xlReverseCancel___OIqvi"
                  fluid={true}
                >
                  <div
                    className="TDS_FlexGrid-modules__flexGrid___QxDgy TDS_FlexGrid-modules__xsReverseCancel___20p12 TDS_FlexGrid-modules__smReverseCancel___-_YfQ TDS_FlexGrid-modules__mdReverseCancel___3cUDQ TDS_FlexGrid-modules__lgReverseCancel___1lfjg TDS_FlexGrid-modules__xlReverseCancel___OIqvi TDS_flexboxgrid2__container-fluid___3c7kO"
                  >
                    <Row>
                      <Row
                        className="TDS_Row-modules__flexRow___3CHOR TDS_Row-modules__xsReverseCancel___3qDNC TDS_Row-modules__smReverseCancel___VUTb9 TDS_Row-modules__mdReverseCancel___1MWfN TDS_Row-modules__lgReverseCancel___1Ngyt TDS_Row-modules__xlReverseCancel___16npr"
                      >
                        <div
                          className="TDS_Row-modules__flexRow___3CHOR TDS_Row-modules__xsReverseCancel___3qDNC TDS_Row-modules__smReverseCancel___VUTb9 TDS_Row-modules__mdReverseCancel___1MWfN TDS_Row-modules__lgReverseCancel___1Ngyt TDS_Row-modules__xlReverseCancel___16npr TDS_flexboxgrid2__row___3YyB2"
                        >
                          <Col>
                            <Subscriber
                              channel="flex-grid"
                              quiet={false}
                            >
                              <Col
                                className="TDS_Col-modules__xsVisible___yQn24 TDS_Col-modules__smVisible___3-waa TDS_Col-modules__mdVisible___wUg94 TDS_Col-modules__lgVisible___7FbXv TDS_Col-modules__xlVisible___1AW2r TDS_Col-modules__gutterless___11Fxy"
                                xs={true}
                              >
                                <div
                                  className="TDS_flexboxgrid2__col-xs___2KrHO TDS_Col-modules__xsVisible___yQn24 TDS_Col-modules__smVisible___3-waa TDS_Col-modules__mdVisible___wUg94 TDS_Col-modules__lgVisible___7FbXv TDS_Col-modules__xlVisible___1AW2r TDS_Col-modules__gutterless___11Fxy"
                                >
                                  <DimpleDivider>
                                    <DimpleDivider__StyledDimpleDivider>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "DimpleDivider__StyledDimpleDivider-quxnvh-0",
                                              "isStatic": true,
                                              "lastClassName": "c8",
                                              "rules": Array [
                                                "padding: 0;",
                                                "margin: 0;",
                                                "border-width: 0;",
                                                "height: 32px;",
                                                "background-image: radial-gradient(ellipse at top, rgba(150, 150, 150, 0.1) 0%, rgba(0, 0, 0, 0) 70%);",
                                              ],
                                            },
                                            "displayName": "DimpleDivider__StyledDimpleDivider",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "DimpleDivider__StyledDimpleDivider-quxnvh-0",
                                            "target": "hr",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <hr
                                          className="c8"
                                        />
                                      </StyledComponent>
                                    </DimpleDivider__StyledDimpleDivider>
                                  </DimpleDivider>
                                </div>
                              </Col>
                            </Subscriber>
                          </Col>
                        </div>
                      </Row>
                    </Row>
                  </div>
                </Grid>
              </Broadcast>
            </FlexGrid>
            <Translate
              direction="y"
              distance="0rem"
              in={true}
              initialStyle={
                Object {
                  "transform": "translateY(1rem)",
                }
              }
              timeout={150}
            >
              <Transition
                appear={false}
                enter={true}
                exit={true}
                in={true}
                mountOnEnter={false}
                onEnter={[Function]}
                onEntered={[Function]}
                onEntering={[Function]}
                onExit={[Function]}
                onExited={[Function]}
                onExiting={[Function]}
                timeout={150}
                unmountOnExit={false}
              >
                <div
                  style={
                    Object {
                      "transform": "translateY(0rem)",
                      "transition": "transform 150ms",
                    }
                  }
                >
                  <FlexGrid
                    gutter={true}
                    limitWidth={true}
                  >
                    <Broadcast
                      channel="flex-grid"
                      compareValues={[Function]}
                      value={true}
                    >
                      <Grid
                        className="TDS_FlexGrid-modules__flexGrid___QxDgy TDS_FlexGrid-modules__limitWidth___2SDcu TDS_FlexGrid-modules__xsReverseCancel___20p12 TDS_FlexGrid-modules__smReverseCancel___-_YfQ TDS_FlexGrid-modules__mdReverseCancel___3cUDQ TDS_FlexGrid-modules__lgReverseCancel___1lfjg TDS_FlexGrid-modules__xlReverseCancel___OIqvi"
                        fluid={true}
                      >
                        <div
                          className="TDS_FlexGrid-modules__flexGrid___QxDgy TDS_FlexGrid-modules__limitWidth___2SDcu TDS_FlexGrid-modules__xsReverseCancel___20p12 TDS_FlexGrid-modules__smReverseCancel___-_YfQ TDS_FlexGrid-modules__mdReverseCancel___3cUDQ TDS_FlexGrid-modules__lgReverseCancel___1lfjg TDS_FlexGrid-modules__xlReverseCancel___OIqvi TDS_flexboxgrid2__container-fluid___3c7kO"
                        >
                          <Row>
                            <Row
                              className="TDS_Row-modules__flexRow___3CHOR TDS_Row-modules__xsReverseCancel___3qDNC TDS_Row-modules__smReverseCancel___VUTb9 TDS_Row-modules__mdReverseCancel___1MWfN TDS_Row-modules__lgReverseCancel___1Ngyt TDS_Row-modules__xlReverseCancel___16npr"
                            >
                              <div
                                className="TDS_Row-modules__flexRow___3CHOR TDS_Row-modules__xsReverseCancel___3qDNC TDS_Row-modules__smReverseCancel___VUTb9 TDS_Row-modules__mdReverseCancel___1MWfN TDS_Row-modules__lgReverseCancel___1Ngyt TDS_Row-modules__xlReverseCancel___16npr TDS_flexboxgrid2__row___3YyB2"
                              >
                                <Col
                                  md={10}
                                  mdOffset={1}
                                  xs={12}
                                >
                                  <Subscriber
                                    channel="flex-grid"
                                    quiet={false}
                                  >
                                    <Col
                                      className="TDS_Col-modules__xsVisible___yQn24 TDS_Col-modules__smVisible___3-waa TDS_Col-modules__mdVisible___wUg94 TDS_Col-modules__lgVisible___7FbXv TDS_Col-modules__xlVisible___1AW2r TDS_Col-modules__padding___2tLQS"
                                      md={10}
                                      mdOffset={1}
                                      xs={12}
                                    >
                                      <div
                                        className="TDS_flexboxgrid2__col-xs-12___3Q9tF TDS_flexboxgrid2__col-md-offset-1___1P1Ln TDS_flexboxgrid2__col-md-10___7fKo2 TDS_Col-modules__xsVisible___yQn24 TDS_Col-modules__smVisible___3-waa TDS_Col-modules__mdVisible___wUg94 TDS_Col-modules__lgVisible___7FbXv TDS_Col-modules__xlVisible___1AW2r TDS_Col-modules__padding___2tLQS"
                                      >
                                        <List
                                          below={4}
                                          size="small"
                                          styledComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-htpNat",
                                                "isStatic": false,
                                                "lastClassName": "c9",
                                                "rules": Array [
                                                  "word-wrap: break-word;",
                                                  "font-weight: 700;",
                                                  "font-size: 0.875rem;",
                                                  "letter-spacing: -0.6px;",
                                                  "line-height: 1.42857;",
                                                  "padding-left: 2rem;",
                                                  "@media (min-width: 768px) {",
                                                  "padding-left: 1rem;",
                                                  "}",
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "Styled(Box)",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "sc-htpNat",
                                              "target": [Function],
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          type="indexed"
                                        >
                                          <Styled(Box)
                                            below={4}
                                            between={3}
                                            size="small"
                                            tag="ol"
                                            type="indexed"
                                          >
                                            <StyledComponent
                                              below={4}
                                              between={3}
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-htpNat",
                                                    "isStatic": false,
                                                    "lastClassName": "c9",
                                                    "rules": Array [
                                                      "word-wrap: break-word;",
                                                      "font-weight: 700;",
                                                      "font-size: 0.875rem;",
                                                      "letter-spacing: -0.6px;",
                                                      "line-height: 1.42857;",
                                                      "padding-left: 2rem;",
                                                      "@media (min-width: 768px) {",
                                                      "padding-left: 1rem;",
                                                      "}",
                                                      [Function],
                                                    ],
                                                  },
                                                  "displayName": "Styled(Box)",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-htpNat",
                                                  "target": [Function],
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              size="small"
                                              tag="ol"
                                              type="indexed"
                                            >
                                              <Box
                                                below={4}
                                                between={3}
                                                className="c9"
                                                inline={false}
                                                size="small"
                                                tag="ol"
                                                type="indexed"
                                              >
                                                <styled.div
                                                  below={4}
                                                  between={3}
                                                  className="c9"
                                                  inline={false}
                                                  size="small"
                                                  tag="ol"
                                                  type="indexed"
                                                >
                                                  <StyledComponent
                                                    below={4}
                                                    between={3}
                                                    className="c9"
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [
                                                          [Function],
                                                        ],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-bdVaJa",
                                                          "isStatic": false,
                                                          "lastClassName": "c10",
                                                          "rules": Array [
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                          ],
                                                        },
                                                        "displayName": "styled.div",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bdVaJa",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    inline={false}
                                                    size="small"
                                                    tag="ol"
                                                    type="indexed"
                                                  >
                                                    <ol
                                                      className="c9 sc-htpNat c9 c10"
                                                      size="small"
                                                      type="indexed"
                                                    >
                                                      <Item
                                                        dangerouslySetInnerHTML={
                                                          Object {
                                                            "__html": "One",
                                                          }
                                                        }
                                                        key=".$One"
                                                        styledComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "List__StyledListItem-ju21tg-0",
                                                              "isStatic": true,
                                                              "lastClassName": "c11",
                                                              "rules": Array [
                                                                "& > span {",
                                                                "font-weight: 500;",
                                                                "}",
                                                                "padding-left: 1rem;",
                                                              ],
                                                            },
                                                            "displayName": "List__StyledListItem",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "List__StyledListItem-ju21tg-0",
                                                            "target": "li",
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                      >
                                                        <List__StyledListItem
                                                          dangerouslySetInnerHTML={
                                                            Object {
                                                              "__html": "One",
                                                            }
                                                          }
                                                        >
                                                          <StyledComponent
                                                            dangerouslySetInnerHTML={
                                                              Object {
                                                                "__html": "One",
                                                              }
                                                            }
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "List__StyledListItem-ju21tg-0",
                                                                  "isStatic": true,
                                                                  "lastClassName": "c11",
                                                                  "rules": Array [
                                                                    "& > span {",
                                                                    "font-weight: 500;",
                                                                    "}",
                                                                    "padding-left: 1rem;",
                                                                  ],
                                                                },
                                                                "displayName": "List__StyledListItem",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "List__StyledListItem-ju21tg-0",
                                                                "target": "li",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                          >
                                                            <li
                                                              className="c11"
                                                              dangerouslySetInnerHTML={
                                                                Object {
                                                                  "__html": "One",
                                                                }
                                                              }
                                                            />
                                                          </StyledComponent>
                                                        </List__StyledListItem>
                                                      </Item>
                                                      <Item
                                                        dangerouslySetInnerHTML={
                                                          Object {
                                                            "__html": "Two",
                                                          }
                                                        }
                                                        key=".$Two"
                                                        styledComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "List__StyledListItem-ju21tg-0",
                                                              "isStatic": true,
                                                              "lastClassName": "c11",
                                                              "rules": Array [
                                                                "& > span {",
                                                                "font-weight: 500;",
                                                                "}",
                                                                "padding-left: 1rem;",
                                                              ],
                                                            },
                                                            "displayName": "List__StyledListItem",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "List__StyledListItem-ju21tg-0",
                                                            "target": "li",
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                      >
                                                        <List__StyledListItem
                                                          dangerouslySetInnerHTML={
                                                            Object {
                                                              "__html": "Two",
                                                            }
                                                          }
                                                        >
                                                          <StyledComponent
                                                            dangerouslySetInnerHTML={
                                                              Object {
                                                                "__html": "Two",
                                                              }
                                                            }
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "List__StyledListItem-ju21tg-0",
                                                                  "isStatic": true,
                                                                  "lastClassName": "c11",
                                                                  "rules": Array [
                                                                    "& > span {",
                                                                    "font-weight: 500;",
                                                                    "}",
                                                                    "padding-left: 1rem;",
                                                                  ],
                                                                },
                                                                "displayName": "List__StyledListItem",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "List__StyledListItem-ju21tg-0",
                                                                "target": "li",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                          >
                                                            <li
                                                              className="c11"
                                                              dangerouslySetInnerHTML={
                                                                Object {
                                                                  "__html": "Two",
                                                                }
                                                              }
                                                            />
                                                          </StyledComponent>
                                                        </List__StyledListItem>
                                                      </Item>
                                                      <Item
                                                        dangerouslySetInnerHTML={
                                                          Object {
                                                            "__html": "Three",
                                                          }
                                                        }
                                                        key=".$Three"
                                                        styledComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "List__StyledListItem-ju21tg-0",
                                                              "isStatic": true,
                                                              "lastClassName": "c11",
                                                              "rules": Array [
                                                                "& > span {",
                                                                "font-weight: 500;",
                                                                "}",
                                                                "padding-left: 1rem;",
                                                              ],
                                                            },
                                                            "displayName": "List__StyledListItem",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "List__StyledListItem-ju21tg-0",
                                                            "target": "li",
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                      >
                                                        <List__StyledListItem
                                                          dangerouslySetInnerHTML={
                                                            Object {
                                                              "__html": "Three",
                                                            }
                                                          }
                                                        >
                                                          <StyledComponent
                                                            dangerouslySetInnerHTML={
                                                              Object {
                                                                "__html": "Three",
                                                              }
                                                            }
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "List__StyledListItem-ju21tg-0",
                                                                  "isStatic": true,
                                                                  "lastClassName": "c11",
                                                                  "rules": Array [
                                                                    "& > span {",
                                                                    "font-weight: 500;",
                                                                    "}",
                                                                    "padding-left: 1rem;",
                                                                  ],
                                                                },
                                                                "displayName": "List__StyledListItem",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "List__StyledListItem-ju21tg-0",
                                                                "target": "li",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                          >
                                                            <li
                                                              className="c11"
                                                              dangerouslySetInnerHTML={
                                                                Object {
                                                                  "__html": "Three",
                                                                }
                                                              }
                                                            />
                                                          </StyledComponent>
                                                        </List__StyledListItem>
                                                      </Item>
                                                    </ol>
                                                  </StyledComponent>
                                                </styled.div>
                                              </Box>
                                            </StyledComponent>
                                          </Styled(Box)>
                                        </List>
                                      </div>
                                    </Col>
                                  </Subscriber>
                                </Col>
                              </div>
                            </Row>
                          </Row>
                        </div>
                      </Grid>
                    </Broadcast>
                  </FlexGrid>
                </div>
              </Transition>
            </Translate>
          </div>
        </div>
      </Transition>
    </FadeAndReveal>
    <HairlineDivider
      gradient={false}
      vertical={false}
    >
      <HairlineDivider__StyledHairlineDivider
        gradient={false}
        vertical={false}
      >
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "HairlineDivider__StyledHairlineDivider-biamlk-0",
                "isStatic": false,
                "lastClassName": "c0",
                "rules": Array [
                  "padding: 0;",
                  "margin: 0;",
                  "border-width: 0;",
                  [Function],
                ],
              },
              "displayName": "HairlineDivider__StyledHairlineDivider",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "HairlineDivider__StyledHairlineDivider-biamlk-0",
              "target": "hr",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          gradient={false}
          vertical={false}
        >
          <hr
            className="c0"
          />
        </StyledComponent>
      </HairlineDivider__StyledHairlineDivider>
    </HairlineDivider>
  </div>
</TermsAndConditions>
`;

exports[`TermsAndConditions renders expanded with indexedContent and nonIndexedContent 1`] = `
.c0 {
  padding: 0;
  margin: 0;
  border-width: 0;
  -webkit-transform: rotate(-0.00001deg);
  -ms-transform: rotate(-0.00001deg);
  transform: rotate(-0.00001deg);
  width: 100%;
  height: 1px;
  background-color: #d8d8d8;
}

.c8 {
  padding: 0;
  margin: 0;
  border-width: 0;
  height: 32px;
  background-image: radial-gradient(ellipse at top,rgba(150,150,150,0.1) 0%,rgba(0,0,0,0) 70%);
}

.c7 {
  word-wrap: break-word;
  color: #2a2c2e;
  font-weight: 700;
  font-size: 1rem;
  line-height: 1.25;
  -webkit-letter-spacing: -0.6px;
  -moz-letter-spacing: -0.6px;
  -ms-letter-spacing: -0.6px;
  letter-spacing: -0.6px;
}

.c7 .c16,
.c7 sup {
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
  font-size: 0.875rem;
  top: -0.5em;
}

.c4 {
  padding-top: 1rem;
  padding-bottom: 1rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c4 > *:not(:last-child) {
  margin-right: 1rem;
}

.c10 {
  margin-bottom: 1.5rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c10 > *:not(:last-child) {
  margin-bottom: 1rem;
}

.c12 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c12 > *:not(:last-child) {
  margin-bottom: 1rem;
}

.c2 {
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  background-color: #fff;
}

.c1:hover .c15 {
  -webkit-transform: translate(6px,2px);
  -ms-transform: translate(6px,2px);
  transform: translate(6px,2px);
}

.c6 {
  line-height: 24px;
  position: absolute;
  top: 0;
  left: 0;
  -webkit-transition: -webkit-transform 300ms;
  -webkit-transition: transform 300ms;
  transition: transform 300ms;
  -webkit-transform: translate(6px,-2px);
  -ms-transform: translate(6px,-2px);
  transform: translate(6px,-2px);
}

.c1:hover .c6 {
  -webkit-transform: translate(6px,-5px);
  -ms-transform: translate(6px,-5px);
  transform: translate(6px,-5px);
}

.c11 {
  padding-left: 1rem;
}

.c11 > span {
  font-weight: 500;
}

.c9 {
  word-wrap: break-word;
  font-weight: 700;
  font-size: 0.875rem;
  -webkit-letter-spacing: -0.6px;
  -moz-letter-spacing: -0.6px;
  -ms-letter-spacing: -0.6px;
  letter-spacing: -0.6px;
  line-height: 1.42857;
  padding-left: 2rem;
  list-style: decimal;
}

.c14 {
  word-wrap: break-word;
  font-weight: 700;
  font-size: 0.875rem;
  -webkit-letter-spacing: -0.6px;
  -moz-letter-spacing: -0.6px;
  -ms-letter-spacing: -0.6px;
  letter-spacing: -0.6px;
  line-height: 1.42857;
  padding-left: 2rem;
  list-style: none;
}

.c3 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c5 {
  position: relative;
  width: 24px;
  height: 24px;
}

.c13 {
  padding-left: 2rem;
}

@media (min-width:768px) {
  .c10 {
    margin-bottom: 2rem;
  }
}

@media (min-width:768px) {
  .c9 {
    padding-left: 1rem;
  }
}

@media (min-width:768px) {
  .c14 {
    padding-left: 1rem;
  }
}

<TermsAndConditions
  copy="en"
  indexedContent={
    Array [
      "One",
      "Two",
      "Three",
    ]
  }
  nonIndexedContent={
    Array [
      "Four",
      "Five",
    ]
  }
>
  <div>
    <HairlineDivider
      gradient={false}
      vertical={false}
    >
      <HairlineDivider__StyledHairlineDivider
        gradient={false}
        vertical={false}
      >
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "HairlineDivider__StyledHairlineDivider-biamlk-0",
                "isStatic": false,
                "lastClassName": "c0",
                "rules": Array [
                  "padding: 0;",
                  "margin: 0;",
                  "border-width: 0;",
                  [Function],
                ],
              },
              "displayName": "HairlineDivider__StyledHairlineDivider",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "HairlineDivider__StyledHairlineDivider-biamlk-0",
              "target": "hr",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          gradient={false}
          vertical={false}
        >
          <hr
            className="c0"
          />
        </StyledComponent>
      </HairlineDivider__StyledHairlineDivider>
    </HairlineDivider>
    <FlexGrid
      gutter={false}
      limitWidth={false}
    >
      <Broadcast
        channel="flex-grid"
        compareValues={[Function]}
        value={false}
      >
        <Grid
          className="TDS_FlexGrid-modules__flexGrid___QxDgy TDS_FlexGrid-modules__xsReverseCancel___20p12 TDS_FlexGrid-modules__smReverseCancel___-_YfQ TDS_FlexGrid-modules__mdReverseCancel___3cUDQ TDS_FlexGrid-modules__lgReverseCancel___1lfjg TDS_FlexGrid-modules__xlReverseCancel___OIqvi"
          fluid={true}
        >
          <div
            className="TDS_FlexGrid-modules__flexGrid___QxDgy TDS_FlexGrid-modules__xsReverseCancel___20p12 TDS_FlexGrid-modules__smReverseCancel___-_YfQ TDS_FlexGrid-modules__mdReverseCancel___3cUDQ TDS_FlexGrid-modules__lgReverseCancel___1lfjg TDS_FlexGrid-modules__xlReverseCancel___OIqvi TDS_flexboxgrid2__container-fluid___3c7kO"
          >
            <Row>
              <Row
                className="TDS_Row-modules__flexRow___3CHOR TDS_Row-modules__xsReverseCancel___3qDNC TDS_Row-modules__smReverseCancel___VUTb9 TDS_Row-modules__mdReverseCancel___1MWfN TDS_Row-modules__lgReverseCancel___1Ngyt TDS_Row-modules__xlReverseCancel___16npr"
              >
                <div
                  className="TDS_Row-modules__flexRow___3CHOR TDS_Row-modules__xsReverseCancel___3qDNC TDS_Row-modules__smReverseCancel___VUTb9 TDS_Row-modules__mdReverseCancel___1MWfN TDS_Row-modules__lgReverseCancel___1Ngyt TDS_Row-modules__xlReverseCancel___16npr TDS_flexboxgrid2__row___3YyB2"
                >
                  <Col>
                    <Subscriber
                      channel="flex-grid"
                      quiet={false}
                    >
                      <Col
                        className="TDS_Col-modules__xsVisible___yQn24 TDS_Col-modules__smVisible___3-waa TDS_Col-modules__mdVisible___wUg94 TDS_Col-modules__lgVisible___7FbXv TDS_Col-modules__xlVisible___1AW2r TDS_Col-modules__gutterless___11Fxy"
                        xs={true}
                      >
                        <div
                          className="TDS_flexboxgrid2__col-xs___2KrHO TDS_Col-modules__xsVisible___yQn24 TDS_Col-modules__smVisible___3-waa TDS_Col-modules__mdVisible___wUg94 TDS_Col-modules__lgVisible___7FbXv TDS_Col-modules__xlVisible___1AW2r TDS_Col-modules__gutterless___11Fxy"
                        >
                          <Styled(Clickable)
                            onClick={[Function]}
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c1",
                                    "isStatic": true,
                                    "lastClassName": "c2",
                                    "rules": Array [
                                      "width: 100%;",
                                      "display: flex;",
                                      "justify-content: center;",
                                      "background-color: #fff;",
                                    ],
                                  },
                                  "displayName": "Styled(Clickable)",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c1",
                                  "target": [Function],
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              onClick={[Function]}
                            >
                              <Clickable
                                className="c1 c2"
                                onClick={[Function]}
                                type="button"
                              >
                                <button
                                  className="clickable c1 c2"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <Styled(Box)
                                    between={3}
                                    inline={true}
                                    vertical={3}
                                  >
                                    <StyledComponent
                                      between={3}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-bxivhb",
                                            "isStatic": true,
                                            "lastClassName": "c3",
                                            "rules": Array [
                                              "align-items: center;",
                                            ],
                                          },
                                          "displayName": "Styled(Box)",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-bxivhb",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      inline={true}
                                      vertical={3}
                                    >
                                      <Box
                                        between={3}
                                        className="c3"
                                        inline={true}
                                        tag="div"
                                        vertical={3}
                                      >
                                        <styled.div
                                          between={3}
                                          className="c3"
                                          inline={true}
                                          tag="div"
                                          vertical={3}
                                        >
                                          <StyledComponent
                                            between={3}
                                            className="c3"
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [
                                                  [Function],
                                                ],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-bdVaJa",
                                                  "isStatic": false,
                                                  "lastClassName": "c10",
                                                  "rules": Array [
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-bdVaJa",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            inline={true}
                                            tag="div"
                                            vertical={3}
                                          >
                                            <div
                                              className="c3 sc-bxivhb c3 c4"
                                            >
                                              <TermsAndConditions__StyledChevronContainer>
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "TermsAndConditions__StyledChevronContainer-sc-1aoonet-0",
                                                        "isStatic": true,
                                                        "lastClassName": "c5",
                                                        "rules": Array [
                                                          "position: relative;",
                                                          "width: 24px;",
                                                          "height: 24px;",
                                                        ],
                                                      },
                                                      "displayName": "TermsAndConditions__StyledChevronContainer",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "TermsAndConditions__StyledChevronContainer-sc-1aoonet-0",
                                                      "target": "span",
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                >
                                                  <span
                                                    className="c5"
                                                  >
                                                    <Circle>
                                                      <svg
                                                        height="24px"
                                                        viewBox="0 0 24 24"
                                                        width="24px"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                        xmlnsXlink="http://www.w3.org/1999/xlink"
                                                      >
                                                        <path
                                                          d="M12,0 C5.373,0 0,5.373 0,12 C0,18.627 5.373,24 12,24 C18.627,24 24,18.627 24,12 C24,5.373 18.627,0 12,0 M12,1 C18.065,1 23,5.935 23,12 C23,18.065 18.065,23 12,23 C5.935,23 1,18.065 1,12 C1,5.935 5.935,1 12,1"
                                                          fill="#4b286d"
                                                        />
                                                      </svg>
                                                    </Circle>
                                                    <Chevron
                                                      isOpen={true}
                                                    >
                                                      <Chevron__StyledChevron
                                                        isOpen={true}
                                                      >
                                                        <StyledComponent
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "Chevron__StyledChevron-sc-17gl4qs-0",
                                                                "isStatic": false,
                                                                "lastClassName": "c6",
                                                                "rules": Array [
                                                                  [Function],
                                                                ],
                                                              },
                                                              "displayName": "Chevron__StyledChevron",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "Chevron__StyledChevron-sc-17gl4qs-0",
                                                              "target": "span",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          isOpen={true}
                                                        >
                                                          <span
                                                            className="c6"
                                                          >
                                                            <svg
                                                              height="8px"
                                                              viewBox="0 0 12 8"
                                                              width="12px"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                              xmlnsXlink="http://www.w3.org/1999/xlink"
                                                            >
                                                              <path
                                                                d="M11.7940812,0.183230226 C11.4424627,-0.117489399 11.0896181,0.0450442657 10.8868854,0.245275736 L5.99681615,4.74055299 L1.11722187,0.245275732 C0.93839231,0.0814520871 0.490533284,-0.180032793 0.165240429,0.183230232 C-0.160052425,0.546493257 0.0652096387,0.91610528 0.243271687,1.07992892 L5.6348225,6.87660266 C5.81365205,7.04113245 6.10607292,7.04113245 6.28490248,6.87660266 C6.28490248,6.87589653 11.7940809,1.07992896 11.7940809,1.07992896 C11.9792355,0.935042671 12.1456996,0.483949851 11.7940812,0.183230226 Z"
                                                                transform="rotate(180, 6, 4)"
                                                              />
                                                            </svg>
                                                          </span>
                                                        </StyledComponent>
                                                      </Chevron__StyledChevron>
                                                    </Chevron>
                                                  </span>
                                                </StyledComponent>
                                              </TermsAndConditions__StyledChevronContainer>
                                              <Heading
                                                invert={false}
                                                level="h4"
                                                tag="h2"
                                              >
                                                <Heading__StyledHeading
                                                  as="h2"
                                                  data-testid="heading"
                                                  invert={false}
                                                  level="h4"
                                                >
                                                  <StyledComponent
                                                    as="h2"
                                                    data-testid="heading"
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "Heading__StyledHeading-mpz92r-0",
                                                          "isStatic": false,
                                                          "lastClassName": "c7",
                                                          "rules": Array [
                                                            "word-wrap: break-word;",
                                                            [Function],
                                                          ],
                                                        },
                                                        "displayName": "Heading__StyledHeading",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "Heading__StyledHeading-mpz92r-0",
                                                        "target": "h1",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    invert={false}
                                                    level="h4"
                                                  >
                                                    <h2
                                                      className="c7"
                                                      data-testid="heading"
                                                    >
                                                      Hide terms and conditions
                                                    </h2>
                                                  </StyledComponent>
                                                </Heading__StyledHeading>
                                              </Heading>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </Box>
                                    </StyledComponent>
                                  </Styled(Box)>
                                </button>
                              </Clickable>
                            </StyledComponent>
                          </Styled(Clickable)>
                        </div>
                      </Col>
                    </Subscriber>
                  </Col>
                </div>
              </Row>
            </Row>
          </div>
        </Grid>
      </Broadcast>
    </FlexGrid>
    <FadeAndReveal
      delay={0}
      duration={150}
      height={0}
      in={true}
      timeout={150}
    >
      <Transition
        appear={false}
        duration={150}
        enter={true}
        exit={true}
        in={true}
        mountOnEnter={false}
        onEnter={[Function]}
        onEntered={[Function]}
        onEntering={[Function]}
        onExit={[Function]}
        onExited={[Function]}
        onExiting={[Function]}
        timeout={150}
        unmountOnExit={false}
      >
        <div
          style={
            Object {
              "height": 0,
              "opacity": 1,
              "overflow": "hidden",
              "transition": "height 150ms, opacity 150ms ease-in-out",
            }
          }
        >
          <div>
            <FlexGrid
              gutter={false}
              limitWidth={false}
            >
              <Broadcast
                channel="flex-grid"
                compareValues={[Function]}
                value={false}
              >
                <Grid
                  className="TDS_FlexGrid-modules__flexGrid___QxDgy TDS_FlexGrid-modules__xsReverseCancel___20p12 TDS_FlexGrid-modules__smReverseCancel___-_YfQ TDS_FlexGrid-modules__mdReverseCancel___3cUDQ TDS_FlexGrid-modules__lgReverseCancel___1lfjg TDS_FlexGrid-modules__xlReverseCancel___OIqvi"
                  fluid={true}
                >
                  <div
                    className="TDS_FlexGrid-modules__flexGrid___QxDgy TDS_FlexGrid-modules__xsReverseCancel___20p12 TDS_FlexGrid-modules__smReverseCancel___-_YfQ TDS_FlexGrid-modules__mdReverseCancel___3cUDQ TDS_FlexGrid-modules__lgReverseCancel___1lfjg TDS_FlexGrid-modules__xlReverseCancel___OIqvi TDS_flexboxgrid2__container-fluid___3c7kO"
                  >
                    <Row>
                      <Row
                        className="TDS_Row-modules__flexRow___3CHOR TDS_Row-modules__xsReverseCancel___3qDNC TDS_Row-modules__smReverseCancel___VUTb9 TDS_Row-modules__mdReverseCancel___1MWfN TDS_Row-modules__lgReverseCancel___1Ngyt TDS_Row-modules__xlReverseCancel___16npr"
                      >
                        <div
                          className="TDS_Row-modules__flexRow___3CHOR TDS_Row-modules__xsReverseCancel___3qDNC TDS_Row-modules__smReverseCancel___VUTb9 TDS_Row-modules__mdReverseCancel___1MWfN TDS_Row-modules__lgReverseCancel___1Ngyt TDS_Row-modules__xlReverseCancel___16npr TDS_flexboxgrid2__row___3YyB2"
                        >
                          <Col>
                            <Subscriber
                              channel="flex-grid"
                              quiet={false}
                            >
                              <Col
                                className="TDS_Col-modules__xsVisible___yQn24 TDS_Col-modules__smVisible___3-waa TDS_Col-modules__mdVisible___wUg94 TDS_Col-modules__lgVisible___7FbXv TDS_Col-modules__xlVisible___1AW2r TDS_Col-modules__gutterless___11Fxy"
                                xs={true}
                              >
                                <div
                                  className="TDS_flexboxgrid2__col-xs___2KrHO TDS_Col-modules__xsVisible___yQn24 TDS_Col-modules__smVisible___3-waa TDS_Col-modules__mdVisible___wUg94 TDS_Col-modules__lgVisible___7FbXv TDS_Col-modules__xlVisible___1AW2r TDS_Col-modules__gutterless___11Fxy"
                                >
                                  <DimpleDivider>
                                    <DimpleDivider__StyledDimpleDivider>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "DimpleDivider__StyledDimpleDivider-quxnvh-0",
                                              "isStatic": true,
                                              "lastClassName": "c8",
                                              "rules": Array [
                                                "padding: 0;",
                                                "margin: 0;",
                                                "border-width: 0;",
                                                "height: 32px;",
                                                "background-image: radial-gradient(ellipse at top, rgba(150, 150, 150, 0.1) 0%, rgba(0, 0, 0, 0) 70%);",
                                              ],
                                            },
                                            "displayName": "DimpleDivider__StyledDimpleDivider",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "DimpleDivider__StyledDimpleDivider-quxnvh-0",
                                            "target": "hr",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <hr
                                          className="c8"
                                        />
                                      </StyledComponent>
                                    </DimpleDivider__StyledDimpleDivider>
                                  </DimpleDivider>
                                </div>
                              </Col>
                            </Subscriber>
                          </Col>
                        </div>
                      </Row>
                    </Row>
                  </div>
                </Grid>
              </Broadcast>
            </FlexGrid>
            <Translate
              direction="y"
              distance="0rem"
              in={true}
              initialStyle={
                Object {
                  "transform": "translateY(1rem)",
                }
              }
              timeout={150}
            >
              <Transition
                appear={false}
                enter={true}
                exit={true}
                in={true}
                mountOnEnter={false}
                onEnter={[Function]}
                onEntered={[Function]}
                onEntering={[Function]}
                onExit={[Function]}
                onExited={[Function]}
                onExiting={[Function]}
                timeout={150}
                unmountOnExit={false}
              >
                <div
                  style={
                    Object {
                      "transform": "translateY(0rem)",
                      "transition": "transform 150ms",
                    }
                  }
                >
                  <FlexGrid
                    gutter={true}
                    limitWidth={true}
                  >
                    <Broadcast
                      channel="flex-grid"
                      compareValues={[Function]}
                      value={true}
                    >
                      <Grid
                        className="TDS_FlexGrid-modules__flexGrid___QxDgy TDS_FlexGrid-modules__limitWidth___2SDcu TDS_FlexGrid-modules__xsReverseCancel___20p12 TDS_FlexGrid-modules__smReverseCancel___-_YfQ TDS_FlexGrid-modules__mdReverseCancel___3cUDQ TDS_FlexGrid-modules__lgReverseCancel___1lfjg TDS_FlexGrid-modules__xlReverseCancel___OIqvi"
                        fluid={true}
                      >
                        <div
                          className="TDS_FlexGrid-modules__flexGrid___QxDgy TDS_FlexGrid-modules__limitWidth___2SDcu TDS_FlexGrid-modules__xsReverseCancel___20p12 TDS_FlexGrid-modules__smReverseCancel___-_YfQ TDS_FlexGrid-modules__mdReverseCancel___3cUDQ TDS_FlexGrid-modules__lgReverseCancel___1lfjg TDS_FlexGrid-modules__xlReverseCancel___OIqvi TDS_flexboxgrid2__container-fluid___3c7kO"
                        >
                          <Row>
                            <Row
                              className="TDS_Row-modules__flexRow___3CHOR TDS_Row-modules__xsReverseCancel___3qDNC TDS_Row-modules__smReverseCancel___VUTb9 TDS_Row-modules__mdReverseCancel___1MWfN TDS_Row-modules__lgReverseCancel___1Ngyt TDS_Row-modules__xlReverseCancel___16npr"
                            >
                              <div
                                className="TDS_Row-modules__flexRow___3CHOR TDS_Row-modules__xsReverseCancel___3qDNC TDS_Row-modules__smReverseCancel___VUTb9 TDS_Row-modules__mdReverseCancel___1MWfN TDS_Row-modules__lgReverseCancel___1Ngyt TDS_Row-modules__xlReverseCancel___16npr TDS_flexboxgrid2__row___3YyB2"
                              >
                                <Col
                                  md={10}
                                  mdOffset={1}
                                  xs={12}
                                >
                                  <Subscriber
                                    channel="flex-grid"
                                    quiet={false}
                                  >
                                    <Col
                                      className="TDS_Col-modules__xsVisible___yQn24 TDS_Col-modules__smVisible___3-waa TDS_Col-modules__mdVisible___wUg94 TDS_Col-modules__lgVisible___7FbXv TDS_Col-modules__xlVisible___1AW2r TDS_Col-modules__padding___2tLQS"
                                      md={10}
                                      mdOffset={1}
                                      xs={12}
                                    >
                                      <div
                                        className="TDS_flexboxgrid2__col-xs-12___3Q9tF TDS_flexboxgrid2__col-md-offset-1___1P1Ln TDS_flexboxgrid2__col-md-10___7fKo2 TDS_Col-modules__xsVisible___yQn24 TDS_Col-modules__smVisible___3-waa TDS_Col-modules__mdVisible___wUg94 TDS_Col-modules__lgVisible___7FbXv TDS_Col-modules__xlVisible___1AW2r TDS_Col-modules__padding___2tLQS"
                                      >
                                        <List
                                          below={4}
                                          size="small"
                                          styledComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "sc-htpNat",
                                                "isStatic": false,
                                                "lastClassName": "c14",
                                                "rules": Array [
                                                  "word-wrap: break-word;",
                                                  "font-weight: 700;",
                                                  "font-size: 0.875rem;",
                                                  "letter-spacing: -0.6px;",
                                                  "line-height: 1.42857;",
                                                  "padding-left: 2rem;",
                                                  "@media (min-width: 768px) {",
                                                  "padding-left: 1rem;",
                                                  "}",
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "Styled(Box)",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "sc-htpNat",
                                              "target": [Function],
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          type="indexed"
                                        >
                                          <Styled(Box)
                                            below={4}
                                            between={3}
                                            size="small"
                                            tag="ol"
                                            type="indexed"
                                          >
                                            <StyledComponent
                                              below={4}
                                              between={3}
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-htpNat",
                                                    "isStatic": false,
                                                    "lastClassName": "c14",
                                                    "rules": Array [
                                                      "word-wrap: break-word;",
                                                      "font-weight: 700;",
                                                      "font-size: 0.875rem;",
                                                      "letter-spacing: -0.6px;",
                                                      "line-height: 1.42857;",
                                                      "padding-left: 2rem;",
                                                      "@media (min-width: 768px) {",
                                                      "padding-left: 1rem;",
                                                      "}",
                                                      [Function],
                                                    ],
                                                  },
                                                  "displayName": "Styled(Box)",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-htpNat",
                                                  "target": [Function],
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              size="small"
                                              tag="ol"
                                              type="indexed"
                                            >
                                              <Box
                                                below={4}
                                                between={3}
                                                className="c9"
                                                inline={false}
                                                size="small"
                                                tag="ol"
                                                type="indexed"
                                              >
                                                <styled.div
                                                  below={4}
                                                  between={3}
                                                  className="c9"
                                                  inline={false}
                                                  size="small"
                                                  tag="ol"
                                                  type="indexed"
                                                >
                                                  <StyledComponent
                                                    below={4}
                                                    between={3}
                                                    className="c9"
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [
                                                          [Function],
                                                        ],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-bdVaJa",
                                                          "isStatic": false,
                                                          "lastClassName": "c10",
                                                          "rules": Array [
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                            [Function],
                                                          ],
                                                        },
                                                        "displayName": "styled.div",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-bdVaJa",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    inline={false}
                                                    size="small"
                                                    tag="ol"
                                                    type="indexed"
                                                  >
                                                    <ol
                                                      className="c9 sc-htpNat c9 c10"
                                                      size="small"
                                                      type="indexed"
                                                    >
                                                      <Item
                                                        dangerouslySetInnerHTML={
                                                          Object {
                                                            "__html": "One",
                                                          }
                                                        }
                                                        key=".$One"
                                                        styledComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "List__StyledListItem-ju21tg-0",
                                                              "isStatic": true,
                                                              "lastClassName": "c11",
                                                              "rules": Array [
                                                                "& > span {",
                                                                "font-weight: 500;",
                                                                "}",
                                                                "padding-left: 1rem;",
                                                              ],
                                                            },
                                                            "displayName": "List__StyledListItem",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "List__StyledListItem-ju21tg-0",
                                                            "target": "li",
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                      >
                                                        <List__StyledListItem
                                                          dangerouslySetInnerHTML={
                                                            Object {
                                                              "__html": "One",
                                                            }
                                                          }
                                                        >
                                                          <StyledComponent
                                                            dangerouslySetInnerHTML={
                                                              Object {
                                                                "__html": "One",
                                                              }
                                                            }
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "List__StyledListItem-ju21tg-0",
                                                                  "isStatic": true,
                                                                  "lastClassName": "c11",
                                                                  "rules": Array [
                                                                    "& > span {",
                                                                    "font-weight: 500;",
                                                                    "}",
                                                                    "padding-left: 1rem;",
                                                                  ],
                                                                },
                                                                "displayName": "List__StyledListItem",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "List__StyledListItem-ju21tg-0",
                                                                "target": "li",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                          >
                                                            <li
                                                              className="c11"
                                                              dangerouslySetInnerHTML={
                                                                Object {
                                                                  "__html": "One",
                                                                }
                                                              }
                                                            />
                                                          </StyledComponent>
                                                        </List__StyledListItem>
                                                      </Item>
                                                      <Item
                                                        dangerouslySetInnerHTML={
                                                          Object {
                                                            "__html": "Two",
                                                          }
                                                        }
                                                        key=".$Two"
                                                        styledComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "List__StyledListItem-ju21tg-0",
                                                              "isStatic": true,
                                                              "lastClassName": "c11",
                                                              "rules": Array [
                                                                "& > span {",
                                                                "font-weight: 500;",
                                                                "}",
                                                                "padding-left: 1rem;",
                                                              ],
                                                            },
                                                            "displayName": "List__StyledListItem",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "List__StyledListItem-ju21tg-0",
                                                            "target": "li",
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                      >
                                                        <List__StyledListItem
                                                          dangerouslySetInnerHTML={
                                                            Object {
                                                              "__html": "Two",
                                                            }
                                                          }
                                                        >
                                                          <StyledComponent
                                                            dangerouslySetInnerHTML={
                                                              Object {
                                                                "__html": "Two",
                                                              }
                                                            }
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "List__StyledListItem-ju21tg-0",
                                                                  "isStatic": true,
                                                                  "lastClassName": "c11",
                                                                  "rules": Array [
                                                                    "& > span {",
                                                                    "font-weight: 500;",
                                                                    "}",
                                                                    "padding-left: 1rem;",
                                                                  ],
                                                                },
                                                                "displayName": "List__StyledListItem",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "List__StyledListItem-ju21tg-0",
                                                                "target": "li",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                          >
                                                            <li
                                                              className="c11"
                                                              dangerouslySetInnerHTML={
                                                                Object {
                                                                  "__html": "Two",
                                                                }
                                                              }
                                                            />
                                                          </StyledComponent>
                                                        </List__StyledListItem>
                                                      </Item>
                                                      <Item
                                                        dangerouslySetInnerHTML={
                                                          Object {
                                                            "__html": "Three",
                                                          }
                                                        }
                                                        key=".$Three"
                                                        styledComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "List__StyledListItem-ju21tg-0",
                                                              "isStatic": true,
                                                              "lastClassName": "c11",
                                                              "rules": Array [
                                                                "& > span {",
                                                                "font-weight: 500;",
                                                                "}",
                                                                "padding-left: 1rem;",
                                                              ],
                                                            },
                                                            "displayName": "List__StyledListItem",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "List__StyledListItem-ju21tg-0",
                                                            "target": "li",
                                                            "toString": [Function],
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                      >
                                                        <List__StyledListItem
                                                          dangerouslySetInnerHTML={
                                                            Object {
                                                              "__html": "Three",
                                                            }
                                                          }
                                                        >
                                                          <StyledComponent
                                                            dangerouslySetInnerHTML={
                                                              Object {
                                                                "__html": "Three",
                                                              }
                                                            }
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "List__StyledListItem-ju21tg-0",
                                                                  "isStatic": true,
                                                                  "lastClassName": "c11",
                                                                  "rules": Array [
                                                                    "& > span {",
                                                                    "font-weight: 500;",
                                                                    "}",
                                                                    "padding-left: 1rem;",
                                                                  ],
                                                                },
                                                                "displayName": "List__StyledListItem",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "List__StyledListItem-ju21tg-0",
                                                                "target": "li",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                          >
                                                            <li
                                                              className="c11"
                                                              dangerouslySetInnerHTML={
                                                                Object {
                                                                  "__html": "Three",
                                                                }
                                                              }
                                                            />
                                                          </StyledComponent>
                                                        </List__StyledListItem>
                                                      </Item>
                                                    </ol>
                                                  </StyledComponent>
                                                </styled.div>
                                              </Box>
                                            </StyledComponent>
                                          </Styled(Box)>
                                        </List>
                                      </div>
                                    </Col>
                                  </Subscriber>
                                </Col>
                              </div>
                            </Row>
                          </Row>
                        </div>
                      </Grid>
                    </Broadcast>
                  </FlexGrid>
                  <FlexGrid
                    gutter={true}
                    limitWidth={true}
                  >
                    <Broadcast
                      channel="flex-grid"
                      compareValues={[Function]}
                      value={true}
                    >
                      <Grid
                        className="TDS_FlexGrid-modules__flexGrid___QxDgy TDS_FlexGrid-modules__limitWidth___2SDcu TDS_FlexGrid-modules__xsReverseCancel___20p12 TDS_FlexGrid-modules__smReverseCancel___-_YfQ TDS_FlexGrid-modules__mdReverseCancel___3cUDQ TDS_FlexGrid-modules__lgReverseCancel___1lfjg TDS_FlexGrid-modules__xlReverseCancel___OIqvi"
                        fluid={true}
                      >
                        <div
                          className="TDS_FlexGrid-modules__flexGrid___QxDgy TDS_FlexGrid-modules__limitWidth___2SDcu TDS_FlexGrid-modules__xsReverseCancel___20p12 TDS_FlexGrid-modules__smReverseCancel___-_YfQ TDS_FlexGrid-modules__mdReverseCancel___3cUDQ TDS_FlexGrid-modules__lgReverseCancel___1lfjg TDS_FlexGrid-modules__xlReverseCancel___OIqvi TDS_flexboxgrid2__container-fluid___3c7kO"
                        >
                          <Row>
                            <Row
                              className="TDS_Row-modules__flexRow___3CHOR TDS_Row-modules__xsReverseCancel___3qDNC TDS_Row-modules__smReverseCancel___VUTb9 TDS_Row-modules__mdReverseCancel___1MWfN TDS_Row-modules__lgReverseCancel___1Ngyt TDS_Row-modules__xlReverseCancel___16npr"
                            >
                              <div
                                className="TDS_Row-modules__flexRow___3CHOR TDS_Row-modules__xsReverseCancel___3qDNC TDS_Row-modules__smReverseCancel___VUTb9 TDS_Row-modules__mdReverseCancel___1MWfN TDS_Row-modules__lgReverseCancel___1Ngyt TDS_Row-modules__xlReverseCancel___16npr TDS_flexboxgrid2__row___3YyB2"
                              >
                                <Col
                                  md={10}
                                  mdOffset={1}
                                  xs={12}
                                >
                                  <Subscriber
                                    channel="flex-grid"
                                    quiet={false}
                                  >
                                    <Col
                                      className="TDS_Col-modules__xsVisible___yQn24 TDS_Col-modules__smVisible___3-waa TDS_Col-modules__mdVisible___wUg94 TDS_Col-modules__lgVisible___7FbXv TDS_Col-modules__xlVisible___1AW2r TDS_Col-modules__padding___2tLQS"
                                      md={10}
                                      mdOffset={1}
                                      xs={12}
                                    >
                                      <div
                                        className="TDS_flexboxgrid2__col-xs-12___3Q9tF TDS_flexboxgrid2__col-md-offset-1___1P1Ln TDS_flexboxgrid2__col-md-10___7fKo2 TDS_Col-modules__xsVisible___yQn24 TDS_Col-modules__smVisible___3-waa TDS_Col-modules__mdVisible___wUg94 TDS_Col-modules__lgVisible___7FbXv TDS_Col-modules__xlVisible___1AW2r TDS_Col-modules__padding___2tLQS"
                                      >
                                        <Box
                                          between={3}
                                          inline={false}
                                          tag="div"
                                        >
                                          <styled.div
                                            between={3}
                                            inline={false}
                                            tag="div"
                                          >
                                            <StyledComponent
                                              between={3}
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [
                                                    [Function],
                                                  ],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-bdVaJa",
                                                    "isStatic": false,
                                                    "lastClassName": "c10",
                                                    "rules": Array [
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                    ],
                                                  },
                                                  "displayName": "styled.div",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-bdVaJa",
                                                  "target": "div",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              inline={false}
                                              tag="div"
                                            >
                                              <div
                                                className="c12"
                                              >
                                                <styled.div
                                                  _css={
                                                    Object {
                                                      "paddingLeft": "2rem",
                                                    }
                                                  }
                                                >
                                                  <StyledComponent
                                                    _css={
                                                      Object {
                                                        "paddingLeft": "2rem",
                                                      }
                                                    }
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-ifAKCX",
                                                          "isStatic": false,
                                                          "lastClassName": "c13",
                                                          "rules": Array [
                                                            [Function],
                                                          ],
                                                        },
                                                        "displayName": "styled.div",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-ifAKCX",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                  >
                                                    <div
                                                      className="c13"
                                                    >
                                                      <Heading
                                                        invert={false}
                                                        level="h4"
                                                        tag="span"
                                                      >
                                                        <Heading__StyledHeading
                                                          as="span"
                                                          data-testid="heading"
                                                          invert={false}
                                                          level="h4"
                                                        >
                                                          <StyledComponent
                                                            as="span"
                                                            data-testid="heading"
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "Heading__StyledHeading-mpz92r-0",
                                                                  "isStatic": false,
                                                                  "lastClassName": "c7",
                                                                  "rules": Array [
                                                                    "word-wrap: break-word;",
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "displayName": "Heading__StyledHeading",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "Heading__StyledHeading-mpz92r-0",
                                                                "target": "h1",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                            invert={false}
                                                            level="h4"
                                                          >
                                                            <span
                                                              className="c7"
                                                              data-testid="heading"
                                                            >
                                                              The following applies to all terms and conditions above
                                                            </span>
                                                          </StyledComponent>
                                                        </Heading__StyledHeading>
                                                      </Heading>
                                                    </div>
                                                  </StyledComponent>
                                                </styled.div>
                                                <List
                                                  below={4}
                                                  size="small"
                                                  styledComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-htpNat",
                                                        "isStatic": false,
                                                        "lastClassName": "c14",
                                                        "rules": Array [
                                                          "word-wrap: break-word;",
                                                          "font-weight: 700;",
                                                          "font-size: 0.875rem;",
                                                          "letter-spacing: -0.6px;",
                                                          "line-height: 1.42857;",
                                                          "padding-left: 2rem;",
                                                          "@media (min-width: 768px) {",
                                                          "padding-left: 1rem;",
                                                          "}",
                                                          [Function],
                                                        ],
                                                      },
                                                      "displayName": "Styled(Box)",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-htpNat",
                                                      "target": [Function],
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  type="nonIndexed"
                                                >
                                                  <Styled(Box)
                                                    below={4}
                                                    between={3}
                                                    size="small"
                                                    tag="ul"
                                                    type="nonIndexed"
                                                  >
                                                    <StyledComponent
                                                      below={4}
                                                      between={3}
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "sc-htpNat",
                                                            "isStatic": false,
                                                            "lastClassName": "c14",
                                                            "rules": Array [
                                                              "word-wrap: break-word;",
                                                              "font-weight: 700;",
                                                              "font-size: 0.875rem;",
                                                              "letter-spacing: -0.6px;",
                                                              "line-height: 1.42857;",
                                                              "padding-left: 2rem;",
                                                              "@media (min-width: 768px) {",
                                                              "padding-left: 1rem;",
                                                              "}",
                                                              [Function],
                                                            ],
                                                          },
                                                          "displayName": "Styled(Box)",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "sc-htpNat",
                                                          "target": [Function],
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                      size="small"
                                                      tag="ul"
                                                      type="nonIndexed"
                                                    >
                                                      <Box
                                                        below={4}
                                                        between={3}
                                                        className="c14"
                                                        inline={false}
                                                        size="small"
                                                        tag="ul"
                                                        type="nonIndexed"
                                                      >
                                                        <styled.div
                                                          below={4}
                                                          between={3}
                                                          className="c14"
                                                          inline={false}
                                                          size="small"
                                                          tag="ul"
                                                          type="nonIndexed"
                                                        >
                                                          <StyledComponent
                                                            below={4}
                                                            between={3}
                                                            className="c14"
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [
                                                                  [Function],
                                                                ],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "sc-bdVaJa",
                                                                  "isStatic": false,
                                                                  "lastClassName": "c10",
                                                                  "rules": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "displayName": "styled.div",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "sc-bdVaJa",
                                                                "target": "div",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                            inline={false}
                                                            size="small"
                                                            tag="ul"
                                                            type="nonIndexed"
                                                          >
                                                            <ul
                                                              className="c14 sc-htpNat c14 c10"
                                                              size="small"
                                                              type="nonIndexed"
                                                            >
                                                              <Item
                                                                dangerouslySetInnerHTML={
                                                                  Object {
                                                                    "__html": "Four",
                                                                  }
                                                                }
                                                                key=".$Four"
                                                                styledComponent={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "attrs": Array [],
                                                                    "componentStyle": ComponentStyle {
                                                                      "componentId": "List__StyledListItem-ju21tg-0",
                                                                      "isStatic": true,
                                                                      "lastClassName": "c11",
                                                                      "rules": Array [
                                                                        "& > span {",
                                                                        "font-weight: 500;",
                                                                        "}",
                                                                        "padding-left: 1rem;",
                                                                      ],
                                                                    },
                                                                    "displayName": "List__StyledListItem",
                                                                    "foldedComponentIds": Array [],
                                                                    "render": [Function],
                                                                    "styledComponentId": "List__StyledListItem-ju21tg-0",
                                                                    "target": "li",
                                                                    "toString": [Function],
                                                                    "warnTooManyClasses": [Function],
                                                                    "withComponent": [Function],
                                                                  }
                                                                }
                                                              >
                                                                <List__StyledListItem
                                                                  dangerouslySetInnerHTML={
                                                                    Object {
                                                                      "__html": "Four",
                                                                    }
                                                                  }
                                                                >
                                                                  <StyledComponent
                                                                    dangerouslySetInnerHTML={
                                                                      Object {
                                                                        "__html": "Four",
                                                                      }
                                                                    }
                                                                    forwardedComponent={
                                                                      Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "attrs": Array [],
                                                                        "componentStyle": ComponentStyle {
                                                                          "componentId": "List__StyledListItem-ju21tg-0",
                                                                          "isStatic": true,
                                                                          "lastClassName": "c11",
                                                                          "rules": Array [
                                                                            "& > span {",
                                                                            "font-weight: 500;",
                                                                            "}",
                                                                            "padding-left: 1rem;",
                                                                          ],
                                                                        },
                                                                        "displayName": "List__StyledListItem",
                                                                        "foldedComponentIds": Array [],
                                                                        "render": [Function],
                                                                        "styledComponentId": "List__StyledListItem-ju21tg-0",
                                                                        "target": "li",
                                                                        "toString": [Function],
                                                                        "warnTooManyClasses": [Function],
                                                                        "withComponent": [Function],
                                                                      }
                                                                    }
                                                                    forwardedRef={null}
                                                                  >
                                                                    <li
                                                                      className="c11"
                                                                      dangerouslySetInnerHTML={
                                                                        Object {
                                                                          "__html": "Four",
                                                                        }
                                                                      }
                                                                    />
                                                                  </StyledComponent>
                                                                </List__StyledListItem>
                                                              </Item>
                                                              <Item
                                                                dangerouslySetInnerHTML={
                                                                  Object {
                                                                    "__html": "Five",
                                                                  }
                                                                }
                                                                key=".$Five"
                                                                styledComponent={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "attrs": Array [],
                                                                    "componentStyle": ComponentStyle {
                                                                      "componentId": "List__StyledListItem-ju21tg-0",
                                                                      "isStatic": true,
                                                                      "lastClassName": "c11",
                                                                      "rules": Array [
                                                                        "& > span {",
                                                                        "font-weight: 500;",
                                                                        "}",
                                                                        "padding-left: 1rem;",
                                                                      ],
                                                                    },
                                                                    "displayName": "List__StyledListItem",
                                                                    "foldedComponentIds": Array [],
                                                                    "render": [Function],
                                                                    "styledComponentId": "List__StyledListItem-ju21tg-0",
                                                                    "target": "li",
                                                                    "toString": [Function],
                                                                    "warnTooManyClasses": [Function],
                                                                    "withComponent": [Function],
                                                                  }
                                                                }
                                                              >
                                                                <List__StyledListItem
                                                                  dangerouslySetInnerHTML={
                                                                    Object {
                                                                      "__html": "Five",
                                                                    }
                                                                  }
                                                                >
                                                                  <StyledComponent
                                                                    dangerouslySetInnerHTML={
                                                                      Object {
                                                                        "__html": "Five",
                                                                      }
                                                                    }
                                                                    forwardedComponent={
                                                                      Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "attrs": Array [],
                                                                        "componentStyle": ComponentStyle {
                                                                          "componentId": "List__StyledListItem-ju21tg-0",
                                                                          "isStatic": true,
                                                                          "lastClassName": "c11",
                                                                          "rules": Array [
                                                                            "& > span {",
                                                                            "font-weight: 500;",
                                                                            "}",
                                                                            "padding-left: 1rem;",
                                                                          ],
                                                                        },
                                                                        "displayName": "List__StyledListItem",
                                                                        "foldedComponentIds": Array [],
                                                                        "render": [Function],
                                                                        "styledComponentId": "List__StyledListItem-ju21tg-0",
                                                                        "target": "li",
                                                                        "toString": [Function],
                                                                        "warnTooManyClasses": [Function],
                                                                        "withComponent": [Function],
                                                                      }
                                                                    }
                                                                    forwardedRef={null}
                                                                  >
                                                                    <li
                                                                      className="c11"
                                                                      dangerouslySetInnerHTML={
                                                                        Object {
                                                                          "__html": "Five",
                                                                        }
                                                                      }
                                                                    />
                                                                  </StyledComponent>
                                                                </List__StyledListItem>
                                                              </Item>
                                                            </ul>
                                                          </StyledComponent>
                                                        </styled.div>
                                                      </Box>
                                                    </StyledComponent>
                                                  </Styled(Box)>
                                                </List>
                                              </div>
                                            </StyledComponent>
                                          </styled.div>
                                        </Box>
                                      </div>
                                    </Col>
                                  </Subscriber>
                                </Col>
                              </div>
                            </Row>
                          </Row>
                        </div>
                      </Grid>
                    </Broadcast>
                  </FlexGrid>
                </div>
              </Transition>
            </Translate>
          </div>
        </div>
      </Transition>
    </FadeAndReveal>
    <HairlineDivider
      gradient={false}
      vertical={false}
    >
      <HairlineDivider__StyledHairlineDivider
        gradient={false}
        vertical={false}
      >
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "HairlineDivider__StyledHairlineDivider-biamlk-0",
                "isStatic": false,
                "lastClassName": "c0",
                "rules": Array [
                  "padding: 0;",
                  "margin: 0;",
                  "border-width: 0;",
                  [Function],
                ],
              },
              "displayName": "HairlineDivider__StyledHairlineDivider",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "HairlineDivider__StyledHairlineDivider-biamlk-0",
              "target": "hr",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          gradient={false}
          vertical={false}
        >
          <hr
            className="c0"
          />
        </StyledComponent>
      </HairlineDivider__StyledHairlineDivider>
    </HairlineDivider>
  </div>
</TermsAndConditions>
`;

exports[`TermsAndConditions renders expanded with just nonIndexedContent 1`] = `
.c0 {
  padding: 0;
  margin: 0;
  border-width: 0;
  -webkit-transform: rotate(-0.00001deg);
  -ms-transform: rotate(-0.00001deg);
  transform: rotate(-0.00001deg);
  width: 100%;
  height: 1px;
  background-color: #d8d8d8;
}

.c8 {
  padding: 0;
  margin: 0;
  border-width: 0;
  height: 32px;
  background-image: radial-gradient(ellipse at top,rgba(150,150,150,0.1) 0%,rgba(0,0,0,0) 70%);
}

.c7 {
  word-wrap: break-word;
  color: #2a2c2e;
  font-weight: 700;
  font-size: 1rem;
  line-height: 1.25;
  -webkit-letter-spacing: -0.6px;
  -moz-letter-spacing: -0.6px;
  -ms-letter-spacing: -0.6px;
  letter-spacing: -0.6px;
}

.c7 .c14,
.c7 sup {
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
  font-size: 0.875rem;
  top: -0.5em;
}

.c4 {
  padding-top: 1rem;
  padding-bottom: 1rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c4 > *:not(:last-child) {
  margin-right: 1rem;
}

.c11 {
  margin-bottom: 1.5rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c11 > *:not(:last-child) {
  margin-bottom: 1rem;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c9 > *:not(:last-child) {
  margin-bottom: 1rem;
}

.c2 {
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  background-color: #fff;
}

.c1:hover .c13 {
  -webkit-transform: translate(6px,2px);
  -ms-transform: translate(6px,2px);
  transform: translate(6px,2px);
}

.c6 {
  line-height: 24px;
  position: absolute;
  top: 0;
  left: 0;
  -webkit-transition: -webkit-transform 300ms;
  -webkit-transition: transform 300ms;
  transition: transform 300ms;
  -webkit-transform: translate(6px,-2px);
  -ms-transform: translate(6px,-2px);
  transform: translate(6px,-2px);
}

.c1:hover .c6 {
  -webkit-transform: translate(6px,-5px);
  -ms-transform: translate(6px,-5px);
  transform: translate(6px,-5px);
}

.c12 {
  padding-left: 1rem;
}

.c12 > span {
  font-weight: 500;
}

.c10 {
  word-wrap: break-word;
  font-weight: 700;
  font-size: 0.875rem;
  -webkit-letter-spacing: -0.6px;
  -moz-letter-spacing: -0.6px;
  -ms-letter-spacing: -0.6px;
  letter-spacing: -0.6px;
  line-height: 1.42857;
  padding-left: 2rem;
  list-style: none;
}

.c3 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c5 {
  position: relative;
  width: 24px;
  height: 24px;
}

@media (min-width:768px) {
  .c11 {
    margin-bottom: 2rem;
  }
}

@media (min-width:768px) {
  .c10 {
    padding-left: 1rem;
  }
}

<TermsAndConditions
  copy="en"
  indexedContent={Array []}
  nonIndexedContent={
    Array [
      "Four",
      "Five",
    ]
  }
>
  <div>
    <HairlineDivider
      gradient={false}
      vertical={false}
    >
      <HairlineDivider__StyledHairlineDivider
        gradient={false}
        vertical={false}
      >
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "HairlineDivider__StyledHairlineDivider-biamlk-0",
                "isStatic": false,
                "lastClassName": "c0",
                "rules": Array [
                  "padding: 0;",
                  "margin: 0;",
                  "border-width: 0;",
                  [Function],
                ],
              },
              "displayName": "HairlineDivider__StyledHairlineDivider",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "HairlineDivider__StyledHairlineDivider-biamlk-0",
              "target": "hr",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          gradient={false}
          vertical={false}
        >
          <hr
            className="c0"
          />
        </StyledComponent>
      </HairlineDivider__StyledHairlineDivider>
    </HairlineDivider>
    <FlexGrid
      gutter={false}
      limitWidth={false}
    >
      <Broadcast
        channel="flex-grid"
        compareValues={[Function]}
        value={false}
      >
        <Grid
          className="TDS_FlexGrid-modules__flexGrid___QxDgy TDS_FlexGrid-modules__xsReverseCancel___20p12 TDS_FlexGrid-modules__smReverseCancel___-_YfQ TDS_FlexGrid-modules__mdReverseCancel___3cUDQ TDS_FlexGrid-modules__lgReverseCancel___1lfjg TDS_FlexGrid-modules__xlReverseCancel___OIqvi"
          fluid={true}
        >
          <div
            className="TDS_FlexGrid-modules__flexGrid___QxDgy TDS_FlexGrid-modules__xsReverseCancel___20p12 TDS_FlexGrid-modules__smReverseCancel___-_YfQ TDS_FlexGrid-modules__mdReverseCancel___3cUDQ TDS_FlexGrid-modules__lgReverseCancel___1lfjg TDS_FlexGrid-modules__xlReverseCancel___OIqvi TDS_flexboxgrid2__container-fluid___3c7kO"
          >
            <Row>
              <Row
                className="TDS_Row-modules__flexRow___3CHOR TDS_Row-modules__xsReverseCancel___3qDNC TDS_Row-modules__smReverseCancel___VUTb9 TDS_Row-modules__mdReverseCancel___1MWfN TDS_Row-modules__lgReverseCancel___1Ngyt TDS_Row-modules__xlReverseCancel___16npr"
              >
                <div
                  className="TDS_Row-modules__flexRow___3CHOR TDS_Row-modules__xsReverseCancel___3qDNC TDS_Row-modules__smReverseCancel___VUTb9 TDS_Row-modules__mdReverseCancel___1MWfN TDS_Row-modules__lgReverseCancel___1Ngyt TDS_Row-modules__xlReverseCancel___16npr TDS_flexboxgrid2__row___3YyB2"
                >
                  <Col>
                    <Subscriber
                      channel="flex-grid"
                      quiet={false}
                    >
                      <Col
                        className="TDS_Col-modules__xsVisible___yQn24 TDS_Col-modules__smVisible___3-waa TDS_Col-modules__mdVisible___wUg94 TDS_Col-modules__lgVisible___7FbXv TDS_Col-modules__xlVisible___1AW2r TDS_Col-modules__gutterless___11Fxy"
                        xs={true}
                      >
                        <div
                          className="TDS_flexboxgrid2__col-xs___2KrHO TDS_Col-modules__xsVisible___yQn24 TDS_Col-modules__smVisible___3-waa TDS_Col-modules__mdVisible___wUg94 TDS_Col-modules__lgVisible___7FbXv TDS_Col-modules__xlVisible___1AW2r TDS_Col-modules__gutterless___11Fxy"
                        >
                          <Styled(Clickable)
                            onClick={[Function]}
                          >
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "c1",
                                    "isStatic": true,
                                    "lastClassName": "c2",
                                    "rules": Array [
                                      "width: 100%;",
                                      "display: flex;",
                                      "justify-content: center;",
                                      "background-color: #fff;",
                                    ],
                                  },
                                  "displayName": "Styled(Clickable)",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "c1",
                                  "target": [Function],
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                              onClick={[Function]}
                            >
                              <Clickable
                                className="c1 c2"
                                onClick={[Function]}
                                type="button"
                              >
                                <button
                                  className="clickable c1 c2"
                                  onClick={[Function]}
                                  type="button"
                                >
                                  <Styled(Box)
                                    between={3}
                                    inline={true}
                                    vertical={3}
                                  >
                                    <StyledComponent
                                      between={3}
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-bxivhb",
                                            "isStatic": true,
                                            "lastClassName": "c3",
                                            "rules": Array [
                                              "align-items: center;",
                                            ],
                                          },
                                          "displayName": "Styled(Box)",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-bxivhb",
                                          "target": [Function],
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                      inline={true}
                                      vertical={3}
                                    >
                                      <Box
                                        between={3}
                                        className="c3"
                                        inline={true}
                                        tag="div"
                                        vertical={3}
                                      >
                                        <styled.div
                                          between={3}
                                          className="c3"
                                          inline={true}
                                          tag="div"
                                          vertical={3}
                                        >
                                          <StyledComponent
                                            between={3}
                                            className="c3"
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [
                                                  [Function],
                                                ],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-bdVaJa",
                                                  "isStatic": false,
                                                  "lastClassName": "c11",
                                                  "rules": Array [
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                  ],
                                                },
                                                "displayName": "styled.div",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-bdVaJa",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            inline={true}
                                            tag="div"
                                            vertical={3}
                                          >
                                            <div
                                              className="c3 sc-bxivhb c3 c4"
                                            >
                                              <TermsAndConditions__StyledChevronContainer>
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "TermsAndConditions__StyledChevronContainer-sc-1aoonet-0",
                                                        "isStatic": true,
                                                        "lastClassName": "c5",
                                                        "rules": Array [
                                                          "position: relative;",
                                                          "width: 24px;",
                                                          "height: 24px;",
                                                        ],
                                                      },
                                                      "displayName": "TermsAndConditions__StyledChevronContainer",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "TermsAndConditions__StyledChevronContainer-sc-1aoonet-0",
                                                      "target": "span",
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                >
                                                  <span
                                                    className="c5"
                                                  >
                                                    <Circle>
                                                      <svg
                                                        height="24px"
                                                        viewBox="0 0 24 24"
                                                        width="24px"
                                                        xmlns="http://www.w3.org/2000/svg"
                                                        xmlnsXlink="http://www.w3.org/1999/xlink"
                                                      >
                                                        <path
                                                          d="M12,0 C5.373,0 0,5.373 0,12 C0,18.627 5.373,24 12,24 C18.627,24 24,18.627 24,12 C24,5.373 18.627,0 12,0 M12,1 C18.065,1 23,5.935 23,12 C23,18.065 18.065,23 12,23 C5.935,23 1,18.065 1,12 C1,5.935 5.935,1 12,1"
                                                          fill="#4b286d"
                                                        />
                                                      </svg>
                                                    </Circle>
                                                    <Chevron
                                                      isOpen={true}
                                                    >
                                                      <Chevron__StyledChevron
                                                        isOpen={true}
                                                      >
                                                        <StyledComponent
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "Chevron__StyledChevron-sc-17gl4qs-0",
                                                                "isStatic": false,
                                                                "lastClassName": "c6",
                                                                "rules": Array [
                                                                  [Function],
                                                                ],
                                                              },
                                                              "displayName": "Chevron__StyledChevron",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "Chevron__StyledChevron-sc-17gl4qs-0",
                                                              "target": "span",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          isOpen={true}
                                                        >
                                                          <span
                                                            className="c6"
                                                          >
                                                            <svg
                                                              height="8px"
                                                              viewBox="0 0 12 8"
                                                              width="12px"
                                                              xmlns="http://www.w3.org/2000/svg"
                                                              xmlnsXlink="http://www.w3.org/1999/xlink"
                                                            >
                                                              <path
                                                                d="M11.7940812,0.183230226 C11.4424627,-0.117489399 11.0896181,0.0450442657 10.8868854,0.245275736 L5.99681615,4.74055299 L1.11722187,0.245275732 C0.93839231,0.0814520871 0.490533284,-0.180032793 0.165240429,0.183230232 C-0.160052425,0.546493257 0.0652096387,0.91610528 0.243271687,1.07992892 L5.6348225,6.87660266 C5.81365205,7.04113245 6.10607292,7.04113245 6.28490248,6.87660266 C6.28490248,6.87589653 11.7940809,1.07992896 11.7940809,1.07992896 C11.9792355,0.935042671 12.1456996,0.483949851 11.7940812,0.183230226 Z"
                                                                transform="rotate(180, 6, 4)"
                                                              />
                                                            </svg>
                                                          </span>
                                                        </StyledComponent>
                                                      </Chevron__StyledChevron>
                                                    </Chevron>
                                                  </span>
                                                </StyledComponent>
                                              </TermsAndConditions__StyledChevronContainer>
                                              <Heading
                                                invert={false}
                                                level="h4"
                                                tag="h2"
                                              >
                                                <Heading__StyledHeading
                                                  as="h2"
                                                  data-testid="heading"
                                                  invert={false}
                                                  level="h4"
                                                >
                                                  <StyledComponent
                                                    as="h2"
                                                    data-testid="heading"
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "Heading__StyledHeading-mpz92r-0",
                                                          "isStatic": false,
                                                          "lastClassName": "c7",
                                                          "rules": Array [
                                                            "word-wrap: break-word;",
                                                            [Function],
                                                          ],
                                                        },
                                                        "displayName": "Heading__StyledHeading",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "Heading__StyledHeading-mpz92r-0",
                                                        "target": "h1",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    invert={false}
                                                    level="h4"
                                                  >
                                                    <h2
                                                      className="c7"
                                                      data-testid="heading"
                                                    >
                                                      Hide terms and conditions
                                                    </h2>
                                                  </StyledComponent>
                                                </Heading__StyledHeading>
                                              </Heading>
                                            </div>
                                          </StyledComponent>
                                        </styled.div>
                                      </Box>
                                    </StyledComponent>
                                  </Styled(Box)>
                                </button>
                              </Clickable>
                            </StyledComponent>
                          </Styled(Clickable)>
                        </div>
                      </Col>
                    </Subscriber>
                  </Col>
                </div>
              </Row>
            </Row>
          </div>
        </Grid>
      </Broadcast>
    </FlexGrid>
    <FadeAndReveal
      delay={0}
      duration={150}
      height={0}
      in={true}
      timeout={150}
    >
      <Transition
        appear={false}
        duration={150}
        enter={true}
        exit={true}
        in={true}
        mountOnEnter={false}
        onEnter={[Function]}
        onEntered={[Function]}
        onEntering={[Function]}
        onExit={[Function]}
        onExited={[Function]}
        onExiting={[Function]}
        timeout={150}
        unmountOnExit={false}
      >
        <div
          style={
            Object {
              "height": 0,
              "opacity": 1,
              "overflow": "hidden",
              "transition": "height 150ms, opacity 150ms ease-in-out",
            }
          }
        >
          <div>
            <FlexGrid
              gutter={false}
              limitWidth={false}
            >
              <Broadcast
                channel="flex-grid"
                compareValues={[Function]}
                value={false}
              >
                <Grid
                  className="TDS_FlexGrid-modules__flexGrid___QxDgy TDS_FlexGrid-modules__xsReverseCancel___20p12 TDS_FlexGrid-modules__smReverseCancel___-_YfQ TDS_FlexGrid-modules__mdReverseCancel___3cUDQ TDS_FlexGrid-modules__lgReverseCancel___1lfjg TDS_FlexGrid-modules__xlReverseCancel___OIqvi"
                  fluid={true}
                >
                  <div
                    className="TDS_FlexGrid-modules__flexGrid___QxDgy TDS_FlexGrid-modules__xsReverseCancel___20p12 TDS_FlexGrid-modules__smReverseCancel___-_YfQ TDS_FlexGrid-modules__mdReverseCancel___3cUDQ TDS_FlexGrid-modules__lgReverseCancel___1lfjg TDS_FlexGrid-modules__xlReverseCancel___OIqvi TDS_flexboxgrid2__container-fluid___3c7kO"
                  >
                    <Row>
                      <Row
                        className="TDS_Row-modules__flexRow___3CHOR TDS_Row-modules__xsReverseCancel___3qDNC TDS_Row-modules__smReverseCancel___VUTb9 TDS_Row-modules__mdReverseCancel___1MWfN TDS_Row-modules__lgReverseCancel___1Ngyt TDS_Row-modules__xlReverseCancel___16npr"
                      >
                        <div
                          className="TDS_Row-modules__flexRow___3CHOR TDS_Row-modules__xsReverseCancel___3qDNC TDS_Row-modules__smReverseCancel___VUTb9 TDS_Row-modules__mdReverseCancel___1MWfN TDS_Row-modules__lgReverseCancel___1Ngyt TDS_Row-modules__xlReverseCancel___16npr TDS_flexboxgrid2__row___3YyB2"
                        >
                          <Col>
                            <Subscriber
                              channel="flex-grid"
                              quiet={false}
                            >
                              <Col
                                className="TDS_Col-modules__xsVisible___yQn24 TDS_Col-modules__smVisible___3-waa TDS_Col-modules__mdVisible___wUg94 TDS_Col-modules__lgVisible___7FbXv TDS_Col-modules__xlVisible___1AW2r TDS_Col-modules__gutterless___11Fxy"
                                xs={true}
                              >
                                <div
                                  className="TDS_flexboxgrid2__col-xs___2KrHO TDS_Col-modules__xsVisible___yQn24 TDS_Col-modules__smVisible___3-waa TDS_Col-modules__mdVisible___wUg94 TDS_Col-modules__lgVisible___7FbXv TDS_Col-modules__xlVisible___1AW2r TDS_Col-modules__gutterless___11Fxy"
                                >
                                  <DimpleDivider>
                                    <DimpleDivider__StyledDimpleDivider>
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "DimpleDivider__StyledDimpleDivider-quxnvh-0",
                                              "isStatic": true,
                                              "lastClassName": "c8",
                                              "rules": Array [
                                                "padding: 0;",
                                                "margin: 0;",
                                                "border-width: 0;",
                                                "height: 32px;",
                                                "background-image: radial-gradient(ellipse at top, rgba(150, 150, 150, 0.1) 0%, rgba(0, 0, 0, 0) 70%);",
                                              ],
                                            },
                                            "displayName": "DimpleDivider__StyledDimpleDivider",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "DimpleDivider__StyledDimpleDivider-quxnvh-0",
                                            "target": "hr",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <hr
                                          className="c8"
                                        />
                                      </StyledComponent>
                                    </DimpleDivider__StyledDimpleDivider>
                                  </DimpleDivider>
                                </div>
                              </Col>
                            </Subscriber>
                          </Col>
                        </div>
                      </Row>
                    </Row>
                  </div>
                </Grid>
              </Broadcast>
            </FlexGrid>
            <Translate
              direction="y"
              distance="0rem"
              in={true}
              initialStyle={
                Object {
                  "transform": "translateY(1rem)",
                }
              }
              timeout={150}
            >
              <Transition
                appear={false}
                enter={true}
                exit={true}
                in={true}
                mountOnEnter={false}
                onEnter={[Function]}
                onEntered={[Function]}
                onEntering={[Function]}
                onExit={[Function]}
                onExited={[Function]}
                onExiting={[Function]}
                timeout={150}
                unmountOnExit={false}
              >
                <div
                  style={
                    Object {
                      "transform": "translateY(0rem)",
                      "transition": "transform 150ms",
                    }
                  }
                >
                  <FlexGrid
                    gutter={true}
                    limitWidth={true}
                  >
                    <Broadcast
                      channel="flex-grid"
                      compareValues={[Function]}
                      value={true}
                    >
                      <Grid
                        className="TDS_FlexGrid-modules__flexGrid___QxDgy TDS_FlexGrid-modules__limitWidth___2SDcu TDS_FlexGrid-modules__xsReverseCancel___20p12 TDS_FlexGrid-modules__smReverseCancel___-_YfQ TDS_FlexGrid-modules__mdReverseCancel___3cUDQ TDS_FlexGrid-modules__lgReverseCancel___1lfjg TDS_FlexGrid-modules__xlReverseCancel___OIqvi"
                        fluid={true}
                      >
                        <div
                          className="TDS_FlexGrid-modules__flexGrid___QxDgy TDS_FlexGrid-modules__limitWidth___2SDcu TDS_FlexGrid-modules__xsReverseCancel___20p12 TDS_FlexGrid-modules__smReverseCancel___-_YfQ TDS_FlexGrid-modules__mdReverseCancel___3cUDQ TDS_FlexGrid-modules__lgReverseCancel___1lfjg TDS_FlexGrid-modules__xlReverseCancel___OIqvi TDS_flexboxgrid2__container-fluid___3c7kO"
                        >
                          <Row>
                            <Row
                              className="TDS_Row-modules__flexRow___3CHOR TDS_Row-modules__xsReverseCancel___3qDNC TDS_Row-modules__smReverseCancel___VUTb9 TDS_Row-modules__mdReverseCancel___1MWfN TDS_Row-modules__lgReverseCancel___1Ngyt TDS_Row-modules__xlReverseCancel___16npr"
                            >
                              <div
                                className="TDS_Row-modules__flexRow___3CHOR TDS_Row-modules__xsReverseCancel___3qDNC TDS_Row-modules__smReverseCancel___VUTb9 TDS_Row-modules__mdReverseCancel___1MWfN TDS_Row-modules__lgReverseCancel___1Ngyt TDS_Row-modules__xlReverseCancel___16npr TDS_flexboxgrid2__row___3YyB2"
                              >
                                <Col
                                  md={10}
                                  mdOffset={1}
                                  xs={12}
                                >
                                  <Subscriber
                                    channel="flex-grid"
                                    quiet={false}
                                  >
                                    <Col
                                      className="TDS_Col-modules__xsVisible___yQn24 TDS_Col-modules__smVisible___3-waa TDS_Col-modules__mdVisible___wUg94 TDS_Col-modules__lgVisible___7FbXv TDS_Col-modules__xlVisible___1AW2r TDS_Col-modules__padding___2tLQS"
                                      md={10}
                                      mdOffset={1}
                                      xs={12}
                                    >
                                      <div
                                        className="TDS_flexboxgrid2__col-xs-12___3Q9tF TDS_flexboxgrid2__col-md-offset-1___1P1Ln TDS_flexboxgrid2__col-md-10___7fKo2 TDS_Col-modules__xsVisible___yQn24 TDS_Col-modules__smVisible___3-waa TDS_Col-modules__mdVisible___wUg94 TDS_Col-modules__lgVisible___7FbXv TDS_Col-modules__xlVisible___1AW2r TDS_Col-modules__padding___2tLQS"
                                      >
                                        <Box
                                          between={3}
                                          inline={false}
                                          tag="div"
                                        >
                                          <styled.div
                                            between={3}
                                            inline={false}
                                            tag="div"
                                          >
                                            <StyledComponent
                                              between={3}
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [
                                                    [Function],
                                                  ],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-bdVaJa",
                                                    "isStatic": false,
                                                    "lastClassName": "c11",
                                                    "rules": Array [
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                    ],
                                                  },
                                                  "displayName": "styled.div",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-bdVaJa",
                                                  "target": "div",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              inline={false}
                                              tag="div"
                                            >
                                              <div
                                                className="c9"
                                              >
                                                <List
                                                  below={4}
                                                  size="small"
                                                  styledComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "sc-htpNat",
                                                        "isStatic": false,
                                                        "lastClassName": "c10",
                                                        "rules": Array [
                                                          "word-wrap: break-word;",
                                                          "font-weight: 700;",
                                                          "font-size: 0.875rem;",
                                                          "letter-spacing: -0.6px;",
                                                          "line-height: 1.42857;",
                                                          "padding-left: 2rem;",
                                                          "@media (min-width: 768px) {",
                                                          "padding-left: 1rem;",
                                                          "}",
                                                          [Function],
                                                        ],
                                                      },
                                                      "displayName": "Styled(Box)",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "sc-htpNat",
                                                      "target": [Function],
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  type="nonIndexed"
                                                >
                                                  <Styled(Box)
                                                    below={4}
                                                    between={3}
                                                    size="small"
                                                    tag="ul"
                                                    type="nonIndexed"
                                                  >
                                                    <StyledComponent
                                                      below={4}
                                                      between={3}
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "sc-htpNat",
                                                            "isStatic": false,
                                                            "lastClassName": "c10",
                                                            "rules": Array [
                                                              "word-wrap: break-word;",
                                                              "font-weight: 700;",
                                                              "font-size: 0.875rem;",
                                                              "letter-spacing: -0.6px;",
                                                              "line-height: 1.42857;",
                                                              "padding-left: 2rem;",
                                                              "@media (min-width: 768px) {",
                                                              "padding-left: 1rem;",
                                                              "}",
                                                              [Function],
                                                            ],
                                                          },
                                                          "displayName": "Styled(Box)",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "sc-htpNat",
                                                          "target": [Function],
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                      size="small"
                                                      tag="ul"
                                                      type="nonIndexed"
                                                    >
                                                      <Box
                                                        below={4}
                                                        between={3}
                                                        className="c10"
                                                        inline={false}
                                                        size="small"
                                                        tag="ul"
                                                        type="nonIndexed"
                                                      >
                                                        <styled.div
                                                          below={4}
                                                          between={3}
                                                          className="c10"
                                                          inline={false}
                                                          size="small"
                                                          tag="ul"
                                                          type="nonIndexed"
                                                        >
                                                          <StyledComponent
                                                            below={4}
                                                            between={3}
                                                            className="c10"
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [
                                                                  [Function],
                                                                ],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "sc-bdVaJa",
                                                                  "isStatic": false,
                                                                  "lastClassName": "c11",
                                                                  "rules": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "displayName": "styled.div",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "sc-bdVaJa",
                                                                "target": "div",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                            inline={false}
                                                            size="small"
                                                            tag="ul"
                                                            type="nonIndexed"
                                                          >
                                                            <ul
                                                              className="c10 sc-htpNat c10 c11"
                                                              size="small"
                                                              type="nonIndexed"
                                                            >
                                                              <Item
                                                                dangerouslySetInnerHTML={
                                                                  Object {
                                                                    "__html": "Four",
                                                                  }
                                                                }
                                                                key=".$Four"
                                                                styledComponent={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "attrs": Array [],
                                                                    "componentStyle": ComponentStyle {
                                                                      "componentId": "List__StyledListItem-ju21tg-0",
                                                                      "isStatic": true,
                                                                      "lastClassName": "c12",
                                                                      "rules": Array [
                                                                        "& > span {",
                                                                        "font-weight: 500;",
                                                                        "}",
                                                                        "padding-left: 1rem;",
                                                                      ],
                                                                    },
                                                                    "displayName": "List__StyledListItem",
                                                                    "foldedComponentIds": Array [],
                                                                    "render": [Function],
                                                                    "styledComponentId": "List__StyledListItem-ju21tg-0",
                                                                    "target": "li",
                                                                    "toString": [Function],
                                                                    "warnTooManyClasses": [Function],
                                                                    "withComponent": [Function],
                                                                  }
                                                                }
                                                              >
                                                                <List__StyledListItem
                                                                  dangerouslySetInnerHTML={
                                                                    Object {
                                                                      "__html": "Four",
                                                                    }
                                                                  }
                                                                >
                                                                  <StyledComponent
                                                                    dangerouslySetInnerHTML={
                                                                      Object {
                                                                        "__html": "Four",
                                                                      }
                                                                    }
                                                                    forwardedComponent={
                                                                      Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "attrs": Array [],
                                                                        "componentStyle": ComponentStyle {
                                                                          "componentId": "List__StyledListItem-ju21tg-0",
                                                                          "isStatic": true,
                                                                          "lastClassName": "c12",
                                                                          "rules": Array [
                                                                            "& > span {",
                                                                            "font-weight: 500;",
                                                                            "}",
                                                                            "padding-left: 1rem;",
                                                                          ],
                                                                        },
                                                                        "displayName": "List__StyledListItem",
                                                                        "foldedComponentIds": Array [],
                                                                        "render": [Function],
                                                                        "styledComponentId": "List__StyledListItem-ju21tg-0",
                                                                        "target": "li",
                                                                        "toString": [Function],
                                                                        "warnTooManyClasses": [Function],
                                                                        "withComponent": [Function],
                                                                      }
                                                                    }
                                                                    forwardedRef={null}
                                                                  >
                                                                    <li
                                                                      className="c12"
                                                                      dangerouslySetInnerHTML={
                                                                        Object {
                                                                          "__html": "Four",
                                                                        }
                                                                      }
                                                                    />
                                                                  </StyledComponent>
                                                                </List__StyledListItem>
                                                              </Item>
                                                              <Item
                                                                dangerouslySetInnerHTML={
                                                                  Object {
                                                                    "__html": "Five",
                                                                  }
                                                                }
                                                                key=".$Five"
                                                                styledComponent={
                                                                  Object {
                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                    "attrs": Array [],
                                                                    "componentStyle": ComponentStyle {
                                                                      "componentId": "List__StyledListItem-ju21tg-0",
                                                                      "isStatic": true,
                                                                      "lastClassName": "c12",
                                                                      "rules": Array [
                                                                        "& > span {",
                                                                        "font-weight: 500;",
                                                                        "}",
                                                                        "padding-left: 1rem;",
                                                                      ],
                                                                    },
                                                                    "displayName": "List__StyledListItem",
                                                                    "foldedComponentIds": Array [],
                                                                    "render": [Function],
                                                                    "styledComponentId": "List__StyledListItem-ju21tg-0",
                                                                    "target": "li",
                                                                    "toString": [Function],
                                                                    "warnTooManyClasses": [Function],
                                                                    "withComponent": [Function],
                                                                  }
                                                                }
                                                              >
                                                                <List__StyledListItem
                                                                  dangerouslySetInnerHTML={
                                                                    Object {
                                                                      "__html": "Five",
                                                                    }
                                                                  }
                                                                >
                                                                  <StyledComponent
                                                                    dangerouslySetInnerHTML={
                                                                      Object {
                                                                        "__html": "Five",
                                                                      }
                                                                    }
                                                                    forwardedComponent={
                                                                      Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "attrs": Array [],
                                                                        "componentStyle": ComponentStyle {
                                                                          "componentId": "List__StyledListItem-ju21tg-0",
                                                                          "isStatic": true,
                                                                          "lastClassName": "c12",
                                                                          "rules": Array [
                                                                            "& > span {",
                                                                            "font-weight: 500;",
                                                                            "}",
                                                                            "padding-left: 1rem;",
                                                                          ],
                                                                        },
                                                                        "displayName": "List__StyledListItem",
                                                                        "foldedComponentIds": Array [],
                                                                        "render": [Function],
                                                                        "styledComponentId": "List__StyledListItem-ju21tg-0",
                                                                        "target": "li",
                                                                        "toString": [Function],
                                                                        "warnTooManyClasses": [Function],
                                                                        "withComponent": [Function],
                                                                      }
                                                                    }
                                                                    forwardedRef={null}
                                                                  >
                                                                    <li
                                                                      className="c12"
                                                                      dangerouslySetInnerHTML={
                                                                        Object {
                                                                          "__html": "Five",
                                                                        }
                                                                      }
                                                                    />
                                                                  </StyledComponent>
                                                                </List__StyledListItem>
                                                              </Item>
                                                            </ul>
                                                          </StyledComponent>
                                                        </styled.div>
                                                      </Box>
                                                    </StyledComponent>
                                                  </Styled(Box)>
                                                </List>
                                              </div>
                                            </StyledComponent>
                                          </styled.div>
                                        </Box>
                                      </div>
                                    </Col>
                                  </Subscriber>
                                </Col>
                              </div>
                            </Row>
                          </Row>
                        </div>
                      </Grid>
                    </Broadcast>
                  </FlexGrid>
                </div>
              </Transition>
            </Translate>
          </div>
        </div>
      </Transition>
    </FadeAndReveal>
    <HairlineDivider
      gradient={false}
      vertical={false}
    >
      <HairlineDivider__StyledHairlineDivider
        gradient={false}
        vertical={false}
      >
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "HairlineDivider__StyledHairlineDivider-biamlk-0",
                "isStatic": false,
                "lastClassName": "c0",
                "rules": Array [
                  "padding: 0;",
                  "margin: 0;",
                  "border-width: 0;",
                  [Function],
                ],
              },
              "displayName": "HairlineDivider__StyledHairlineDivider",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "HairlineDivider__StyledHairlineDivider-biamlk-0",
              "target": "hr",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          gradient={false}
          vertical={false}
        >
          <hr
            className="c0"
          />
        </StyledComponent>
      </HairlineDivider__StyledHairlineDivider>
    </HairlineDivider>
  </div>
</TermsAndConditions>
`;
