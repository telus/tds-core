// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Link can be displayed with the default styles 1`] = `
Object {
  "link": .c0:focus {
  outline: auto 5px -webkit-focus-ring-color;
}

.c0:link,
.c0:visited {
  color: #2a2c2e;
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.c0:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
}

<a
    className="c0"
    href={null}
    to={null}
  >
    Some content
  </a>,
  "wrapper": .c0:focus {
  outline: auto 5px -webkit-focus-ring-color;
}

.c0:link,
.c0:visited {
  color: #2a2c2e;
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.c0:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
}

<WithForwardedRef(Link)>
    <Link
      forwardedRef={null}
      href={null}
      invert={false}
      reactRouterLinkComponent={null}
      to={null}
    >
      <Link__StyledLink
        as="a"
        context={
          Object {
            "inheritColor": undefined,
          }
        }
        href={null}
        invert={false}
        to={null}
      >
        <StyledComponent
          as="a"
          context={
            Object {
              "inheritColor": undefined,
            }
          }
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "Link__StyledLink-sc-1bokult-0",
                "isStatic": false,
                "lastClassName": "c0",
                "rules": Array [
                  ":focus {",
                  "outline: auto 5px -webkit-focus-ring-color;",
                  "}",
                  "&:link,&:visited {",
                  "color: #2a2c2e;",
                  "text-decoration: underline;",
                  "}",
                  "&:hover {",
                  "text-decoration: none;",
                  "}",
                  [Function],
                ],
              },
              "displayName": "Link__StyledLink",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "Link__StyledLink-sc-1bokult-0",
              "target": "a",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          href={null}
          invert={false}
          to={null}
        >
          <a
            className="c0"
            href={null}
            to={null}
          >
            Some content
          </a>
        </StyledComponent>
      </Link__StyledLink>
    </Link>
  </WithForwardedRef(Link)>,
}
`;

exports[`Link can be inverted 1`] = `
Object {
  "link": .c0:focus {
  outline: auto 5px -webkit-focus-ring-color;
}

.c0:link,
.c0:visited {
  color: #2a2c2e;
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.c0:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c0:link,
.c0:visited {
  color: #fff;
}

<a
    className="c0"
    href={null}
    to={null}
  >
    Some content
  </a>,
  "wrapper": .c0:focus {
  outline: auto 5px -webkit-focus-ring-color;
}

.c0:link,
.c0:visited {
  color: #2a2c2e;
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.c0:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c0:link,
.c0:visited {
  color: #fff;
}

<WithForwardedRef(Link)
    invert={true}
  >
    <Link
      forwardedRef={null}
      href={null}
      invert={true}
      reactRouterLinkComponent={null}
      to={null}
    >
      <Link__StyledLink
        as="a"
        context={
          Object {
            "inheritColor": undefined,
          }
        }
        href={null}
        invert={true}
        to={null}
      >
        <StyledComponent
          as="a"
          context={
            Object {
              "inheritColor": undefined,
            }
          }
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "Link__StyledLink-sc-1bokult-0",
                "isStatic": false,
                "lastClassName": "c0",
                "rules": Array [
                  ":focus {",
                  "outline: auto 5px -webkit-focus-ring-color;",
                  "}",
                  "&:link,&:visited {",
                  "color: #2a2c2e;",
                  "text-decoration: underline;",
                  "}",
                  "&:hover {",
                  "text-decoration: none;",
                  "}",
                  [Function],
                ],
              },
              "displayName": "Link__StyledLink",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "Link__StyledLink-sc-1bokult-0",
              "target": "a",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          href={null}
          invert={true}
          to={null}
        >
          <a
            className="c0"
            href={null}
            to={null}
          >
            Some content
          </a>
        </StyledComponent>
      </Link__StyledLink>
    </Link>
  </WithForwardedRef(Link)>,
}
`;

exports[`Link renders 1`] = `
<Link
  forwardedRef={null}
  href={null}
  invert={false}
  reactRouterLinkComponent={null}
  to={null}
>
  Go home
</Link>
`;
