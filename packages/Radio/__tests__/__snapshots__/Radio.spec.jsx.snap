// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Radio allows numbers as value 1`] = `
.c9 {
  color: #2a2c2e;
  color: inherit;
  word-wrap: break-word;
  font-size: inherit;
  font-weight: inherit;
}

.c9 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c0 > *:not(:last-child) {
  margin-bottom: 0.5rem;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c4 > *:not(:last-child) {
  margin-right: 1rem;
}

.c6 {
  height: 1.25rem;
  width: 1.25rem;
  min-height: 1.25rem;
  min-width: 1.25rem;
  outline: 0;
  line-height: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  cursor: pointer;
  margin-top: 0.125rem;
  -webkit-transition: border-color 0.1s linear,background-color 0.1s linear;
  transition: border-color 0.1s linear,background-color 0.1s linear;
  border-radius: 50%;
  border-width: 1px;
  border-style: solid;
  border-color: #54595f;
  background-color: #fff;
}

.c6 > i {
  display: none;
}

.c2 {
  position: absolute;
  width: 1.2rem;
  height: 1.2rem;
  margin: 2px 1px;
  opacity: 0;
  pointer-events: none;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  cursor: pointer;
}

.c1:focus ~ .c3 > div > .c5 {
  box-shadow: 0 0 4px 1px #54595f;
  border-color: #fff;
}

.c1:checked ~ .c3 > div > .c5 {
  border-color: #54595f;
}

.c1:checked ~ .c3 > div > .c5 > span {
  display: block;
}

.c1:disabled ~ .c3 > div > .c5 {
  border-color: #d8d8d8;
}

.c1:disabled ~ .c3 > div > div {
  color: #d8d8d8;
}

.c7 {
  width: 0.75rem;
  height: 0.75rem;
  border-radius: 50%;
  background-color: #2B8000;
  display: none;
}

.c8 {
  width: 100%;
}

<div
  class="c0"
>
  <input
    aria-invalid="false"
    class="c1 c2"
    data-testid="hidden-input"
    id="the-group_1"
    name="the-group"
    type="radio"
    value="1"
  />
  <label
    class="c3"
    data-testid="checkbox-label"
    for="the-group_1"
  >
    <div
      class="c4"
    >
      <span
        class="c5 c6"
        data-testid="fake-input"
      >
        <span
          class="c7"
        />
      </span>
      <div
        class="c8 sc-htpNat c8 c0"
      >
        <div>
          <span
            class="c9"
          >
            A label
          </span>
        </div>
      </div>
    </div>
  </label>
</div>
`;

exports[`Radio disabled can be disabled 1`] = `
.c0 {
  color: #2a2c2e;
  color: inherit;
  word-wrap: break-word;
  font-size: inherit;
  font-weight: inherit;
}

.c0 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

<ColoredTextProvider
  tag="div"
>
  <div>
    <Text
      block={false}
      bold={false}
      invert={false}
      size="base"
    >
      <Text__StyledText
        block={false}
        bold={false}
        inheritColor={true}
        invert={false}
        size="base"
      >
        <StyledComponent
          block={false}
          bold={false}
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "Text__StyledText-sc-1m0rr67-0",
                "isStatic": false,
                "lastClassName": "c0",
                "rules": Array [
                  [Function],
                  [Function],
                  [Function],
                  [Function],
                  [Function],
                  "sup {",
                  "top: -0.5em;",
                  "font-size: 0.875rem;",
                  "position: relative;",
                  "vertical-align: baseline;",
                  "padding-left: 0.1em;",
                  "}",
                ],
              },
              "displayName": "Text__StyledText",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "Text__StyledText-sc-1m0rr67-0",
              "target": "span",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          inheritColor={true}
          invert={false}
          size="base"
        >
          <span
            className="c0"
            size="base"
          >
            A label
          </span>
        </StyledComponent>
      </Text__StyledText>
    </Text>
  </div>
</ColoredTextProvider>
`;

exports[`Radio disabled can be disabled 2`] = `
Array [
  .c1 {
  height: 1.25rem;
  width: 1.25rem;
  min-height: 1.25rem;
  min-width: 1.25rem;
  outline: 0;
  line-height: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  cursor: pointer;
  margin-top: 0.125rem;
  -webkit-transition: border-color 0.1s linear,background-color 0.1s linear;
  transition: border-color 0.1s linear,background-color 0.1s linear;
  border-radius: 50%;
  border-width: 1px;
  border-style: solid;
  border-color: #54595f;
  background-color: #fff;
}

.c1 > i {
  display: none;
}

.c5:focus ~ .c3 > div > .c0 {
  box-shadow: 0 0 4px 1px #54595f;
  border-color: #fff;
}

.c5:checked ~ .c3 > div > .c0 {
  border-color: #54595f;
}

.c5:checked ~ .c3 > div > .c0 > span {
  display: block;
}

.c5:disabled ~ .c3 > div > .c0 {
  border-color: #d8d8d8;
}

.c4 div > .c0 {
  border-color: #c12335;
}

.c5:focus ~ .c4 > div > .c0 {
  box-shadow: 0 0 4px 1px #54595f;
  border-color: #c12335;
}

.c5:checked ~ .c4 > div > .c0 {
  border-color: #54595f;
}

.c5:checked ~ .c4 > div > .c0 > span {
  display: block;
}

.c5:disabled ~ .c4 > div > .c0 {
  border-color: #d8d8d8;
}

.c2 {
  width: 0.75rem;
  height: 0.75rem;
  border-radius: 50%;
  background-color: #2B8000;
  display: none;
}

<Radio__FakeRadio
    data-testid="fake-input"
  >
    <StyledComponent
      data-testid="fake-input"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "c0",
            "isStatic": true,
            "lastClassName": "c1",
            "rules": Array [
              "height: 1.25rem;",
              "width: 1.25rem;",
              "min-height: 1.25rem;",
              "min-width: 1.25rem;",
              "outline: 0;",
              "line-height: 0;",
              "display: flex;",
              "align-items: center;",
              "justify-content: center;",
              "cursor: pointer;",
              "margin-top: 0.125rem;",
              "transition: border-color 0.1s linear, background-color 0.1s linear;",
              "border-radius: 50%;",
              "border-width: 1px;",
              "border-style: solid;",
              "border-color: #54595f;",
              "background-color: #fff;",
              "& > i {",
              "display: none;",
              "}",
            ],
          },
          "displayName": "Radio__FakeRadio",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "c0",
          "target": "span",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <span
        className="c0 c1"
        data-testid="fake-input"
      >
        <Radio__InnerChecked>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "Radio__InnerChecked-sc-1ifvbpn-3",
                  "isStatic": true,
                  "lastClassName": "c2",
                  "rules": Array [
                    "width: 0.75rem;",
                    "height: 0.75rem;",
                    "border-radius: 50%;",
                    "background-color: #2B8000;",
                    "display: none;",
                  ],
                },
                "displayName": "Radio__InnerChecked",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "Radio__InnerChecked-sc-1ifvbpn-3",
                "target": "span",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <span
              className="c2"
            />
          </StyledComponent>
        </Radio__InnerChecked>
      </span>
    </StyledComponent>
  </Radio__FakeRadio>,
  .c1 {
  height: 1.25rem;
  width: 1.25rem;
  min-height: 1.25rem;
  min-width: 1.25rem;
  outline: 0;
  line-height: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  cursor: pointer;
  margin-top: 0.125rem;
  -webkit-transition: border-color 0.1s linear,background-color 0.1s linear;
  transition: border-color 0.1s linear,background-color 0.1s linear;
  border-radius: 50%;
  border-width: 1px;
  border-style: solid;
  border-color: #54595f;
  background-color: #fff;
}

.c1 > i {
  display: none;
}

.c5:focus ~ .c3 > div > .c0 {
  box-shadow: 0 0 4px 1px #54595f;
  border-color: #fff;
}

.c5:checked ~ .c3 > div > .c0 {
  border-color: #54595f;
}

.c5:checked ~ .c3 > div > .c0 > span {
  display: block;
}

.c5:disabled ~ .c3 > div > .c0 {
  border-color: #d8d8d8;
}

.c4 div > .c0 {
  border-color: #c12335;
}

.c5:focus ~ .c4 > div > .c0 {
  box-shadow: 0 0 4px 1px #54595f;
  border-color: #c12335;
}

.c5:checked ~ .c4 > div > .c0 {
  border-color: #54595f;
}

.c5:checked ~ .c4 > div > .c0 > span {
  display: block;
}

.c5:disabled ~ .c4 > div > .c0 {
  border-color: #d8d8d8;
}

.c2 {
  width: 0.75rem;
  height: 0.75rem;
  border-radius: 50%;
  background-color: #2B8000;
  display: none;
}

<StyledComponent
    data-testid="fake-input"
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "c0",
          "isStatic": true,
          "lastClassName": "c1",
          "rules": Array [
            "height: 1.25rem;",
            "width: 1.25rem;",
            "min-height: 1.25rem;",
            "min-width: 1.25rem;",
            "outline: 0;",
            "line-height: 0;",
            "display: flex;",
            "align-items: center;",
            "justify-content: center;",
            "cursor: pointer;",
            "margin-top: 0.125rem;",
            "transition: border-color 0.1s linear, background-color 0.1s linear;",
            "border-radius: 50%;",
            "border-width: 1px;",
            "border-style: solid;",
            "border-color: #54595f;",
            "background-color: #fff;",
            "& > i {",
            "display: none;",
            "}",
          ],
        },
        "displayName": "Radio__FakeRadio",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "c0",
        "target": "span",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
  >
    <span
      className="c0 c1"
      data-testid="fake-input"
    >
      <Radio__InnerChecked>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "Radio__InnerChecked-sc-1ifvbpn-3",
                "isStatic": true,
                "lastClassName": "c2",
                "rules": Array [
                  "width: 0.75rem;",
                  "height: 0.75rem;",
                  "border-radius: 50%;",
                  "background-color: #2B8000;",
                  "display: none;",
                ],
              },
              "displayName": "Radio__InnerChecked",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "Radio__InnerChecked-sc-1ifvbpn-3",
              "target": "span",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <span
            className="c2"
          />
        </StyledComponent>
      </Radio__InnerChecked>
    </span>
  </StyledComponent>,
  .c1 {
  height: 1.25rem;
  width: 1.25rem;
  min-height: 1.25rem;
  min-width: 1.25rem;
  outline: 0;
  line-height: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  cursor: pointer;
  margin-top: 0.125rem;
  -webkit-transition: border-color 0.1s linear,background-color 0.1s linear;
  transition: border-color 0.1s linear,background-color 0.1s linear;
  border-radius: 50%;
  border-width: 1px;
  border-style: solid;
  border-color: #54595f;
  background-color: #fff;
}

.c1 > i {
  display: none;
}

.c5:focus ~ .c3 > div > .c0 {
  box-shadow: 0 0 4px 1px #54595f;
  border-color: #fff;
}

.c5:checked ~ .c3 > div > .c0 {
  border-color: #54595f;
}

.c5:checked ~ .c3 > div > .c0 > span {
  display: block;
}

.c5:disabled ~ .c3 > div > .c0 {
  border-color: #d8d8d8;
}

.c4 div > .c0 {
  border-color: #c12335;
}

.c5:focus ~ .c4 > div > .c0 {
  box-shadow: 0 0 4px 1px #54595f;
  border-color: #c12335;
}

.c5:checked ~ .c4 > div > .c0 {
  border-color: #54595f;
}

.c5:checked ~ .c4 > div > .c0 > span {
  display: block;
}

.c5:disabled ~ .c4 > div > .c0 {
  border-color: #d8d8d8;
}

.c2 {
  width: 0.75rem;
  height: 0.75rem;
  border-radius: 50%;
  background-color: #2B8000;
  display: none;
}

<span
    className="c0 c1"
    data-testid="fake-input"
  >
    <Radio__InnerChecked>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Radio__InnerChecked-sc-1ifvbpn-3",
              "isStatic": true,
              "lastClassName": "c2",
              "rules": Array [
                "width: 0.75rem;",
                "height: 0.75rem;",
                "border-radius: 50%;",
                "background-color: #2B8000;",
                "display: none;",
              ],
            },
            "displayName": "Radio__InnerChecked",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Radio__InnerChecked-sc-1ifvbpn-3",
            "target": "span",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <span
          className="c2"
        />
      </StyledComponent>
    </Radio__InnerChecked>
  </span>,
]
`;

exports[`Radio disabled can be disabled and checked 1`] = `
.c0 {
  color: #2a2c2e;
  color: inherit;
  word-wrap: break-word;
  font-size: inherit;
  font-weight: inherit;
}

.c0 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

<ColoredTextProvider
  tag="div"
>
  <div>
    <Text
      block={false}
      bold={false}
      invert={false}
      size="base"
    >
      <Text__StyledText
        block={false}
        bold={false}
        inheritColor={true}
        invert={false}
        size="base"
      >
        <StyledComponent
          block={false}
          bold={false}
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "Text__StyledText-sc-1m0rr67-0",
                "isStatic": false,
                "lastClassName": "c0",
                "rules": Array [
                  [Function],
                  [Function],
                  [Function],
                  [Function],
                  [Function],
                  "sup {",
                  "top: -0.5em;",
                  "font-size: 0.875rem;",
                  "position: relative;",
                  "vertical-align: baseline;",
                  "padding-left: 0.1em;",
                  "}",
                ],
              },
              "displayName": "Text__StyledText",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "Text__StyledText-sc-1m0rr67-0",
              "target": "span",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          inheritColor={true}
          invert={false}
          size="base"
        >
          <span
            className="c0"
            size="base"
          >
            A label
          </span>
        </StyledComponent>
      </Text__StyledText>
    </Text>
  </div>
</ColoredTextProvider>
`;

exports[`Radio disabled can be disabled and checked 2`] = `
Array [
  .c1 {
  height: 1.25rem;
  width: 1.25rem;
  min-height: 1.25rem;
  min-width: 1.25rem;
  outline: 0;
  line-height: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  cursor: pointer;
  margin-top: 0.125rem;
  -webkit-transition: border-color 0.1s linear,background-color 0.1s linear;
  transition: border-color 0.1s linear,background-color 0.1s linear;
  border-radius: 50%;
  border-width: 1px;
  border-style: solid;
  border-color: #54595f;
  background-color: #fff;
}

.c1 > i {
  display: none;
}

.c5:focus ~ .c3 > div > .c0 {
  box-shadow: 0 0 4px 1px #54595f;
  border-color: #fff;
}

.c5:checked ~ .c3 > div > .c0 {
  border-color: #54595f;
}

.c5:checked ~ .c3 > div > .c0 > span {
  display: block;
}

.c5:disabled ~ .c3 > div > .c0 {
  border-color: #d8d8d8;
}

.c4 div > .c0 {
  border-color: #c12335;
}

.c5:focus ~ .c4 > div > .c0 {
  box-shadow: 0 0 4px 1px #54595f;
  border-color: #c12335;
}

.c5:checked ~ .c4 > div > .c0 {
  border-color: #54595f;
}

.c5:checked ~ .c4 > div > .c0 > span {
  display: block;
}

.c5:disabled ~ .c4 > div > .c0 {
  border-color: #d8d8d8;
}

.c2 {
  width: 0.75rem;
  height: 0.75rem;
  border-radius: 50%;
  background-color: #2B8000;
  display: none;
}

<Radio__FakeRadio
    data-testid="fake-input"
  >
    <StyledComponent
      data-testid="fake-input"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "c0",
            "isStatic": true,
            "lastClassName": "c1",
            "rules": Array [
              "height: 1.25rem;",
              "width: 1.25rem;",
              "min-height: 1.25rem;",
              "min-width: 1.25rem;",
              "outline: 0;",
              "line-height: 0;",
              "display: flex;",
              "align-items: center;",
              "justify-content: center;",
              "cursor: pointer;",
              "margin-top: 0.125rem;",
              "transition: border-color 0.1s linear, background-color 0.1s linear;",
              "border-radius: 50%;",
              "border-width: 1px;",
              "border-style: solid;",
              "border-color: #54595f;",
              "background-color: #fff;",
              "& > i {",
              "display: none;",
              "}",
            ],
          },
          "displayName": "Radio__FakeRadio",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "c0",
          "target": "span",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <span
        className="c0 c1"
        data-testid="fake-input"
      >
        <Radio__InnerChecked>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "Radio__InnerChecked-sc-1ifvbpn-3",
                  "isStatic": true,
                  "lastClassName": "c2",
                  "rules": Array [
                    "width: 0.75rem;",
                    "height: 0.75rem;",
                    "border-radius: 50%;",
                    "background-color: #2B8000;",
                    "display: none;",
                  ],
                },
                "displayName": "Radio__InnerChecked",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "Radio__InnerChecked-sc-1ifvbpn-3",
                "target": "span",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <span
              className="c2"
            />
          </StyledComponent>
        </Radio__InnerChecked>
      </span>
    </StyledComponent>
  </Radio__FakeRadio>,
  .c1 {
  height: 1.25rem;
  width: 1.25rem;
  min-height: 1.25rem;
  min-width: 1.25rem;
  outline: 0;
  line-height: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  cursor: pointer;
  margin-top: 0.125rem;
  -webkit-transition: border-color 0.1s linear,background-color 0.1s linear;
  transition: border-color 0.1s linear,background-color 0.1s linear;
  border-radius: 50%;
  border-width: 1px;
  border-style: solid;
  border-color: #54595f;
  background-color: #fff;
}

.c1 > i {
  display: none;
}

.c5:focus ~ .c3 > div > .c0 {
  box-shadow: 0 0 4px 1px #54595f;
  border-color: #fff;
}

.c5:checked ~ .c3 > div > .c0 {
  border-color: #54595f;
}

.c5:checked ~ .c3 > div > .c0 > span {
  display: block;
}

.c5:disabled ~ .c3 > div > .c0 {
  border-color: #d8d8d8;
}

.c4 div > .c0 {
  border-color: #c12335;
}

.c5:focus ~ .c4 > div > .c0 {
  box-shadow: 0 0 4px 1px #54595f;
  border-color: #c12335;
}

.c5:checked ~ .c4 > div > .c0 {
  border-color: #54595f;
}

.c5:checked ~ .c4 > div > .c0 > span {
  display: block;
}

.c5:disabled ~ .c4 > div > .c0 {
  border-color: #d8d8d8;
}

.c2 {
  width: 0.75rem;
  height: 0.75rem;
  border-radius: 50%;
  background-color: #2B8000;
  display: none;
}

<StyledComponent
    data-testid="fake-input"
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "c0",
          "isStatic": true,
          "lastClassName": "c1",
          "rules": Array [
            "height: 1.25rem;",
            "width: 1.25rem;",
            "min-height: 1.25rem;",
            "min-width: 1.25rem;",
            "outline: 0;",
            "line-height: 0;",
            "display: flex;",
            "align-items: center;",
            "justify-content: center;",
            "cursor: pointer;",
            "margin-top: 0.125rem;",
            "transition: border-color 0.1s linear, background-color 0.1s linear;",
            "border-radius: 50%;",
            "border-width: 1px;",
            "border-style: solid;",
            "border-color: #54595f;",
            "background-color: #fff;",
            "& > i {",
            "display: none;",
            "}",
          ],
        },
        "displayName": "Radio__FakeRadio",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "c0",
        "target": "span",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
  >
    <span
      className="c0 c1"
      data-testid="fake-input"
    >
      <Radio__InnerChecked>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "Radio__InnerChecked-sc-1ifvbpn-3",
                "isStatic": true,
                "lastClassName": "c2",
                "rules": Array [
                  "width: 0.75rem;",
                  "height: 0.75rem;",
                  "border-radius: 50%;",
                  "background-color: #2B8000;",
                  "display: none;",
                ],
              },
              "displayName": "Radio__InnerChecked",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "Radio__InnerChecked-sc-1ifvbpn-3",
              "target": "span",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <span
            className="c2"
          />
        </StyledComponent>
      </Radio__InnerChecked>
    </span>
  </StyledComponent>,
  .c1 {
  height: 1.25rem;
  width: 1.25rem;
  min-height: 1.25rem;
  min-width: 1.25rem;
  outline: 0;
  line-height: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  cursor: pointer;
  margin-top: 0.125rem;
  -webkit-transition: border-color 0.1s linear,background-color 0.1s linear;
  transition: border-color 0.1s linear,background-color 0.1s linear;
  border-radius: 50%;
  border-width: 1px;
  border-style: solid;
  border-color: #54595f;
  background-color: #fff;
}

.c1 > i {
  display: none;
}

.c5:focus ~ .c3 > div > .c0 {
  box-shadow: 0 0 4px 1px #54595f;
  border-color: #fff;
}

.c5:checked ~ .c3 > div > .c0 {
  border-color: #54595f;
}

.c5:checked ~ .c3 > div > .c0 > span {
  display: block;
}

.c5:disabled ~ .c3 > div > .c0 {
  border-color: #d8d8d8;
}

.c4 div > .c0 {
  border-color: #c12335;
}

.c5:focus ~ .c4 > div > .c0 {
  box-shadow: 0 0 4px 1px #54595f;
  border-color: #c12335;
}

.c5:checked ~ .c4 > div > .c0 {
  border-color: #54595f;
}

.c5:checked ~ .c4 > div > .c0 > span {
  display: block;
}

.c5:disabled ~ .c4 > div > .c0 {
  border-color: #d8d8d8;
}

.c2 {
  width: 0.75rem;
  height: 0.75rem;
  border-radius: 50%;
  background-color: #2B8000;
  display: none;
}

<span
    className="c0 c1"
    data-testid="fake-input"
  >
    <Radio__InnerChecked>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Radio__InnerChecked-sc-1ifvbpn-3",
              "isStatic": true,
              "lastClassName": "c2",
              "rules": Array [
                "width: 0.75rem;",
                "height: 0.75rem;",
                "border-radius: 50%;",
                "background-color: #2B8000;",
                "display: none;",
              ],
            },
            "displayName": "Radio__InnerChecked",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Radio__InnerChecked-sc-1ifvbpn-3",
            "target": "span",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <span
          className="c2"
        />
      </StyledComponent>
    </Radio__InnerChecked>
  </span>,
]
`;

exports[`Radio disabled can be disabled and checked 3`] = `null`;

exports[`Radio error can have an error feedback state 1`] = `
.c0 {
  color: #2a2c2e;
  color: inherit;
  word-wrap: break-word;
  font-size: inherit;
  font-weight: inherit;
}

.c0 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

<ColoredTextProvider
  tag="div"
>
  <div>
    <Text
      block={false}
      bold={false}
      invert={false}
      size="base"
    >
      <Text__StyledText
        block={false}
        bold={false}
        inheritColor={true}
        invert={false}
        size="base"
      >
        <StyledComponent
          block={false}
          bold={false}
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "Text__StyledText-sc-1m0rr67-0",
                "isStatic": false,
                "lastClassName": "c0",
                "rules": Array [
                  [Function],
                  [Function],
                  [Function],
                  [Function],
                  [Function],
                  "sup {",
                  "top: -0.5em;",
                  "font-size: 0.875rem;",
                  "position: relative;",
                  "vertical-align: baseline;",
                  "padding-left: 0.1em;",
                  "}",
                ],
              },
              "displayName": "Text__StyledText",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "Text__StyledText-sc-1m0rr67-0",
              "target": "span",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          inheritColor={true}
          invert={false}
          size="base"
        >
          <span
            className="c0"
            size="base"
          >
            Some error
          </span>
        </StyledComponent>
      </Text__StyledText>
    </Text>
  </div>
</ColoredTextProvider>
`;

exports[`Radio error can have an error feedback state 2`] = `
Array [
  .c1 {
  height: 1.25rem;
  width: 1.25rem;
  min-height: 1.25rem;
  min-width: 1.25rem;
  outline: 0;
  line-height: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  cursor: pointer;
  margin-top: 0.125rem;
  -webkit-transition: border-color 0.1s linear,background-color 0.1s linear;
  transition: border-color 0.1s linear,background-color 0.1s linear;
  border-radius: 50%;
  border-width: 1px;
  border-style: solid;
  border-color: #54595f;
  background-color: #fff;
}

.c1 > i {
  display: none;
}

.c5:focus ~ .c3 > div > .c0 {
  box-shadow: 0 0 4px 1px #54595f;
  border-color: #fff;
}

.c5:checked ~ .c3 > div > .c0 {
  border-color: #54595f;
}

.c5:checked ~ .c3 > div > .c0 > span {
  display: block;
}

.c5:disabled ~ .c3 > div > .c0 {
  border-color: #d8d8d8;
}

.c4 div > .c0 {
  border-color: #c12335;
}

.c5:focus ~ .c4 > div > .c0 {
  box-shadow: 0 0 4px 1px #54595f;
  border-color: #c12335;
}

.c5:checked ~ .c4 > div > .c0 {
  border-color: #54595f;
}

.c5:checked ~ .c4 > div > .c0 > span {
  display: block;
}

.c5:disabled ~ .c4 > div > .c0 {
  border-color: #d8d8d8;
}

.c2 {
  width: 0.75rem;
  height: 0.75rem;
  border-radius: 50%;
  background-color: #2B8000;
  display: none;
}

<Radio__FakeRadio
    data-testid="fake-input"
  >
    <StyledComponent
      data-testid="fake-input"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "c0",
            "isStatic": true,
            "lastClassName": "c1",
            "rules": Array [
              "height: 1.25rem;",
              "width: 1.25rem;",
              "min-height: 1.25rem;",
              "min-width: 1.25rem;",
              "outline: 0;",
              "line-height: 0;",
              "display: flex;",
              "align-items: center;",
              "justify-content: center;",
              "cursor: pointer;",
              "margin-top: 0.125rem;",
              "transition: border-color 0.1s linear, background-color 0.1s linear;",
              "border-radius: 50%;",
              "border-width: 1px;",
              "border-style: solid;",
              "border-color: #54595f;",
              "background-color: #fff;",
              "& > i {",
              "display: none;",
              "}",
            ],
          },
          "displayName": "Radio__FakeRadio",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "c0",
          "target": "span",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <span
        className="c0 c1"
        data-testid="fake-input"
      >
        <Radio__InnerChecked>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "Radio__InnerChecked-sc-1ifvbpn-3",
                  "isStatic": true,
                  "lastClassName": "c2",
                  "rules": Array [
                    "width: 0.75rem;",
                    "height: 0.75rem;",
                    "border-radius: 50%;",
                    "background-color: #2B8000;",
                    "display: none;",
                  ],
                },
                "displayName": "Radio__InnerChecked",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "Radio__InnerChecked-sc-1ifvbpn-3",
                "target": "span",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <span
              className="c2"
            />
          </StyledComponent>
        </Radio__InnerChecked>
      </span>
    </StyledComponent>
  </Radio__FakeRadio>,
  .c1 {
  height: 1.25rem;
  width: 1.25rem;
  min-height: 1.25rem;
  min-width: 1.25rem;
  outline: 0;
  line-height: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  cursor: pointer;
  margin-top: 0.125rem;
  -webkit-transition: border-color 0.1s linear,background-color 0.1s linear;
  transition: border-color 0.1s linear,background-color 0.1s linear;
  border-radius: 50%;
  border-width: 1px;
  border-style: solid;
  border-color: #54595f;
  background-color: #fff;
}

.c1 > i {
  display: none;
}

.c5:focus ~ .c3 > div > .c0 {
  box-shadow: 0 0 4px 1px #54595f;
  border-color: #fff;
}

.c5:checked ~ .c3 > div > .c0 {
  border-color: #54595f;
}

.c5:checked ~ .c3 > div > .c0 > span {
  display: block;
}

.c5:disabled ~ .c3 > div > .c0 {
  border-color: #d8d8d8;
}

.c4 div > .c0 {
  border-color: #c12335;
}

.c5:focus ~ .c4 > div > .c0 {
  box-shadow: 0 0 4px 1px #54595f;
  border-color: #c12335;
}

.c5:checked ~ .c4 > div > .c0 {
  border-color: #54595f;
}

.c5:checked ~ .c4 > div > .c0 > span {
  display: block;
}

.c5:disabled ~ .c4 > div > .c0 {
  border-color: #d8d8d8;
}

.c2 {
  width: 0.75rem;
  height: 0.75rem;
  border-radius: 50%;
  background-color: #2B8000;
  display: none;
}

<StyledComponent
    data-testid="fake-input"
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "c0",
          "isStatic": true,
          "lastClassName": "c1",
          "rules": Array [
            "height: 1.25rem;",
            "width: 1.25rem;",
            "min-height: 1.25rem;",
            "min-width: 1.25rem;",
            "outline: 0;",
            "line-height: 0;",
            "display: flex;",
            "align-items: center;",
            "justify-content: center;",
            "cursor: pointer;",
            "margin-top: 0.125rem;",
            "transition: border-color 0.1s linear, background-color 0.1s linear;",
            "border-radius: 50%;",
            "border-width: 1px;",
            "border-style: solid;",
            "border-color: #54595f;",
            "background-color: #fff;",
            "& > i {",
            "display: none;",
            "}",
          ],
        },
        "displayName": "Radio__FakeRadio",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "c0",
        "target": "span",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
  >
    <span
      className="c0 c1"
      data-testid="fake-input"
    >
      <Radio__InnerChecked>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "Radio__InnerChecked-sc-1ifvbpn-3",
                "isStatic": true,
                "lastClassName": "c2",
                "rules": Array [
                  "width: 0.75rem;",
                  "height: 0.75rem;",
                  "border-radius: 50%;",
                  "background-color: #2B8000;",
                  "display: none;",
                ],
              },
              "displayName": "Radio__InnerChecked",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "Radio__InnerChecked-sc-1ifvbpn-3",
              "target": "span",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <span
            className="c2"
          />
        </StyledComponent>
      </Radio__InnerChecked>
    </span>
  </StyledComponent>,
  .c1 {
  height: 1.25rem;
  width: 1.25rem;
  min-height: 1.25rem;
  min-width: 1.25rem;
  outline: 0;
  line-height: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  cursor: pointer;
  margin-top: 0.125rem;
  -webkit-transition: border-color 0.1s linear,background-color 0.1s linear;
  transition: border-color 0.1s linear,background-color 0.1s linear;
  border-radius: 50%;
  border-width: 1px;
  border-style: solid;
  border-color: #54595f;
  background-color: #fff;
}

.c1 > i {
  display: none;
}

.c5:focus ~ .c3 > div > .c0 {
  box-shadow: 0 0 4px 1px #54595f;
  border-color: #fff;
}

.c5:checked ~ .c3 > div > .c0 {
  border-color: #54595f;
}

.c5:checked ~ .c3 > div > .c0 > span {
  display: block;
}

.c5:disabled ~ .c3 > div > .c0 {
  border-color: #d8d8d8;
}

.c4 div > .c0 {
  border-color: #c12335;
}

.c5:focus ~ .c4 > div > .c0 {
  box-shadow: 0 0 4px 1px #54595f;
  border-color: #c12335;
}

.c5:checked ~ .c4 > div > .c0 {
  border-color: #54595f;
}

.c5:checked ~ .c4 > div > .c0 > span {
  display: block;
}

.c5:disabled ~ .c4 > div > .c0 {
  border-color: #d8d8d8;
}

.c2 {
  width: 0.75rem;
  height: 0.75rem;
  border-radius: 50%;
  background-color: #2B8000;
  display: none;
}

<span
    className="c0 c1"
    data-testid="fake-input"
  >
    <Radio__InnerChecked>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Radio__InnerChecked-sc-1ifvbpn-3",
              "isStatic": true,
              "lastClassName": "c2",
              "rules": Array [
                "width: 0.75rem;",
                "height: 0.75rem;",
                "border-radius: 50%;",
                "background-color: #2B8000;",
                "display: none;",
              ],
            },
            "displayName": "Radio__InnerChecked",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Radio__InnerChecked-sc-1ifvbpn-3",
            "target": "span",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <span
          className="c2"
        />
      </StyledComponent>
    </Radio__InnerChecked>
  </span>,
]
`;

exports[`Radio error does not appear as an error when it is checked 1`] = `
.c0 {
  color: #2a2c2e;
  color: inherit;
  word-wrap: break-word;
  font-size: inherit;
  font-weight: inherit;
}

.c0 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

<ColoredTextProvider
  tag="div"
>
  <div>
    <Text
      block={false}
      bold={false}
      invert={false}
      size="base"
    >
      <Text__StyledText
        block={false}
        bold={false}
        inheritColor={true}
        invert={false}
        size="base"
      >
        <StyledComponent
          block={false}
          bold={false}
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "Text__StyledText-sc-1m0rr67-0",
                "isStatic": false,
                "lastClassName": "c0",
                "rules": Array [
                  [Function],
                  [Function],
                  [Function],
                  [Function],
                  [Function],
                  "sup {",
                  "top: -0.5em;",
                  "font-size: 0.875rem;",
                  "position: relative;",
                  "vertical-align: baseline;",
                  "padding-left: 0.1em;",
                  "}",
                ],
              },
              "displayName": "Text__StyledText",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "Text__StyledText-sc-1m0rr67-0",
              "target": "span",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          inheritColor={true}
          invert={false}
          size="base"
        >
          <span
            className="c0"
            size="base"
          >
            Some error
          </span>
        </StyledComponent>
      </Text__StyledText>
    </Text>
  </div>
</ColoredTextProvider>
`;

exports[`Radio error does not appear as an error when it is checked 2`] = `
Array [
  .c1 {
  height: 1.25rem;
  width: 1.25rem;
  min-height: 1.25rem;
  min-width: 1.25rem;
  outline: 0;
  line-height: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  cursor: pointer;
  margin-top: 0.125rem;
  -webkit-transition: border-color 0.1s linear,background-color 0.1s linear;
  transition: border-color 0.1s linear,background-color 0.1s linear;
  border-radius: 50%;
  border-width: 1px;
  border-style: solid;
  border-color: #54595f;
  background-color: #fff;
}

.c1 > i {
  display: none;
}

.c5:focus ~ .c3 > div > .c0 {
  box-shadow: 0 0 4px 1px #54595f;
  border-color: #fff;
}

.c5:checked ~ .c3 > div > .c0 {
  border-color: #54595f;
}

.c5:checked ~ .c3 > div > .c0 > span {
  display: block;
}

.c5:disabled ~ .c3 > div > .c0 {
  border-color: #d8d8d8;
}

.c4 div > .c0 {
  border-color: #c12335;
}

.c5:focus ~ .c4 > div > .c0 {
  box-shadow: 0 0 4px 1px #54595f;
  border-color: #c12335;
}

.c5:checked ~ .c4 > div > .c0 {
  border-color: #54595f;
}

.c5:checked ~ .c4 > div > .c0 > span {
  display: block;
}

.c5:disabled ~ .c4 > div > .c0 {
  border-color: #d8d8d8;
}

.c2 {
  width: 0.75rem;
  height: 0.75rem;
  border-radius: 50%;
  background-color: #2B8000;
  display: none;
}

<Radio__FakeRadio
    data-testid="fake-input"
  >
    <StyledComponent
      data-testid="fake-input"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "c0",
            "isStatic": true,
            "lastClassName": "c1",
            "rules": Array [
              "height: 1.25rem;",
              "width: 1.25rem;",
              "min-height: 1.25rem;",
              "min-width: 1.25rem;",
              "outline: 0;",
              "line-height: 0;",
              "display: flex;",
              "align-items: center;",
              "justify-content: center;",
              "cursor: pointer;",
              "margin-top: 0.125rem;",
              "transition: border-color 0.1s linear, background-color 0.1s linear;",
              "border-radius: 50%;",
              "border-width: 1px;",
              "border-style: solid;",
              "border-color: #54595f;",
              "background-color: #fff;",
              "& > i {",
              "display: none;",
              "}",
            ],
          },
          "displayName": "Radio__FakeRadio",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "c0",
          "target": "span",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <span
        className="c0 c1"
        data-testid="fake-input"
      >
        <Radio__InnerChecked>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "Radio__InnerChecked-sc-1ifvbpn-3",
                  "isStatic": true,
                  "lastClassName": "c2",
                  "rules": Array [
                    "width: 0.75rem;",
                    "height: 0.75rem;",
                    "border-radius: 50%;",
                    "background-color: #2B8000;",
                    "display: none;",
                  ],
                },
                "displayName": "Radio__InnerChecked",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "Radio__InnerChecked-sc-1ifvbpn-3",
                "target": "span",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <span
              className="c2"
            />
          </StyledComponent>
        </Radio__InnerChecked>
      </span>
    </StyledComponent>
  </Radio__FakeRadio>,
  .c1 {
  height: 1.25rem;
  width: 1.25rem;
  min-height: 1.25rem;
  min-width: 1.25rem;
  outline: 0;
  line-height: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  cursor: pointer;
  margin-top: 0.125rem;
  -webkit-transition: border-color 0.1s linear,background-color 0.1s linear;
  transition: border-color 0.1s linear,background-color 0.1s linear;
  border-radius: 50%;
  border-width: 1px;
  border-style: solid;
  border-color: #54595f;
  background-color: #fff;
}

.c1 > i {
  display: none;
}

.c5:focus ~ .c3 > div > .c0 {
  box-shadow: 0 0 4px 1px #54595f;
  border-color: #fff;
}

.c5:checked ~ .c3 > div > .c0 {
  border-color: #54595f;
}

.c5:checked ~ .c3 > div > .c0 > span {
  display: block;
}

.c5:disabled ~ .c3 > div > .c0 {
  border-color: #d8d8d8;
}

.c4 div > .c0 {
  border-color: #c12335;
}

.c5:focus ~ .c4 > div > .c0 {
  box-shadow: 0 0 4px 1px #54595f;
  border-color: #c12335;
}

.c5:checked ~ .c4 > div > .c0 {
  border-color: #54595f;
}

.c5:checked ~ .c4 > div > .c0 > span {
  display: block;
}

.c5:disabled ~ .c4 > div > .c0 {
  border-color: #d8d8d8;
}

.c2 {
  width: 0.75rem;
  height: 0.75rem;
  border-radius: 50%;
  background-color: #2B8000;
  display: none;
}

<StyledComponent
    data-testid="fake-input"
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "c0",
          "isStatic": true,
          "lastClassName": "c1",
          "rules": Array [
            "height: 1.25rem;",
            "width: 1.25rem;",
            "min-height: 1.25rem;",
            "min-width: 1.25rem;",
            "outline: 0;",
            "line-height: 0;",
            "display: flex;",
            "align-items: center;",
            "justify-content: center;",
            "cursor: pointer;",
            "margin-top: 0.125rem;",
            "transition: border-color 0.1s linear, background-color 0.1s linear;",
            "border-radius: 50%;",
            "border-width: 1px;",
            "border-style: solid;",
            "border-color: #54595f;",
            "background-color: #fff;",
            "& > i {",
            "display: none;",
            "}",
          ],
        },
        "displayName": "Radio__FakeRadio",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "c0",
        "target": "span",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
  >
    <span
      className="c0 c1"
      data-testid="fake-input"
    >
      <Radio__InnerChecked>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "Radio__InnerChecked-sc-1ifvbpn-3",
                "isStatic": true,
                "lastClassName": "c2",
                "rules": Array [
                  "width: 0.75rem;",
                  "height: 0.75rem;",
                  "border-radius: 50%;",
                  "background-color: #2B8000;",
                  "display: none;",
                ],
              },
              "displayName": "Radio__InnerChecked",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "Radio__InnerChecked-sc-1ifvbpn-3",
              "target": "span",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <span
            className="c2"
          />
        </StyledComponent>
      </Radio__InnerChecked>
    </span>
  </StyledComponent>,
  .c1 {
  height: 1.25rem;
  width: 1.25rem;
  min-height: 1.25rem;
  min-width: 1.25rem;
  outline: 0;
  line-height: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  cursor: pointer;
  margin-top: 0.125rem;
  -webkit-transition: border-color 0.1s linear,background-color 0.1s linear;
  transition: border-color 0.1s linear,background-color 0.1s linear;
  border-radius: 50%;
  border-width: 1px;
  border-style: solid;
  border-color: #54595f;
  background-color: #fff;
}

.c1 > i {
  display: none;
}

.c5:focus ~ .c3 > div > .c0 {
  box-shadow: 0 0 4px 1px #54595f;
  border-color: #fff;
}

.c5:checked ~ .c3 > div > .c0 {
  border-color: #54595f;
}

.c5:checked ~ .c3 > div > .c0 > span {
  display: block;
}

.c5:disabled ~ .c3 > div > .c0 {
  border-color: #d8d8d8;
}

.c4 div > .c0 {
  border-color: #c12335;
}

.c5:focus ~ .c4 > div > .c0 {
  box-shadow: 0 0 4px 1px #54595f;
  border-color: #c12335;
}

.c5:checked ~ .c4 > div > .c0 {
  border-color: #54595f;
}

.c5:checked ~ .c4 > div > .c0 > span {
  display: block;
}

.c5:disabled ~ .c4 > div > .c0 {
  border-color: #d8d8d8;
}

.c2 {
  width: 0.75rem;
  height: 0.75rem;
  border-radius: 50%;
  background-color: #2B8000;
  display: none;
}

<span
    className="c0 c1"
    data-testid="fake-input"
  >
    <Radio__InnerChecked>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Radio__InnerChecked-sc-1ifvbpn-3",
              "isStatic": true,
              "lastClassName": "c2",
              "rules": Array [
                "width: 0.75rem;",
                "height: 0.75rem;",
                "border-radius: 50%;",
                "background-color: #2B8000;",
                "display: none;",
              ],
            },
            "displayName": "Radio__InnerChecked",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Radio__InnerChecked-sc-1ifvbpn-3",
            "target": "span",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <span
          className="c2"
        />
      </StyledComponent>
    </Radio__InnerChecked>
  </span>,
]
`;

exports[`Radio focusing can be focused and unfocused 1`] = `
Array [
  .c1 {
  height: 1.25rem;
  width: 1.25rem;
  min-height: 1.25rem;
  min-width: 1.25rem;
  outline: 0;
  line-height: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  cursor: pointer;
  margin-top: 0.125rem;
  -webkit-transition: border-color 0.1s linear,background-color 0.1s linear;
  transition: border-color 0.1s linear,background-color 0.1s linear;
  border-radius: 50%;
  border-width: 1px;
  border-style: solid;
  border-color: #54595f;
  background-color: #fff;
}

.c1 > i {
  display: none;
}

.c4:focus ~ .c3 > div > .c0 {
  box-shadow: 0 0 4px 1px #54595f;
  border-color: #fff;
}

.c4:checked ~ .c3 > div > .c0 {
  border-color: #54595f;
}

.c4:checked ~ .c3 > div > .c0 > span {
  display: block;
}

.c4:disabled ~ .c3 > div > .c0 {
  border-color: #d8d8d8;
}

.c2 {
  width: 0.75rem;
  height: 0.75rem;
  border-radius: 50%;
  background-color: #2B8000;
  display: none;
}

<Radio__FakeRadio
    data-testid="fake-input"
  >
    <StyledComponent
      data-testid="fake-input"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "c0",
            "isStatic": true,
            "lastClassName": "c1",
            "rules": Array [
              "height: 1.25rem;",
              "width: 1.25rem;",
              "min-height: 1.25rem;",
              "min-width: 1.25rem;",
              "outline: 0;",
              "line-height: 0;",
              "display: flex;",
              "align-items: center;",
              "justify-content: center;",
              "cursor: pointer;",
              "margin-top: 0.125rem;",
              "transition: border-color 0.1s linear, background-color 0.1s linear;",
              "border-radius: 50%;",
              "border-width: 1px;",
              "border-style: solid;",
              "border-color: #54595f;",
              "background-color: #fff;",
              "& > i {",
              "display: none;",
              "}",
            ],
          },
          "displayName": "Radio__FakeRadio",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "c0",
          "target": "span",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <span
        className="c0 c1"
        data-testid="fake-input"
      >
        <Radio__InnerChecked>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "Radio__InnerChecked-sc-1ifvbpn-3",
                  "isStatic": true,
                  "lastClassName": "c2",
                  "rules": Array [
                    "width: 0.75rem;",
                    "height: 0.75rem;",
                    "border-radius: 50%;",
                    "background-color: #2B8000;",
                    "display: none;",
                  ],
                },
                "displayName": "Radio__InnerChecked",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "Radio__InnerChecked-sc-1ifvbpn-3",
                "target": "span",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <span
              className="c2"
            />
          </StyledComponent>
        </Radio__InnerChecked>
      </span>
    </StyledComponent>
  </Radio__FakeRadio>,
  .c1 {
  height: 1.25rem;
  width: 1.25rem;
  min-height: 1.25rem;
  min-width: 1.25rem;
  outline: 0;
  line-height: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  cursor: pointer;
  margin-top: 0.125rem;
  -webkit-transition: border-color 0.1s linear,background-color 0.1s linear;
  transition: border-color 0.1s linear,background-color 0.1s linear;
  border-radius: 50%;
  border-width: 1px;
  border-style: solid;
  border-color: #54595f;
  background-color: #fff;
}

.c1 > i {
  display: none;
}

.c4:focus ~ .c3 > div > .c0 {
  box-shadow: 0 0 4px 1px #54595f;
  border-color: #fff;
}

.c4:checked ~ .c3 > div > .c0 {
  border-color: #54595f;
}

.c4:checked ~ .c3 > div > .c0 > span {
  display: block;
}

.c4:disabled ~ .c3 > div > .c0 {
  border-color: #d8d8d8;
}

.c2 {
  width: 0.75rem;
  height: 0.75rem;
  border-radius: 50%;
  background-color: #2B8000;
  display: none;
}

<StyledComponent
    data-testid="fake-input"
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "c0",
          "isStatic": true,
          "lastClassName": "c1",
          "rules": Array [
            "height: 1.25rem;",
            "width: 1.25rem;",
            "min-height: 1.25rem;",
            "min-width: 1.25rem;",
            "outline: 0;",
            "line-height: 0;",
            "display: flex;",
            "align-items: center;",
            "justify-content: center;",
            "cursor: pointer;",
            "margin-top: 0.125rem;",
            "transition: border-color 0.1s linear, background-color 0.1s linear;",
            "border-radius: 50%;",
            "border-width: 1px;",
            "border-style: solid;",
            "border-color: #54595f;",
            "background-color: #fff;",
            "& > i {",
            "display: none;",
            "}",
          ],
        },
        "displayName": "Radio__FakeRadio",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "c0",
        "target": "span",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
  >
    <span
      className="c0 c1"
      data-testid="fake-input"
    >
      <Radio__InnerChecked>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "Radio__InnerChecked-sc-1ifvbpn-3",
                "isStatic": true,
                "lastClassName": "c2",
                "rules": Array [
                  "width: 0.75rem;",
                  "height: 0.75rem;",
                  "border-radius: 50%;",
                  "background-color: #2B8000;",
                  "display: none;",
                ],
              },
              "displayName": "Radio__InnerChecked",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "Radio__InnerChecked-sc-1ifvbpn-3",
              "target": "span",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <span
            className="c2"
          />
        </StyledComponent>
      </Radio__InnerChecked>
    </span>
  </StyledComponent>,
  .c1 {
  height: 1.25rem;
  width: 1.25rem;
  min-height: 1.25rem;
  min-width: 1.25rem;
  outline: 0;
  line-height: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  cursor: pointer;
  margin-top: 0.125rem;
  -webkit-transition: border-color 0.1s linear,background-color 0.1s linear;
  transition: border-color 0.1s linear,background-color 0.1s linear;
  border-radius: 50%;
  border-width: 1px;
  border-style: solid;
  border-color: #54595f;
  background-color: #fff;
}

.c1 > i {
  display: none;
}

.c4:focus ~ .c3 > div > .c0 {
  box-shadow: 0 0 4px 1px #54595f;
  border-color: #fff;
}

.c4:checked ~ .c3 > div > .c0 {
  border-color: #54595f;
}

.c4:checked ~ .c3 > div > .c0 > span {
  display: block;
}

.c4:disabled ~ .c3 > div > .c0 {
  border-color: #d8d8d8;
}

.c2 {
  width: 0.75rem;
  height: 0.75rem;
  border-radius: 50%;
  background-color: #2B8000;
  display: none;
}

<span
    className="c0 c1"
    data-testid="fake-input"
  >
    <Radio__InnerChecked>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Radio__InnerChecked-sc-1ifvbpn-3",
              "isStatic": true,
              "lastClassName": "c2",
              "rules": Array [
                "width: 0.75rem;",
                "height: 0.75rem;",
                "border-radius: 50%;",
                "background-color: #2B8000;",
                "display: none;",
              ],
            },
            "displayName": "Radio__InnerChecked",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Radio__InnerChecked-sc-1ifvbpn-3",
            "target": "span",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <span
          className="c2"
        />
      </StyledComponent>
    </Radio__InnerChecked>
  </span>,
]
`;

exports[`Radio focusing can be focused and unfocused 2`] = `
Array [
  .c1 {
  height: 1.25rem;
  width: 1.25rem;
  min-height: 1.25rem;
  min-width: 1.25rem;
  outline: 0;
  line-height: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  cursor: pointer;
  margin-top: 0.125rem;
  -webkit-transition: border-color 0.1s linear,background-color 0.1s linear;
  transition: border-color 0.1s linear,background-color 0.1s linear;
  border-radius: 50%;
  border-width: 1px;
  border-style: solid;
  border-color: #54595f;
  background-color: #fff;
}

.c1 > i {
  display: none;
}

.c4:focus ~ .c3 > div > .c0 {
  box-shadow: 0 0 4px 1px #54595f;
  border-color: #fff;
}

.c4:checked ~ .c3 > div > .c0 {
  border-color: #54595f;
}

.c4:checked ~ .c3 > div > .c0 > span {
  display: block;
}

.c4:disabled ~ .c3 > div > .c0 {
  border-color: #d8d8d8;
}

.c2 {
  width: 0.75rem;
  height: 0.75rem;
  border-radius: 50%;
  background-color: #2B8000;
  display: none;
}

<Radio__FakeRadio
    data-testid="fake-input"
  >
    <StyledComponent
      data-testid="fake-input"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "c0",
            "isStatic": true,
            "lastClassName": "c1",
            "rules": Array [
              "height: 1.25rem;",
              "width: 1.25rem;",
              "min-height: 1.25rem;",
              "min-width: 1.25rem;",
              "outline: 0;",
              "line-height: 0;",
              "display: flex;",
              "align-items: center;",
              "justify-content: center;",
              "cursor: pointer;",
              "margin-top: 0.125rem;",
              "transition: border-color 0.1s linear, background-color 0.1s linear;",
              "border-radius: 50%;",
              "border-width: 1px;",
              "border-style: solid;",
              "border-color: #54595f;",
              "background-color: #fff;",
              "& > i {",
              "display: none;",
              "}",
            ],
          },
          "displayName": "Radio__FakeRadio",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "c0",
          "target": "span",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <span
        className="c0 c1"
        data-testid="fake-input"
      >
        <Radio__InnerChecked>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "Radio__InnerChecked-sc-1ifvbpn-3",
                  "isStatic": true,
                  "lastClassName": "c2",
                  "rules": Array [
                    "width: 0.75rem;",
                    "height: 0.75rem;",
                    "border-radius: 50%;",
                    "background-color: #2B8000;",
                    "display: none;",
                  ],
                },
                "displayName": "Radio__InnerChecked",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "Radio__InnerChecked-sc-1ifvbpn-3",
                "target": "span",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <span
              className="c2"
            />
          </StyledComponent>
        </Radio__InnerChecked>
      </span>
    </StyledComponent>
  </Radio__FakeRadio>,
  .c1 {
  height: 1.25rem;
  width: 1.25rem;
  min-height: 1.25rem;
  min-width: 1.25rem;
  outline: 0;
  line-height: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  cursor: pointer;
  margin-top: 0.125rem;
  -webkit-transition: border-color 0.1s linear,background-color 0.1s linear;
  transition: border-color 0.1s linear,background-color 0.1s linear;
  border-radius: 50%;
  border-width: 1px;
  border-style: solid;
  border-color: #54595f;
  background-color: #fff;
}

.c1 > i {
  display: none;
}

.c4:focus ~ .c3 > div > .c0 {
  box-shadow: 0 0 4px 1px #54595f;
  border-color: #fff;
}

.c4:checked ~ .c3 > div > .c0 {
  border-color: #54595f;
}

.c4:checked ~ .c3 > div > .c0 > span {
  display: block;
}

.c4:disabled ~ .c3 > div > .c0 {
  border-color: #d8d8d8;
}

.c2 {
  width: 0.75rem;
  height: 0.75rem;
  border-radius: 50%;
  background-color: #2B8000;
  display: none;
}

<StyledComponent
    data-testid="fake-input"
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "c0",
          "isStatic": true,
          "lastClassName": "c1",
          "rules": Array [
            "height: 1.25rem;",
            "width: 1.25rem;",
            "min-height: 1.25rem;",
            "min-width: 1.25rem;",
            "outline: 0;",
            "line-height: 0;",
            "display: flex;",
            "align-items: center;",
            "justify-content: center;",
            "cursor: pointer;",
            "margin-top: 0.125rem;",
            "transition: border-color 0.1s linear, background-color 0.1s linear;",
            "border-radius: 50%;",
            "border-width: 1px;",
            "border-style: solid;",
            "border-color: #54595f;",
            "background-color: #fff;",
            "& > i {",
            "display: none;",
            "}",
          ],
        },
        "displayName": "Radio__FakeRadio",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "c0",
        "target": "span",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
  >
    <span
      className="c0 c1"
      data-testid="fake-input"
    >
      <Radio__InnerChecked>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "Radio__InnerChecked-sc-1ifvbpn-3",
                "isStatic": true,
                "lastClassName": "c2",
                "rules": Array [
                  "width: 0.75rem;",
                  "height: 0.75rem;",
                  "border-radius: 50%;",
                  "background-color: #2B8000;",
                  "display: none;",
                ],
              },
              "displayName": "Radio__InnerChecked",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "Radio__InnerChecked-sc-1ifvbpn-3",
              "target": "span",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <span
            className="c2"
          />
        </StyledComponent>
      </Radio__InnerChecked>
    </span>
  </StyledComponent>,
  .c1 {
  height: 1.25rem;
  width: 1.25rem;
  min-height: 1.25rem;
  min-width: 1.25rem;
  outline: 0;
  line-height: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  cursor: pointer;
  margin-top: 0.125rem;
  -webkit-transition: border-color 0.1s linear,background-color 0.1s linear;
  transition: border-color 0.1s linear,background-color 0.1s linear;
  border-radius: 50%;
  border-width: 1px;
  border-style: solid;
  border-color: #54595f;
  background-color: #fff;
}

.c1 > i {
  display: none;
}

.c4:focus ~ .c3 > div > .c0 {
  box-shadow: 0 0 4px 1px #54595f;
  border-color: #fff;
}

.c4:checked ~ .c3 > div > .c0 {
  border-color: #54595f;
}

.c4:checked ~ .c3 > div > .c0 > span {
  display: block;
}

.c4:disabled ~ .c3 > div > .c0 {
  border-color: #d8d8d8;
}

.c2 {
  width: 0.75rem;
  height: 0.75rem;
  border-radius: 50%;
  background-color: #2B8000;
  display: none;
}

<span
    className="c0 c1"
    data-testid="fake-input"
  >
    <Radio__InnerChecked>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Radio__InnerChecked-sc-1ifvbpn-3",
              "isStatic": true,
              "lastClassName": "c2",
              "rules": Array [
                "width: 0.75rem;",
                "height: 0.75rem;",
                "border-radius: 50%;",
                "background-color: #2B8000;",
                "display: none;",
              ],
            },
            "displayName": "Radio__InnerChecked",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Radio__InnerChecked-sc-1ifvbpn-3",
            "target": "span",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <span
          className="c2"
        />
      </StyledComponent>
    </Radio__InnerChecked>
  </span>,
]
`;

exports[`Radio has a fake radio 1`] = `
Array [
  .c1 {
  height: 1.25rem;
  width: 1.25rem;
  min-height: 1.25rem;
  min-width: 1.25rem;
  outline: 0;
  line-height: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  cursor: pointer;
  margin-top: 0.125rem;
  -webkit-transition: border-color 0.1s linear,background-color 0.1s linear;
  transition: border-color 0.1s linear,background-color 0.1s linear;
  border-radius: 50%;
  border-width: 1px;
  border-style: solid;
  border-color: #54595f;
  background-color: #fff;
}

.c1 > i {
  display: none;
}

.c4:focus ~ .c3 > div > .c0 {
  box-shadow: 0 0 4px 1px #54595f;
  border-color: #fff;
}

.c4:checked ~ .c3 > div > .c0 {
  border-color: #54595f;
}

.c4:checked ~ .c3 > div > .c0 > span {
  display: block;
}

.c4:disabled ~ .c3 > div > .c0 {
  border-color: #d8d8d8;
}

.c2 {
  width: 0.75rem;
  height: 0.75rem;
  border-radius: 50%;
  background-color: #2B8000;
  display: none;
}

<Radio__FakeRadio
    data-testid="fake-input"
  >
    <StyledComponent
      data-testid="fake-input"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "c0",
            "isStatic": true,
            "lastClassName": "c1",
            "rules": Array [
              "height: 1.25rem;",
              "width: 1.25rem;",
              "min-height: 1.25rem;",
              "min-width: 1.25rem;",
              "outline: 0;",
              "line-height: 0;",
              "display: flex;",
              "align-items: center;",
              "justify-content: center;",
              "cursor: pointer;",
              "margin-top: 0.125rem;",
              "transition: border-color 0.1s linear, background-color 0.1s linear;",
              "border-radius: 50%;",
              "border-width: 1px;",
              "border-style: solid;",
              "border-color: #54595f;",
              "background-color: #fff;",
              "& > i {",
              "display: none;",
              "}",
            ],
          },
          "displayName": "Radio__FakeRadio",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "c0",
          "target": "span",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <span
        className="c0 c1"
        data-testid="fake-input"
      >
        <Radio__InnerChecked>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "Radio__InnerChecked-sc-1ifvbpn-3",
                  "isStatic": true,
                  "lastClassName": "c2",
                  "rules": Array [
                    "width: 0.75rem;",
                    "height: 0.75rem;",
                    "border-radius: 50%;",
                    "background-color: #2B8000;",
                    "display: none;",
                  ],
                },
                "displayName": "Radio__InnerChecked",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "Radio__InnerChecked-sc-1ifvbpn-3",
                "target": "span",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <span
              className="c2"
            />
          </StyledComponent>
        </Radio__InnerChecked>
      </span>
    </StyledComponent>
  </Radio__FakeRadio>,
  .c1 {
  height: 1.25rem;
  width: 1.25rem;
  min-height: 1.25rem;
  min-width: 1.25rem;
  outline: 0;
  line-height: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  cursor: pointer;
  margin-top: 0.125rem;
  -webkit-transition: border-color 0.1s linear,background-color 0.1s linear;
  transition: border-color 0.1s linear,background-color 0.1s linear;
  border-radius: 50%;
  border-width: 1px;
  border-style: solid;
  border-color: #54595f;
  background-color: #fff;
}

.c1 > i {
  display: none;
}

.c4:focus ~ .c3 > div > .c0 {
  box-shadow: 0 0 4px 1px #54595f;
  border-color: #fff;
}

.c4:checked ~ .c3 > div > .c0 {
  border-color: #54595f;
}

.c4:checked ~ .c3 > div > .c0 > span {
  display: block;
}

.c4:disabled ~ .c3 > div > .c0 {
  border-color: #d8d8d8;
}

.c2 {
  width: 0.75rem;
  height: 0.75rem;
  border-radius: 50%;
  background-color: #2B8000;
  display: none;
}

<StyledComponent
    data-testid="fake-input"
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "c0",
          "isStatic": true,
          "lastClassName": "c1",
          "rules": Array [
            "height: 1.25rem;",
            "width: 1.25rem;",
            "min-height: 1.25rem;",
            "min-width: 1.25rem;",
            "outline: 0;",
            "line-height: 0;",
            "display: flex;",
            "align-items: center;",
            "justify-content: center;",
            "cursor: pointer;",
            "margin-top: 0.125rem;",
            "transition: border-color 0.1s linear, background-color 0.1s linear;",
            "border-radius: 50%;",
            "border-width: 1px;",
            "border-style: solid;",
            "border-color: #54595f;",
            "background-color: #fff;",
            "& > i {",
            "display: none;",
            "}",
          ],
        },
        "displayName": "Radio__FakeRadio",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "c0",
        "target": "span",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
  >
    <span
      className="c0 c1"
      data-testid="fake-input"
    >
      <Radio__InnerChecked>
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "Radio__InnerChecked-sc-1ifvbpn-3",
                "isStatic": true,
                "lastClassName": "c2",
                "rules": Array [
                  "width: 0.75rem;",
                  "height: 0.75rem;",
                  "border-radius: 50%;",
                  "background-color: #2B8000;",
                  "display: none;",
                ],
              },
              "displayName": "Radio__InnerChecked",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "Radio__InnerChecked-sc-1ifvbpn-3",
              "target": "span",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
        >
          <span
            className="c2"
          />
        </StyledComponent>
      </Radio__InnerChecked>
    </span>
  </StyledComponent>,
  .c1 {
  height: 1.25rem;
  width: 1.25rem;
  min-height: 1.25rem;
  min-width: 1.25rem;
  outline: 0;
  line-height: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  cursor: pointer;
  margin-top: 0.125rem;
  -webkit-transition: border-color 0.1s linear,background-color 0.1s linear;
  transition: border-color 0.1s linear,background-color 0.1s linear;
  border-radius: 50%;
  border-width: 1px;
  border-style: solid;
  border-color: #54595f;
  background-color: #fff;
}

.c1 > i {
  display: none;
}

.c4:focus ~ .c3 > div > .c0 {
  box-shadow: 0 0 4px 1px #54595f;
  border-color: #fff;
}

.c4:checked ~ .c3 > div > .c0 {
  border-color: #54595f;
}

.c4:checked ~ .c3 > div > .c0 > span {
  display: block;
}

.c4:disabled ~ .c3 > div > .c0 {
  border-color: #d8d8d8;
}

.c2 {
  width: 0.75rem;
  height: 0.75rem;
  border-radius: 50%;
  background-color: #2B8000;
  display: none;
}

<span
    className="c0 c1"
    data-testid="fake-input"
  >
    <Radio__InnerChecked>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Radio__InnerChecked-sc-1ifvbpn-3",
              "isStatic": true,
              "lastClassName": "c2",
              "rules": Array [
                "width: 0.75rem;",
                "height: 0.75rem;",
                "border-radius: 50%;",
                "background-color: #2B8000;",
                "display: none;",
              ],
            },
            "displayName": "Radio__InnerChecked",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Radio__InnerChecked-sc-1ifvbpn-3",
            "target": "span",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <span
          className="c2"
        />
      </StyledComponent>
    </Radio__InnerChecked>
  </span>,
]
`;

exports[`Radio must have a label 1`] = `
.c7 {
  color: #2a2c2e;
  color: inherit;
  word-wrap: break-word;
  font-size: inherit;
  font-weight: inherit;
}

.c7 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c6 > *:not(:last-child) {
  margin-bottom: 0.5rem;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c1 > *:not(:last-child) {
  margin-right: 1rem;
}

.c3 {
  height: 1.25rem;
  width: 1.25rem;
  min-height: 1.25rem;
  min-width: 1.25rem;
  outline: 0;
  line-height: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  cursor: pointer;
  margin-top: 0.125rem;
  -webkit-transition: border-color 0.1s linear,background-color 0.1s linear;
  transition: border-color 0.1s linear,background-color 0.1s linear;
  border-radius: 50%;
  border-width: 1px;
  border-style: solid;
  border-color: #54595f;
  background-color: #fff;
}

.c3 > i {
  display: none;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  cursor: pointer;
}

.c8:focus ~ .c0 > div > .c2 {
  box-shadow: 0 0 4px 1px #54595f;
  border-color: #fff;
}

.c8:checked ~ .c0 > div > .c2 {
  border-color: #54595f;
}

.c8:checked ~ .c0 > div > .c2 > span {
  display: block;
}

.c8:disabled ~ .c0 > div > .c2 {
  border-color: #d8d8d8;
}

.c8:disabled ~ .c0 > div > div {
  color: #d8d8d8;
}

.c4 {
  width: 0.75rem;
  height: 0.75rem;
  border-radius: 50%;
  background-color: #2B8000;
  display: none;
}

.c5 {
  width: 100%;
}

<label
  className="c0"
  data-testid="checkbox-label"
  htmlFor="radiogroup_the-value"
>
  <Box
    between={3}
    inline={true}
    tag="div"
  >
    <styled.div
      between={3}
      inline={true}
      tag="div"
    >
      <StyledComponent
        between={3}
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [
              [Function],
            ],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bdVaJa",
              "isStatic": false,
              "lastClassName": "c6",
              "rules": Array [
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bdVaJa",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        inline={true}
        tag="div"
      >
        <div
          className="c1"
        >
          <Radio__FakeRadio
            data-testid="fake-input"
          >
            <StyledComponent
              data-testid="fake-input"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "c2",
                    "isStatic": true,
                    "lastClassName": "c3",
                    "rules": Array [
                      "height: 1.25rem;",
                      "width: 1.25rem;",
                      "min-height: 1.25rem;",
                      "min-width: 1.25rem;",
                      "outline: 0;",
                      "line-height: 0;",
                      "display: flex;",
                      "align-items: center;",
                      "justify-content: center;",
                      "cursor: pointer;",
                      "margin-top: 0.125rem;",
                      "transition: border-color 0.1s linear, background-color 0.1s linear;",
                      "border-radius: 50%;",
                      "border-width: 1px;",
                      "border-style: solid;",
                      "border-color: #54595f;",
                      "background-color: #fff;",
                      "& > i {",
                      "display: none;",
                      "}",
                    ],
                  },
                  "displayName": "Radio__FakeRadio",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "c2",
                  "target": "span",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <span
                className="c2 c3"
                data-testid="fake-input"
              >
                <Radio__InnerChecked>
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "Radio__InnerChecked-sc-1ifvbpn-3",
                          "isStatic": true,
                          "lastClassName": "c4",
                          "rules": Array [
                            "width: 0.75rem;",
                            "height: 0.75rem;",
                            "border-radius: 50%;",
                            "background-color: #2B8000;",
                            "display: none;",
                          ],
                        },
                        "displayName": "Radio__InnerChecked",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "Radio__InnerChecked-sc-1ifvbpn-3",
                        "target": "span",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                  >
                    <span
                      className="c4"
                    />
                  </StyledComponent>
                </Radio__InnerChecked>
              </span>
            </StyledComponent>
          </Radio__FakeRadio>
          <Styled(Box)
            between={2}
            inline={false}
            tag="div"
          >
            <StyledComponent
              between={2}
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-htpNat",
                    "isStatic": true,
                    "lastClassName": "c5",
                    "rules": Array [
                      "width: 100%;",
                    ],
                  },
                  "defaultProps": Object {
                    "below": undefined,
                    "between": undefined,
                    "className": undefined,
                    "horizontal": undefined,
                    "inline": false,
                    "inset": undefined,
                    "tag": "div",
                    "vertical": undefined,
                  },
                  "displayName": "Styled(Box)",
                  "foldedComponentIds": Array [],
                  "propTypes": Object {
                    "below": [Function],
                    "between": [Function],
                    "children": [Function],
                    "className": [Function],
                    "horizontal": [Function],
                    "inline": [Function],
                    "inset": [Function],
                    "tag": [Function],
                    "vertical": [Function],
                  },
                  "render": [Function],
                  "styledComponentId": "sc-htpNat",
                  "target": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "defaultProps": Object {
                      "below": undefined,
                      "between": undefined,
                      "className": undefined,
                      "horizontal": undefined,
                      "inline": false,
                      "inset": undefined,
                      "tag": "div",
                      "vertical": undefined,
                    },
                    "displayName": "Box",
                    "propTypes": Object {
                      "below": [Function],
                      "between": [Function],
                      "children": [Function],
                      "className": [Function],
                      "horizontal": [Function],
                      "inline": [Function],
                      "inset": [Function],
                      "tag": [Function],
                      "vertical": [Function],
                    },
                    "render": [Function],
                  },
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              inline={false}
              tag="div"
            >
              <Box
                between={2}
                className="c5"
                inline={false}
                tag="div"
              >
                <styled.div
                  between={2}
                  className="c5"
                  inline={false}
                  tag="div"
                >
                  <StyledComponent
                    between={2}
                    className="c5"
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [
                          [Function],
                        ],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bdVaJa",
                          "isStatic": false,
                          "lastClassName": "c6",
                          "rules": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bdVaJa",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    inline={false}
                    tag="div"
                  >
                    <div
                      className="c5 sc-htpNat c5 c6"
                    >
                      <ColoredTextProvider
                        tag="div"
                      >
                        <div>
                          <Text
                            block={false}
                            bold={false}
                            invert={false}
                            size="base"
                          >
                            <Text__StyledText
                              block={false}
                              bold={false}
                              inheritColor={true}
                              invert={false}
                              size="base"
                            >
                              <StyledComponent
                                block={false}
                                bold={false}
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Text__StyledText-sc-1m0rr67-0",
                                      "isStatic": false,
                                      "lastClassName": "c7",
                                      "rules": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        "sup {",
                                        "top: -0.5em;",
                                        "font-size: 0.875rem;",
                                        "position: relative;",
                                        "vertical-align: baseline;",
                                        "padding-left: 0.1em;",
                                        "}",
                                      ],
                                    },
                                    "displayName": "Text__StyledText",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Text__StyledText-sc-1m0rr67-0",
                                    "target": "span",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                inheritColor={true}
                                invert={false}
                                size="base"
                              >
                                <span
                                  className="c7"
                                  size="base"
                                >
                                  Some label
                                </span>
                              </StyledComponent>
                            </Text__StyledText>
                          </Text>
                        </div>
                      </ColoredTextProvider>
                    </div>
                  </StyledComponent>
                </styled.div>
              </Box>
            </StyledComponent>
          </Styled(Box)>
        </div>
      </StyledComponent>
    </styled.div>
  </Box>
</label>
`;

exports[`Radio renders 1`] = `
.c9 {
  color: #2a2c2e;
  color: inherit;
  word-wrap: break-word;
  font-size: inherit;
  font-weight: inherit;
}

.c9 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c0 > *:not(:last-child) {
  margin-bottom: 0.5rem;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c4 > *:not(:last-child) {
  margin-right: 1rem;
}

.c6 {
  height: 1.25rem;
  width: 1.25rem;
  min-height: 1.25rem;
  min-width: 1.25rem;
  outline: 0;
  line-height: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  cursor: pointer;
  margin-top: 0.125rem;
  -webkit-transition: border-color 0.1s linear,background-color 0.1s linear;
  transition: border-color 0.1s linear,background-color 0.1s linear;
  border-radius: 50%;
  border-width: 1px;
  border-style: solid;
  border-color: #54595f;
  background-color: #fff;
}

.c6 > i {
  display: none;
}

.c2 {
  position: absolute;
  width: 1.2rem;
  height: 1.2rem;
  margin: 2px 1px;
  opacity: 0;
  pointer-events: none;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  cursor: pointer;
}

.c1:focus ~ .c3 > div > .c5 {
  box-shadow: 0 0 4px 1px #54595f;
  border-color: #fff;
}

.c1:checked ~ .c3 > div > .c5 {
  border-color: #54595f;
}

.c1:checked ~ .c3 > div > .c5 > span {
  display: block;
}

.c1:disabled ~ .c3 > div > .c5 {
  border-color: #d8d8d8;
}

.c1:disabled ~ .c3 > div > div {
  color: #d8d8d8;
}

.c7 {
  width: 0.75rem;
  height: 0.75rem;
  border-radius: 50%;
  background-color: #2B8000;
  display: none;
}

.c8 {
  width: 100%;
}

<div
  class="c0"
>
  <input
    aria-invalid="false"
    class="c1 c2"
    data-testid="hidden-input"
    id="the-group_the-value"
    name="the-group"
    type="radio"
    value="the-value"
  />
  <label
    class="c3"
    data-testid="checkbox-label"
    for="the-group_the-value"
  >
    <div
      class="c4"
    >
      <span
        class="c5 c6"
        data-testid="fake-input"
      >
        <span
          class="c7"
        />
      </span>
      <div
        class="c8 sc-htpNat c8 c0"
      >
        <div>
          <span
            class="c9"
          >
            A label
          </span>
        </div>
      </div>
    </div>
  </label>
</div>
`;
