// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ExpandCollapse accessibility wraps a heading tag around a panel label 1`] = `
.c4 {
  color: #2a2c2e;
  word-wrap: break-word;
  font-size: 1.25rem;
  -webkit-letter-spacing: -1px;
  -moz-letter-spacing: -1px;
  -ms-letter-spacing: -1px;
  letter-spacing: -1px;
  line-height: 1.6;
  word-wrap: break-word;
  font-weight: 400;
}

.c4 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

.c5 {
  font-family: 'TELUS Core Icons';
  display: inline-block;
  font-weight: normal;
  font-style: normal;
  speak: none;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  text-transform: none;
  text-rendering: auto;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  line-height: 1;
  vertical-align: middle;
  color: #2B8000;
  font-size: 1rem;
}

.c5::before {
  content: '\\f105';
}

.c1 {
  display: block;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c2 > *:not(:last-child) {
  margin-right: 1rem;
}

.c0 {
  padding: 0;
  margin: 0;
  border-width: 0;
  font-family: "TELUS-Web","Helvetica Neue",Helvetica,Arial,sans-serif;
  color: #2a2c2e;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: none;
  box-shadow: none;
  cursor: pointer;
  width: 100%;
  text-align: left;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
}

.c8 {
  width: 100%;
}

@media (prefers-reduced-motion:reduce) {
  .c3 {
    -webkit-transition: none !important;
    transition: none !important;
  }
}

<PanelWrapper__HeaderButtonClickable
  aria-expanded={false}
  disabled={false}
  onClick={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  panelDisabled={false}
  type="button"
>
  <StyledComponent
    aria-expanded={false}
    disabled={false}
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "PanelWrapper__HeaderButtonClickable-doiyjm-0",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            "padding: 0;",
            "margin: 0;",
            "border-width: 0;",
            "font-family: \\"TELUS-Web\\", \\"Helvetica Neue\\", Helvetica, Arial, sans-serif;",
            "color: #2a2c2e;",
            "appearance: none;",
            "background: none;",
            "box-shadow: none;",
            "cursor: pointer;",
            [Function],
          ],
        },
        "displayName": "PanelWrapper__HeaderButtonClickable",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "PanelWrapper__HeaderButtonClickable-doiyjm-0",
        "target": "button",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
    onClick={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    panelDisabled={false}
    type="button"
  >
    <button
      aria-expanded={false}
      className="c0"
      disabled={false}
      onClick={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      type="button"
    >
      <Box
        inline={false}
        tag="div"
        vertical={3}
      >
        <styled.div
          inline={false}
          tag="div"
          vertical={3}
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [
                  [Function],
                ],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bdVaJa",
                  "isStatic": false,
                  "lastClassName": "eHGTRX",
                  "rules": Array [
                    [Function],
                    [Function],
                    [Function],
                    [Function],
                    [Function],
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bdVaJa",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            inline={false}
            tag="div"
            vertical={3}
          >
            <div
              className="c1"
            >
              <Box
                between={3}
                inline={true}
                tag="div"
              >
                <styled.div
                  between={3}
                  inline={true}
                  tag="div"
                >
                  <StyledComponent
                    between={3}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [
                          [Function],
                        ],
                        "componentStyle": ComponentStyle {
                          "componentId": "sc-bdVaJa",
                          "isStatic": false,
                          "lastClassName": "eHGTRX",
                          "rules": Array [
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                            [Function],
                          ],
                        },
                        "displayName": "styled.div",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "sc-bdVaJa",
                        "target": "div",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    inline={true}
                    tag="div"
                  >
                    <div
                      className="c2"
                    >
                      <PanelWrapper__CaretContainer
                        isDisabled={false}
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "PanelWrapper__CaretContainer-doiyjm-1",
                                "isStatic": false,
                                "lastClassName": "lkXOVg",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "PanelWrapper__CaretContainer",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "PanelWrapper__CaretContainer-doiyjm-1",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          isDisabled={false}
                        >
                          <div
                            className=""
                          >
                            <Translate
                              direction="y"
                              distance="0.25rem"
                              in={false}
                              timeout={300}
                            >
                              <Transition
                                appear={false}
                                enter={true}
                                exit={true}
                                in={false}
                                mountOnEnter={false}
                                onEnter={[Function]}
                                onEntered={[Function]}
                                onEntering={[Function]}
                                onExit={[Function]}
                                onExited={[Function]}
                                onExiting={[Function]}
                                timeout={300}
                                unmountOnExit={false}
                              >
                                <Translate__StyledContainer
                                  style={
                                    Object {
                                      "transition": "transform 300ms",
                                    }
                                  }
                                >
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "Translate__StyledContainer-lgiaqm-0",
                                          "isStatic": true,
                                          "lastClassName": "c3",
                                          "rules": Array [
                                            "@media (prefers-reduced-motion: reduce) {",
                                            "transition: none !important;",
                                            "}",
                                          ],
                                        },
                                        "displayName": "Translate__StyledContainer",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "Translate__StyledContainer-lgiaqm-0",
                                        "target": "div",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    style={
                                      Object {
                                        "transition": "transform 300ms",
                                      }
                                    }
                                  >
                                    <div
                                      className="c3"
                                      style={
                                        Object {
                                          "transition": "transform 300ms",
                                        }
                                      }
                                    >
                                      <Text
                                        block={false}
                                        bold={false}
                                        invert={false}
                                        size="large"
                                      >
                                        <Text__StyledText
                                          block={false}
                                          bold={false}
                                          invert={false}
                                          size="large"
                                        >
                                          <StyledComponent
                                            block={false}
                                            bold={false}
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "Text__StyledText-sc-1m0rr67-0",
                                                  "isStatic": false,
                                                  "lastClassName": "dWdjsD",
                                                  "rules": Array [
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    "sup {",
                                                    "top: -0.5em;",
                                                    "font-size: 0.875rem;",
                                                    "position: relative;",
                                                    "vertical-align: baseline;",
                                                    "padding-left: 0.1em;",
                                                    "}",
                                                  ],
                                                },
                                                "displayName": "Text__StyledText",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "Text__StyledText-sc-1m0rr67-0",
                                                "target": "span",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            invert={false}
                                            size="large"
                                          >
                                            <span
                                              className="c4"
                                              size="large"
                                            >
                                              <DecorativeIcon
                                                size={16}
                                                symbol="caretDown"
                                                variant="primary"
                                              >
                                                <Icon
                                                  aria-hidden="true"
                                                  size={16}
                                                  symbol="caretDown"
                                                  variant="primary"
                                                >
                                                  <Icon__StyledIcon
                                                    aria-hidden="true"
                                                    iSize={16}
                                                    symbol="caretDown"
                                                    variant="primary"
                                                  >
                                                    <StyledComponent
                                                      aria-hidden="true"
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "Icon__StyledIcon-sc-1g20dn8-0",
                                                            "isStatic": false,
                                                            "lastClassName": "c5",
                                                            "rules": Array [
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                            ],
                                                          },
                                                          "displayName": "Icon__StyledIcon",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "Icon__StyledIcon-sc-1g20dn8-0",
                                                          "target": "i",
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                      iSize={16}
                                                      symbol="caretDown"
                                                      variant="primary"
                                                    >
                                                      <i
                                                        aria-hidden="true"
                                                        className="c5"
                                                      />
                                                    </StyledComponent>
                                                  </Icon__StyledIcon>
                                                </Icon>
                                              </DecorativeIcon>
                                            </span>
                                          </StyledComponent>
                                        </Text__StyledText>
                                      </Text>
                                    </div>
                                  </StyledComponent>
                                </Translate__StyledContainer>
                              </Transition>
                            </Translate>
                          </div>
                        </StyledComponent>
                      </PanelWrapper__CaretContainer>
                      <PanelWrapper__HeaderContainer
                        direction="row"
                      >
                        <StyledComponent
                          direction="row"
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "PanelWrapper__HeaderContainer-doiyjm-2",
                                "isStatic": false,
                                "lastClassName": "c7",
                                "rules": Array [
                                  [Function],
                                ],
                              },
                              "displayName": "PanelWrapper__HeaderContainer",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "PanelWrapper__HeaderContainer-doiyjm-2",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                        >
                          <div
                            className="c6"
                            direction="row"
                          >
                            <PanelWrapper__HeaderContainer
                              direction="column"
                            >
                              <StyledComponent
                                direction="column"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "PanelWrapper__HeaderContainer-doiyjm-2",
                                      "isStatic": false,
                                      "lastClassName": "c7",
                                      "rules": Array [
                                        [Function],
                                      ],
                                    },
                                    "displayName": "PanelWrapper__HeaderContainer",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "PanelWrapper__HeaderContainer-doiyjm-2",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <div
                                  className="c7"
                                  direction="column"
                                >
                                  <PanelWrapper__HeaderTitleContainer>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "PanelWrapper__HeaderTitleContainer-doiyjm-3",
                                            "isStatic": true,
                                            "lastClassName": "c8",
                                            "rules": Array [
                                              "width: 100%;",
                                            ],
                                          },
                                          "displayName": "PanelWrapper__HeaderTitleContainer",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "PanelWrapper__HeaderTitleContainer-doiyjm-3",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="c8"
                                      >
                                        <Text
                                          block={false}
                                          bold={false}
                                          invert={false}
                                          size="large"
                                        >
                                          <Text__StyledText
                                            block={false}
                                            bold={false}
                                            invert={false}
                                            size="large"
                                          >
                                            <StyledComponent
                                              block={false}
                                              bold={false}
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "Text__StyledText-sc-1m0rr67-0",
                                                    "isStatic": false,
                                                    "lastClassName": "dWdjsD",
                                                    "rules": Array [
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      [Function],
                                                      "sup {",
                                                      "top: -0.5em;",
                                                      "font-size: 0.875rem;",
                                                      "position: relative;",
                                                      "vertical-align: baseline;",
                                                      "padding-left: 0.1em;",
                                                      "}",
                                                    ],
                                                  },
                                                  "displayName": "Text__StyledText",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "Text__StyledText-sc-1m0rr67-0",
                                                  "target": "span",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              invert={false}
                                              size="large"
                                            >
                                              <span
                                                className="c4"
                                                size="large"
                                              >
                                                Panel title
                                              </span>
                                            </StyledComponent>
                                          </Text__StyledText>
                                        </Text>
                                      </div>
                                    </StyledComponent>
                                  </PanelWrapper__HeaderTitleContainer>
                                </div>
                              </StyledComponent>
                            </PanelWrapper__HeaderContainer>
                          </div>
                        </StyledComponent>
                      </PanelWrapper__HeaderContainer>
                    </div>
                  </StyledComponent>
                </styled.div>
              </Box>
            </div>
          </StyledComponent>
        </styled.div>
      </Box>
    </button>
  </StyledComponent>
</PanelWrapper__HeaderButtonClickable>
`;

exports[`ExpandCollapse disabled panels are rendered in a disabled treatment 1`] = `
.c5 {
  color: #2a2c2e;
  word-wrap: break-word;
  font-size: 1.25rem;
  -webkit-letter-spacing: -1px;
  -moz-letter-spacing: -1px;
  -ms-letter-spacing: -1px;
  letter-spacing: -1px;
  line-height: 1.6;
  word-wrap: break-word;
  font-weight: 400;
}

.c5 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

.c6 {
  font-family: 'TELUS Core Icons';
  display: inline-block;
  font-weight: normal;
  font-style: normal;
  speak: none;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  text-transform: none;
  text-rendering: auto;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  line-height: 1;
  vertical-align: middle;
  color: #2B8000;
  font-size: 1rem;
}

.c6::before {
  content: '\\f105';
}

.c1 {
  display: block;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c2 > *:not(:last-child) {
  margin-right: 1rem;
}

.c0 {
  padding: 0;
  margin: 0;
  border-width: 0;
  font-family: "TELUS-Web","Helvetica Neue",Helvetica,Arial,sans-serif;
  color: #2a2c2e;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: none;
  box-shadow: none;
  cursor: pointer;
  width: 100%;
  text-align: left;
  background: #f7f7f8;
  cursor: default;
}

.c3 {
  visibility: hidden;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
}

.c9 {
  width: 100%;
}

@media (prefers-reduced-motion:reduce) {
  .c4 {
    -webkit-transition: none !important;
    transition: none !important;
  }
}

<button
  aria-expanded={false}
  className="c0"
  disabled={true}
  onClick={[Function]}
  onMouseEnter={[Function]}
  onMouseLeave={[Function]}
  type="button"
>
  <Box
    inline={false}
    tag="div"
    vertical={3}
  >
    <styled.div
      inline={false}
      tag="div"
      vertical={3}
    >
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [
              [Function],
            ],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bdVaJa",
              "isStatic": false,
              "lastClassName": "eHGTRX",
              "rules": Array [
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bdVaJa",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        inline={false}
        tag="div"
        vertical={3}
      >
        <div
          className="c1"
        >
          <Box
            between={3}
            inline={true}
            tag="div"
          >
            <styled.div
              between={3}
              inline={true}
              tag="div"
            >
              <StyledComponent
                between={3}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [
                      [Function],
                    ],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-bdVaJa",
                      "isStatic": false,
                      "lastClassName": "eHGTRX",
                      "rules": Array [
                        [Function],
                        [Function],
                        [Function],
                        [Function],
                        [Function],
                      ],
                    },
                    "displayName": "styled.div",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-bdVaJa",
                    "target": "div",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                inline={true}
                tag="div"
              >
                <div
                  className="c2"
                >
                  <PanelWrapper__CaretContainer
                    isDisabled={true}
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "PanelWrapper__CaretContainer-doiyjm-1",
                            "isStatic": false,
                            "lastClassName": "c3",
                            "rules": Array [
                              [Function],
                            ],
                          },
                          "displayName": "PanelWrapper__CaretContainer",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "PanelWrapper__CaretContainer-doiyjm-1",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      isDisabled={true}
                    >
                      <div
                        className="c3"
                      >
                        <Translate
                          direction="y"
                          distance="0.25rem"
                          in={false}
                          timeout={300}
                        >
                          <Transition
                            appear={false}
                            enter={true}
                            exit={true}
                            in={false}
                            mountOnEnter={false}
                            onEnter={[Function]}
                            onEntered={[Function]}
                            onEntering={[Function]}
                            onExit={[Function]}
                            onExited={[Function]}
                            onExiting={[Function]}
                            timeout={300}
                            unmountOnExit={false}
                          >
                            <Translate__StyledContainer
                              style={
                                Object {
                                  "transition": "transform 300ms",
                                }
                              }
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "Translate__StyledContainer-lgiaqm-0",
                                      "isStatic": true,
                                      "lastClassName": "c4",
                                      "rules": Array [
                                        "@media (prefers-reduced-motion: reduce) {",
                                        "transition: none !important;",
                                        "}",
                                      ],
                                    },
                                    "displayName": "Translate__StyledContainer",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "Translate__StyledContainer-lgiaqm-0",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                style={
                                  Object {
                                    "transition": "transform 300ms",
                                  }
                                }
                              >
                                <div
                                  className="c4"
                                  style={
                                    Object {
                                      "transition": "transform 300ms",
                                    }
                                  }
                                >
                                  <Text
                                    block={false}
                                    bold={false}
                                    invert={false}
                                    size="large"
                                  >
                                    <Text__StyledText
                                      block={false}
                                      bold={false}
                                      invert={false}
                                      size="large"
                                    >
                                      <StyledComponent
                                        block={false}
                                        bold={false}
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "Text__StyledText-sc-1m0rr67-0",
                                              "isStatic": false,
                                              "lastClassName": "dWdjsD",
                                              "rules": Array [
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                [Function],
                                                "sup {",
                                                "top: -0.5em;",
                                                "font-size: 0.875rem;",
                                                "position: relative;",
                                                "vertical-align: baseline;",
                                                "padding-left: 0.1em;",
                                                "}",
                                              ],
                                            },
                                            "displayName": "Text__StyledText",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "Text__StyledText-sc-1m0rr67-0",
                                            "target": "span",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        invert={false}
                                        size="large"
                                      >
                                        <span
                                          className="c5"
                                          size="large"
                                        >
                                          <DecorativeIcon
                                            size={16}
                                            symbol="caretDown"
                                            variant="primary"
                                          >
                                            <Icon
                                              aria-hidden="true"
                                              size={16}
                                              symbol="caretDown"
                                              variant="primary"
                                            >
                                              <Icon__StyledIcon
                                                aria-hidden="true"
                                                iSize={16}
                                                symbol="caretDown"
                                                variant="primary"
                                              >
                                                <StyledComponent
                                                  aria-hidden="true"
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "Icon__StyledIcon-sc-1g20dn8-0",
                                                        "isStatic": false,
                                                        "lastClassName": "c6",
                                                        "rules": Array [
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                        ],
                                                      },
                                                      "displayName": "Icon__StyledIcon",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "Icon__StyledIcon-sc-1g20dn8-0",
                                                      "target": "i",
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                  iSize={16}
                                                  symbol="caretDown"
                                                  variant="primary"
                                                >
                                                  <i
                                                    aria-hidden="true"
                                                    className="c6"
                                                  />
                                                </StyledComponent>
                                              </Icon__StyledIcon>
                                            </Icon>
                                          </DecorativeIcon>
                                        </span>
                                      </StyledComponent>
                                    </Text__StyledText>
                                  </Text>
                                </div>
                              </StyledComponent>
                            </Translate__StyledContainer>
                          </Transition>
                        </Translate>
                      </div>
                    </StyledComponent>
                  </PanelWrapper__CaretContainer>
                  <PanelWrapper__HeaderContainer
                    direction="row"
                  >
                    <StyledComponent
                      direction="row"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "PanelWrapper__HeaderContainer-doiyjm-2",
                            "isStatic": false,
                            "lastClassName": "c8",
                            "rules": Array [
                              [Function],
                            ],
                          },
                          "displayName": "PanelWrapper__HeaderContainer",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "PanelWrapper__HeaderContainer-doiyjm-2",
                          "target": "div",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <div
                        className="c7"
                        direction="row"
                      >
                        <PanelWrapper__HeaderContainer
                          direction="column"
                        >
                          <StyledComponent
                            direction="column"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "PanelWrapper__HeaderContainer-doiyjm-2",
                                  "isStatic": false,
                                  "lastClassName": "c8",
                                  "rules": Array [
                                    [Function],
                                  ],
                                },
                                "displayName": "PanelWrapper__HeaderContainer",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "PanelWrapper__HeaderContainer-doiyjm-2",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <div
                              className="c8"
                              direction="column"
                            >
                              <PanelWrapper__HeaderTitleContainer>
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "PanelWrapper__HeaderTitleContainer-doiyjm-3",
                                        "isStatic": true,
                                        "lastClassName": "c9",
                                        "rules": Array [
                                          "width: 100%;",
                                        ],
                                      },
                                      "displayName": "PanelWrapper__HeaderTitleContainer",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "PanelWrapper__HeaderTitleContainer-doiyjm-3",
                                      "target": "div",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <div
                                    className="c9"
                                  >
                                    <Text
                                      block={false}
                                      bold={false}
                                      invert={false}
                                      size="large"
                                    >
                                      <Text__StyledText
                                        block={false}
                                        bold={false}
                                        invert={false}
                                        size="large"
                                      >
                                        <StyledComponent
                                          block={false}
                                          bold={false}
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "Text__StyledText-sc-1m0rr67-0",
                                                "isStatic": false,
                                                "lastClassName": "dWdjsD",
                                                "rules": Array [
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  "sup {",
                                                  "top: -0.5em;",
                                                  "font-size: 0.875rem;",
                                                  "position: relative;",
                                                  "vertical-align: baseline;",
                                                  "padding-left: 0.1em;",
                                                  "}",
                                                ],
                                              },
                                              "displayName": "Text__StyledText",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "Text__StyledText-sc-1m0rr67-0",
                                              "target": "span",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          invert={false}
                                          size="large"
                                        >
                                          <span
                                            className="c5"
                                            size="large"
                                          >
                                            Panel title
                                          </span>
                                        </StyledComponent>
                                      </Text__StyledText>
                                    </Text>
                                  </div>
                                </StyledComponent>
                              </PanelWrapper__HeaderTitleContainer>
                            </div>
                          </StyledComponent>
                        </PanelWrapper__HeaderContainer>
                      </div>
                    </StyledComponent>
                  </PanelWrapper__HeaderContainer>
                </div>
              </StyledComponent>
            </styled.div>
          </Box>
        </div>
      </StyledComponent>
    </styled.div>
  </Box>
</button>
`;

exports[`ExpandCollapse empty panels renders 1`] = `
.c8 {
  color: #2a2c2e;
  word-wrap: break-word;
  font-size: 1.25rem;
  -webkit-letter-spacing: -1px;
  -moz-letter-spacing: -1px;
  -ms-letter-spacing: -1px;
  letter-spacing: -1px;
  line-height: 1.6;
  word-wrap: break-word;
  font-weight: 400;
}

.c8 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

.c1 {
  padding: 0;
  margin: 0;
  border-width: 0;
  -webkit-transform: rotate(-0.00001deg);
  -ms-transform: rotate(-0.00001deg);
  transform: rotate(-0.00001deg);
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: 100%;
  height: 1px;
  background-color: #d8d8d8;
}

.c3 {
  display: block;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c4 > *:not(:last-child) {
  margin-right: 1rem;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
}

.c7 {
  width: 100%;
}

.c2 {
  margin-left: 1.5rem;
}

.c0 {
  background-color: #fff;
}

<ExpandCollapse
  open={Array []}
  topDivider={true}
>
  <Panels
    isPanelOpen={[Function]}
    open={Array []}
    togglePanel={[Function]}
    topDivider={true}
  >
    <Panels__PanelBase
      open={Array []}
    >
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Panels__PanelBase-sc-78ahii-0",
              "isStatic": true,
              "lastClassName": "c0",
              "rules": Array [
                "background-color: #fff;",
              ],
            },
            "displayName": "Panels__PanelBase",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Panels__PanelBase-sc-78ahii-0",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        open={Array []}
      >
        <div
          className="c0"
          open={Array []}
        >
          <HairlineDivider
            gradient={false}
            vertical={false}
          >
            <HairlineDivider__StyledHairlineDivider
              gradient={false}
              vertical={false}
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "HairlineDivider__StyledHairlineDivider-biamlk-0",
                      "isStatic": false,
                      "lastClassName": "c1",
                      "rules": Array [
                        "padding: 0;",
                        "margin: 0;",
                        "border-width: 0;",
                        [Function],
                      ],
                    },
                    "displayName": "HairlineDivider__StyledHairlineDivider",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "HairlineDivider__StyledHairlineDivider-biamlk-0",
                    "target": "hr",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                gradient={false}
                vertical={false}
              >
                <hr
                  className="c1"
                />
              </StyledComponent>
            </HairlineDivider__StyledHairlineDivider>
          </HairlineDivider>
          <PanelWrapper
            key="home-service-billing"
            onClick={[Function]}
            open={false}
            panelDisabled={false}
            panelHeader="Home service billing (3)"
            panelId="home-service-billing"
          >
            <div
              data-testid="home-service-billing"
              id="home-service-billing"
            >
              <Styled(Box)
                inline={false}
                style={
                  Object {
                    "marginLeft": "1.5rem",
                  }
                }
                tag="div"
                vertical={3}
              >
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bwzfXH",
                        "isStatic": true,
                        "lastClassName": "c2",
                        "rules": Array [
                          "margin-left: 1.5rem;",
                        ],
                      },
                      "defaultProps": Object {
                        "below": undefined,
                        "between": undefined,
                        "className": undefined,
                        "horizontal": undefined,
                        "inline": false,
                        "inset": undefined,
                        "tag": "div",
                        "vertical": undefined,
                      },
                      "displayName": "Styled(Box)",
                      "foldedComponentIds": Array [],
                      "propTypes": Object {
                        "below": [Function],
                        "between": [Function],
                        "children": [Function],
                        "className": [Function],
                        "horizontal": [Function],
                        "inline": [Function],
                        "inset": [Function],
                        "tag": [Function],
                        "vertical": [Function],
                      },
                      "render": [Function],
                      "styledComponentId": "sc-bwzfXH",
                      "target": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "defaultProps": Object {
                          "below": undefined,
                          "between": undefined,
                          "className": undefined,
                          "horizontal": undefined,
                          "inline": false,
                          "inset": undefined,
                          "tag": "div",
                          "vertical": undefined,
                        },
                        "displayName": "Box",
                        "propTypes": Object {
                          "below": [Function],
                          "between": [Function],
                          "children": [Function],
                          "className": [Function],
                          "horizontal": [Function],
                          "inline": [Function],
                          "inset": [Function],
                          "tag": [Function],
                          "vertical": [Function],
                        },
                        "render": [Function],
                      },
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  inline={false}
                  style={
                    Object {
                      "marginLeft": "1.5rem",
                    }
                  }
                  tag="div"
                  vertical={3}
                >
                  <Box
                    className="c2"
                    inline={false}
                    style={
                      Object {
                        "marginLeft": "1.5rem",
                      }
                    }
                    tag="div"
                    vertical={3}
                  >
                    <styled.div
                      className="c2"
                      inline={false}
                      style={
                        Object {
                          "marginLeft": "1.5rem",
                        }
                      }
                      tag="div"
                      vertical={3}
                    >
                      <StyledComponent
                        className="c2"
                        forwardedComponent={
                          Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "attrs": Array [
                              [Function],
                            ],
                            "componentStyle": ComponentStyle {
                              "componentId": "sc-bdVaJa",
                              "isStatic": false,
                              "lastClassName": "c4",
                              "rules": Array [
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                                [Function],
                              ],
                            },
                            "displayName": "styled.div",
                            "foldedComponentIds": Array [],
                            "render": [Function],
                            "styledComponentId": "sc-bdVaJa",
                            "target": "div",
                            "toString": [Function],
                            "warnTooManyClasses": [Function],
                            "withComponent": [Function],
                          }
                        }
                        forwardedRef={null}
                        inline={false}
                        style={
                          Object {
                            "marginLeft": "1.5rem",
                          }
                        }
                        tag="div"
                        vertical={3}
                      >
                        <div
                          className="c2 sc-bwzfXH c2 c3"
                          style={
                            Object {
                              "marginLeft": "1.5rem",
                            }
                          }
                        >
                          <Box
                            between={3}
                            inline={true}
                            tag="div"
                          >
                            <styled.div
                              between={3}
                              inline={true}
                              tag="div"
                            >
                              <StyledComponent
                                between={3}
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [
                                      [Function],
                                    ],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-bdVaJa",
                                      "isStatic": false,
                                      "lastClassName": "c4",
                                      "rules": Array [
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                        [Function],
                                      ],
                                    },
                                    "displayName": "styled.div",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-bdVaJa",
                                    "target": "div",
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                inline={true}
                                tag="div"
                              >
                                <div
                                  className="c4"
                                >
                                  <PanelWrapper__HeaderContainer
                                    direction="row"
                                  >
                                    <StyledComponent
                                      direction="row"
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "PanelWrapper__HeaderContainer-doiyjm-2",
                                            "isStatic": false,
                                            "lastClassName": "c6",
                                            "rules": Array [
                                              [Function],
                                            ],
                                          },
                                          "displayName": "PanelWrapper__HeaderContainer",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "PanelWrapper__HeaderContainer-doiyjm-2",
                                          "target": "div",
                                          "toString": [Function],
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <div
                                        className="c5"
                                        direction="row"
                                      >
                                        <PanelWrapper__HeaderContainer
                                          direction="column"
                                        >
                                          <StyledComponent
                                            direction="column"
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "PanelWrapper__HeaderContainer-doiyjm-2",
                                                  "isStatic": false,
                                                  "lastClassName": "c6",
                                                  "rules": Array [
                                                    [Function],
                                                  ],
                                                },
                                                "displayName": "PanelWrapper__HeaderContainer",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "PanelWrapper__HeaderContainer-doiyjm-2",
                                                "target": "div",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                          >
                                            <div
                                              className="c6"
                                              direction="column"
                                            >
                                              <PanelWrapper__HeaderTitleContainer>
                                                <StyledComponent
                                                  forwardedComponent={
                                                    Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "attrs": Array [],
                                                      "componentStyle": ComponentStyle {
                                                        "componentId": "PanelWrapper__HeaderTitleContainer-doiyjm-3",
                                                        "isStatic": true,
                                                        "lastClassName": "c7",
                                                        "rules": Array [
                                                          "width: 100%;",
                                                        ],
                                                      },
                                                      "displayName": "PanelWrapper__HeaderTitleContainer",
                                                      "foldedComponentIds": Array [],
                                                      "render": [Function],
                                                      "styledComponentId": "PanelWrapper__HeaderTitleContainer-doiyjm-3",
                                                      "target": "div",
                                                      "toString": [Function],
                                                      "warnTooManyClasses": [Function],
                                                      "withComponent": [Function],
                                                    }
                                                  }
                                                  forwardedRef={null}
                                                >
                                                  <div
                                                    className="c7"
                                                  >
                                                    <Text
                                                      block={false}
                                                      bold={false}
                                                      invert={false}
                                                      size="large"
                                                    >
                                                      <Text__StyledText
                                                        block={false}
                                                        bold={false}
                                                        invert={false}
                                                        size="large"
                                                      >
                                                        <StyledComponent
                                                          block={false}
                                                          bold={false}
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "Text__StyledText-sc-1m0rr67-0",
                                                                "isStatic": false,
                                                                "lastClassName": "c8",
                                                                "rules": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  "sup {",
                                                                  "top: -0.5em;",
                                                                  "font-size: 0.875rem;",
                                                                  "position: relative;",
                                                                  "vertical-align: baseline;",
                                                                  "padding-left: 0.1em;",
                                                                  "}",
                                                                ],
                                                              },
                                                              "displayName": "Text__StyledText",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "Text__StyledText-sc-1m0rr67-0",
                                                              "target": "span",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          invert={false}
                                                          size="large"
                                                        >
                                                          <span
                                                            className="c8"
                                                            size="large"
                                                          >
                                                            Home service billing (3)
                                                          </span>
                                                        </StyledComponent>
                                                      </Text__StyledText>
                                                    </Text>
                                                  </div>
                                                </StyledComponent>
                                              </PanelWrapper__HeaderTitleContainer>
                                            </div>
                                          </StyledComponent>
                                        </PanelWrapper__HeaderContainer>
                                      </div>
                                    </StyledComponent>
                                  </PanelWrapper__HeaderContainer>
                                </div>
                              </StyledComponent>
                            </styled.div>
                          </Box>
                        </div>
                      </StyledComponent>
                    </styled.div>
                  </Box>
                </StyledComponent>
              </Styled(Box)>
              <HairlineDivider
                gradient={false}
                vertical={false}
              >
                <HairlineDivider__StyledHairlineDivider
                  gradient={false}
                  vertical={false}
                >
                  <StyledComponent
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "HairlineDivider__StyledHairlineDivider-biamlk-0",
                          "isStatic": false,
                          "lastClassName": "c1",
                          "rules": Array [
                            "padding: 0;",
                            "margin: 0;",
                            "border-width: 0;",
                            [Function],
                          ],
                        },
                        "displayName": "HairlineDivider__StyledHairlineDivider",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "HairlineDivider__StyledHairlineDivider-biamlk-0",
                        "target": "hr",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    gradient={false}
                    vertical={false}
                  >
                    <hr
                      className="c1"
                    />
                  </StyledComponent>
                </HairlineDivider__StyledHairlineDivider>
              </HairlineDivider>
            </div>
          </PanelWrapper>
        </div>
      </StyledComponent>
    </Panels__PanelBase>
  </Panels>
</ExpandCollapse>
`;

exports[`ExpandCollapse renders a closed panel 1`] = `
.c6 {
  color: #2a2c2e;
  word-wrap: break-word;
  font-size: 1.25rem;
  -webkit-letter-spacing: -1px;
  -moz-letter-spacing: -1px;
  -ms-letter-spacing: -1px;
  letter-spacing: -1px;
  line-height: 1.6;
  word-wrap: break-word;
  font-weight: 400;
}

.c6 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

.c14 {
  color: #2a2c2e;
  word-wrap: break-word;
  font-size: inherit;
  font-weight: inherit;
  display: block;
}

.c14 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

.c7 {
  font-family: 'TELUS Core Icons';
  display: inline-block;
  font-weight: normal;
  font-style: normal;
  speak: none;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  text-transform: none;
  text-rendering: auto;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  line-height: 1;
  vertical-align: middle;
  color: #2B8000;
  font-size: 1rem;
}

.c7::before {
  content: '\\f105';
}

.c1 {
  padding: 0;
  margin: 0;
  border-width: 0;
  -webkit-transform: rotate(-0.00001deg);
  -ms-transform: rotate(-0.00001deg);
  transform: rotate(-0.00001deg);
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: 100%;
  height: 1px;
  background-color: #d8d8d8;
}

.c3 {
  display: block;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c4 > *:not(:last-child) {
  margin-right: 1rem;
}

.c13 {
  display: block;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding-top: 1.5rem;
  padding-bottom: 1.5rem;
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

.c12 {
  padding: 0;
  margin: 0;
  border-width: 0;
  height: 32px;
  background-image: radial-gradient(ellipse at top,rgba(150,150,150,0.1) 0%,rgba(0,0,0,0) 70%);
}

.c2 {
  padding: 0;
  margin: 0;
  border-width: 0;
  font-family: "TELUS-Web","Helvetica Neue",Helvetica,Arial,sans-serif;
  color: #2a2c2e;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: none;
  box-shadow: none;
  cursor: pointer;
  width: 100%;
  text-align: left;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
}

.c10 {
  width: 100%;
}

.c0 {
  background-color: #fff;
}

@media (prefers-reduced-motion:reduce) {
  .c5 {
    -webkit-transition: none !important;
    transition: none !important;
  }
}

@media (prefers-reduced-motion:reduce) {
  .c11 {
    -webkit-transition: none !important;
    transition: none !important;
  }
}

<ExpandCollapse
  open={Array []}
  topDivider={true}
>
  <Panels
    isPanelOpen={[Function]}
    open={Array []}
    togglePanel={[Function]}
    topDivider={true}
  >
    <Panels__PanelBase
      open={Array []}
    >
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Panels__PanelBase-sc-78ahii-0",
              "isStatic": true,
              "lastClassName": "c0",
              "rules": Array [
                "background-color: #fff;",
              ],
            },
            "displayName": "Panels__PanelBase",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Panels__PanelBase-sc-78ahii-0",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        open={Array []}
      >
        <div
          className="c0"
          open={Array []}
        >
          <HairlineDivider
            gradient={false}
            vertical={false}
          >
            <HairlineDivider__StyledHairlineDivider
              gradient={false}
              vertical={false}
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "HairlineDivider__StyledHairlineDivider-biamlk-0",
                      "isStatic": false,
                      "lastClassName": "c1",
                      "rules": Array [
                        "padding: 0;",
                        "margin: 0;",
                        "border-width: 0;",
                        [Function],
                      ],
                    },
                    "displayName": "HairlineDivider__StyledHairlineDivider",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "HairlineDivider__StyledHairlineDivider-biamlk-0",
                    "target": "hr",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                gradient={false}
                vertical={false}
              >
                <hr
                  className="c1"
                />
              </StyledComponent>
            </HairlineDivider__StyledHairlineDivider>
          </HairlineDivider>
          <PanelWrapper
            key="panel-1"
            onClick={[Function]}
            open={false}
            panelDisabled={false}
            panelHeader="Panel title"
            panelId="panel-1"
          >
            <div
              data-testid="panel-1"
              id="panel-1"
            >
              <div>
                <PanelWrapper__HeaderButtonClickable
                  aria-expanded={false}
                  disabled={false}
                  onClick={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  panelDisabled={false}
                  type="button"
                >
                  <StyledComponent
                    aria-expanded={false}
                    disabled={false}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "PanelWrapper__HeaderButtonClickable-doiyjm-0",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "padding: 0;",
                            "margin: 0;",
                            "border-width: 0;",
                            "font-family: \\"TELUS-Web\\", \\"Helvetica Neue\\", Helvetica, Arial, sans-serif;",
                            "color: #2a2c2e;",
                            "appearance: none;",
                            "background: none;",
                            "box-shadow: none;",
                            "cursor: pointer;",
                            [Function],
                          ],
                        },
                        "displayName": "PanelWrapper__HeaderButtonClickable",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "PanelWrapper__HeaderButtonClickable-doiyjm-0",
                        "target": "button",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onClick={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    panelDisabled={false}
                    type="button"
                  >
                    <button
                      aria-expanded={false}
                      className="c2"
                      disabled={false}
                      onClick={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      type="button"
                    >
                      <Box
                        inline={false}
                        tag="div"
                        vertical={3}
                      >
                        <styled.div
                          inline={false}
                          tag="div"
                          vertical={3}
                        >
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [
                                  [Function],
                                ],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-bdVaJa",
                                  "isStatic": false,
                                  "lastClassName": "c13",
                                  "rules": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-bdVaJa",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            inline={false}
                            tag="div"
                            vertical={3}
                          >
                            <div
                              className="c3"
                            >
                              <Box
                                between={3}
                                inline={true}
                                tag="div"
                              >
                                <styled.div
                                  between={3}
                                  inline={true}
                                  tag="div"
                                >
                                  <StyledComponent
                                    between={3}
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [
                                          [Function],
                                        ],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-bdVaJa",
                                          "isStatic": false,
                                          "lastClassName": "c13",
                                          "rules": Array [
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                          ],
                                        },
                                        "displayName": "styled.div",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "sc-bdVaJa",
                                        "target": "div",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    inline={true}
                                    tag="div"
                                  >
                                    <div
                                      className="c4"
                                    >
                                      <PanelWrapper__CaretContainer
                                        isDisabled={false}
                                      >
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "PanelWrapper__CaretContainer-doiyjm-1",
                                                "isStatic": false,
                                                "lastClassName": "lkXOVg",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "PanelWrapper__CaretContainer",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "PanelWrapper__CaretContainer-doiyjm-1",
                                              "target": "div",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          isDisabled={false}
                                        >
                                          <div
                                            className=""
                                          >
                                            <Translate
                                              direction="y"
                                              distance="0.25rem"
                                              in={false}
                                              timeout={300}
                                            >
                                              <Transition
                                                appear={false}
                                                enter={true}
                                                exit={true}
                                                in={false}
                                                mountOnEnter={false}
                                                onEnter={[Function]}
                                                onEntered={[Function]}
                                                onEntering={[Function]}
                                                onExit={[Function]}
                                                onExited={[Function]}
                                                onExiting={[Function]}
                                                timeout={300}
                                                unmountOnExit={false}
                                              >
                                                <Translate__StyledContainer
                                                  style={
                                                    Object {
                                                      "transition": "transform 300ms",
                                                    }
                                                  }
                                                >
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "Translate__StyledContainer-lgiaqm-0",
                                                          "isStatic": true,
                                                          "lastClassName": "c5",
                                                          "rules": Array [
                                                            "@media (prefers-reduced-motion: reduce) {",
                                                            "transition: none !important;",
                                                            "}",
                                                          ],
                                                        },
                                                        "displayName": "Translate__StyledContainer",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "Translate__StyledContainer-lgiaqm-0",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    style={
                                                      Object {
                                                        "transition": "transform 300ms",
                                                      }
                                                    }
                                                  >
                                                    <div
                                                      className="c5"
                                                      style={
                                                        Object {
                                                          "transition": "transform 300ms",
                                                        }
                                                      }
                                                    >
                                                      <Text
                                                        block={false}
                                                        bold={false}
                                                        invert={false}
                                                        size="large"
                                                      >
                                                        <Text__StyledText
                                                          block={false}
                                                          bold={false}
                                                          invert={false}
                                                          size="large"
                                                        >
                                                          <StyledComponent
                                                            block={false}
                                                            bold={false}
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "Text__StyledText-sc-1m0rr67-0",
                                                                  "isStatic": false,
                                                                  "lastClassName": "c14",
                                                                  "rules": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    "sup {",
                                                                    "top: -0.5em;",
                                                                    "font-size: 0.875rem;",
                                                                    "position: relative;",
                                                                    "vertical-align: baseline;",
                                                                    "padding-left: 0.1em;",
                                                                    "}",
                                                                  ],
                                                                },
                                                                "displayName": "Text__StyledText",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "Text__StyledText-sc-1m0rr67-0",
                                                                "target": "span",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                            invert={false}
                                                            size="large"
                                                          >
                                                            <span
                                                              className="c6"
                                                              size="large"
                                                            >
                                                              <DecorativeIcon
                                                                size={16}
                                                                symbol="caretDown"
                                                                variant="primary"
                                                              >
                                                                <Icon
                                                                  aria-hidden="true"
                                                                  size={16}
                                                                  symbol="caretDown"
                                                                  variant="primary"
                                                                >
                                                                  <Icon__StyledIcon
                                                                    aria-hidden="true"
                                                                    iSize={16}
                                                                    symbol="caretDown"
                                                                    variant="primary"
                                                                  >
                                                                    <StyledComponent
                                                                      aria-hidden="true"
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "Icon__StyledIcon-sc-1g20dn8-0",
                                                                            "isStatic": false,
                                                                            "lastClassName": "c7",
                                                                            "rules": Array [
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                            ],
                                                                          },
                                                                          "displayName": "Icon__StyledIcon",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "Icon__StyledIcon-sc-1g20dn8-0",
                                                                          "target": "i",
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={null}
                                                                      iSize={16}
                                                                      symbol="caretDown"
                                                                      variant="primary"
                                                                    >
                                                                      <i
                                                                        aria-hidden="true"
                                                                        className="c7"
                                                                      />
                                                                    </StyledComponent>
                                                                  </Icon__StyledIcon>
                                                                </Icon>
                                                              </DecorativeIcon>
                                                            </span>
                                                          </StyledComponent>
                                                        </Text__StyledText>
                                                      </Text>
                                                    </div>
                                                  </StyledComponent>
                                                </Translate__StyledContainer>
                                              </Transition>
                                            </Translate>
                                          </div>
                                        </StyledComponent>
                                      </PanelWrapper__CaretContainer>
                                      <PanelWrapper__HeaderContainer
                                        direction="row"
                                      >
                                        <StyledComponent
                                          direction="row"
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "PanelWrapper__HeaderContainer-doiyjm-2",
                                                "isStatic": false,
                                                "lastClassName": "c9",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "PanelWrapper__HeaderContainer",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "PanelWrapper__HeaderContainer-doiyjm-2",
                                              "target": "div",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <div
                                            className="c8"
                                            direction="row"
                                          >
                                            <PanelWrapper__HeaderContainer
                                              direction="column"
                                            >
                                              <StyledComponent
                                                direction="column"
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "PanelWrapper__HeaderContainer-doiyjm-2",
                                                      "isStatic": false,
                                                      "lastClassName": "c9",
                                                      "rules": Array [
                                                        [Function],
                                                      ],
                                                    },
                                                    "displayName": "PanelWrapper__HeaderContainer",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "PanelWrapper__HeaderContainer-doiyjm-2",
                                                    "target": "div",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <div
                                                  className="c9"
                                                  direction="column"
                                                >
                                                  <PanelWrapper__HeaderTitleContainer>
                                                    <StyledComponent
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "PanelWrapper__HeaderTitleContainer-doiyjm-3",
                                                            "isStatic": true,
                                                            "lastClassName": "c10",
                                                            "rules": Array [
                                                              "width: 100%;",
                                                            ],
                                                          },
                                                          "displayName": "PanelWrapper__HeaderTitleContainer",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "PanelWrapper__HeaderTitleContainer-doiyjm-3",
                                                          "target": "div",
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                    >
                                                      <div
                                                        className="c10"
                                                      >
                                                        <Text
                                                          block={false}
                                                          bold={false}
                                                          invert={false}
                                                          size="large"
                                                        >
                                                          <Text__StyledText
                                                            block={false}
                                                            bold={false}
                                                            invert={false}
                                                            size="large"
                                                          >
                                                            <StyledComponent
                                                              block={false}
                                                              bold={false}
                                                              forwardedComponent={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "attrs": Array [],
                                                                  "componentStyle": ComponentStyle {
                                                                    "componentId": "Text__StyledText-sc-1m0rr67-0",
                                                                    "isStatic": false,
                                                                    "lastClassName": "c14",
                                                                    "rules": Array [
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      "sup {",
                                                                      "top: -0.5em;",
                                                                      "font-size: 0.875rem;",
                                                                      "position: relative;",
                                                                      "vertical-align: baseline;",
                                                                      "padding-left: 0.1em;",
                                                                      "}",
                                                                    ],
                                                                  },
                                                                  "displayName": "Text__StyledText",
                                                                  "foldedComponentIds": Array [],
                                                                  "render": [Function],
                                                                  "styledComponentId": "Text__StyledText-sc-1m0rr67-0",
                                                                  "target": "span",
                                                                  "toString": [Function],
                                                                  "warnTooManyClasses": [Function],
                                                                  "withComponent": [Function],
                                                                }
                                                              }
                                                              forwardedRef={null}
                                                              invert={false}
                                                              size="large"
                                                            >
                                                              <span
                                                                className="c6"
                                                                size="large"
                                                              >
                                                                Panel title
                                                              </span>
                                                            </StyledComponent>
                                                          </Text__StyledText>
                                                        </Text>
                                                      </div>
                                                    </StyledComponent>
                                                  </PanelWrapper__HeaderTitleContainer>
                                                </div>
                                              </StyledComponent>
                                            </PanelWrapper__HeaderContainer>
                                          </div>
                                        </StyledComponent>
                                      </PanelWrapper__HeaderContainer>
                                    </div>
                                  </StyledComponent>
                                </styled.div>
                              </Box>
                            </div>
                          </StyledComponent>
                        </styled.div>
                      </Box>
                    </button>
                  </StyledComponent>
                </PanelWrapper__HeaderButtonClickable>
                <FadeAndReveal
                  height={0}
                  in={false}
                  timeout={500}
                >
                  <CSSTransition
                    classNames=""
                    in={false}
                    timeout={
                      Object {
                        "appear": 500,
                        "enter": 500,
                        "exit": 0,
                      }
                    }
                  >
                    <Transition
                      appear={false}
                      enter={true}
                      exit={true}
                      in={false}
                      mountOnEnter={false}
                      onEnter={[Function]}
                      onEntered={[Function]}
                      onEntering={[Function]}
                      onExit={[Function]}
                      onExited={[Function]}
                      onExiting={[Function]}
                      timeout={
                        Object {
                          "appear": 500,
                          "enter": 500,
                          "exit": 0,
                        }
                      }
                      unmountOnExit={false}
                    >
                      <FadeAndReveal__StyledContainer
                        aria-hidden={true}
                        style={
                          Object {
                            "height": "0px",
                            "opacity": 0,
                            "overflow": "hidden",
                            "transition": "height 500ms ease-in-out, opacity 500ms ease-in-out, visibility 0ms 500ms",
                            "visibility": "hidden",
                          }
                        }
                      >
                        <StyledComponent
                          aria-hidden={true}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "FadeAndReveal__StyledContainer-sc-1drkfnv-0",
                                "isStatic": true,
                                "lastClassName": "c11",
                                "rules": Array [
                                  "@media (prefers-reduced-motion: reduce) {",
                                  "transition: none !important;",
                                  "}",
                                ],
                              },
                              "displayName": "FadeAndReveal__StyledContainer",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "FadeAndReveal__StyledContainer-sc-1drkfnv-0",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          style={
                            Object {
                              "height": "0px",
                              "opacity": 0,
                              "overflow": "hidden",
                              "transition": "height 500ms ease-in-out, opacity 500ms ease-in-out, visibility 0ms 500ms",
                              "visibility": "hidden",
                            }
                          }
                        >
                          <div
                            aria-hidden={true}
                            className="c11"
                            style={
                              Object {
                                "height": "0px",
                                "opacity": 0,
                                "overflow": "hidden",
                                "transition": "height 500ms ease-in-out, opacity 500ms ease-in-out, visibility 0ms 500ms",
                                "visibility": "hidden",
                              }
                            }
                          >
                            <div
                              data-testid="content"
                            >
                              <DimpleDivider>
                                <DimpleDivider__StyledDimpleDivider>
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "DimpleDivider__StyledDimpleDivider-quxnvh-0",
                                          "isStatic": true,
                                          "lastClassName": "c12",
                                          "rules": Array [
                                            "padding: 0;",
                                            "margin: 0;",
                                            "border-width: 0;",
                                            "height: 32px;",
                                            "background-image: radial-gradient(ellipse at top, rgba(150, 150, 150, 0.1) 0%, rgba(0, 0, 0, 0) 70%);",
                                          ],
                                        },
                                        "displayName": "DimpleDivider__StyledDimpleDivider",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "DimpleDivider__StyledDimpleDivider-quxnvh-0",
                                        "target": "hr",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                  >
                                    <hr
                                      className="c12"
                                    />
                                  </StyledComponent>
                                </DimpleDivider__StyledDimpleDivider>
                              </DimpleDivider>
                              <Box
                                inline={false}
                                inset={4}
                                tag="div"
                              >
                                <styled.div
                                  inline={false}
                                  inset={4}
                                  tag="div"
                                >
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [
                                          [Function],
                                        ],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-bdVaJa",
                                          "isStatic": false,
                                          "lastClassName": "c13",
                                          "rules": Array [
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                          ],
                                        },
                                        "displayName": "styled.div",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "sc-bdVaJa",
                                        "target": "div",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    inline={false}
                                    inset={4}
                                    tag="div"
                                  >
                                    <div
                                      className="c13"
                                    >
                                      <Text
                                        block={true}
                                        bold={false}
                                        invert={false}
                                        size="base"
                                      >
                                        <Text__StyledText
                                          block={true}
                                          bold={false}
                                          invert={false}
                                          size="base"
                                        >
                                          <StyledComponent
                                            block={true}
                                            bold={false}
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "Text__StyledText-sc-1m0rr67-0",
                                                  "isStatic": false,
                                                  "lastClassName": "c14",
                                                  "rules": Array [
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    "sup {",
                                                    "top: -0.5em;",
                                                    "font-size: 0.875rem;",
                                                    "position: relative;",
                                                    "vertical-align: baseline;",
                                                    "padding-left: 0.1em;",
                                                    "}",
                                                  ],
                                                },
                                                "displayName": "Text__StyledText",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "Text__StyledText-sc-1m0rr67-0",
                                                "target": "span",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            invert={false}
                                            size="base"
                                          >
                                            <span
                                              className="c14"
                                              size="base"
                                            >
                                              <Panel
                                                disabled={false}
                                                header="Panel title"
                                                id="panel-1"
                                                key=".0"
                                              >
                                                <div>
                                                  Panel content
                                                </div>
                                              </Panel>
                                            </span>
                                          </StyledComponent>
                                        </Text__StyledText>
                                      </Text>
                                    </div>
                                  </StyledComponent>
                                </styled.div>
                              </Box>
                            </div>
                          </div>
                        </StyledComponent>
                      </FadeAndReveal__StyledContainer>
                    </Transition>
                  </CSSTransition>
                </FadeAndReveal>
                <HairlineDivider
                  gradient={false}
                  vertical={false}
                >
                  <HairlineDivider__StyledHairlineDivider
                    gradient={false}
                    vertical={false}
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "HairlineDivider__StyledHairlineDivider-biamlk-0",
                            "isStatic": false,
                            "lastClassName": "c1",
                            "rules": Array [
                              "padding: 0;",
                              "margin: 0;",
                              "border-width: 0;",
                              [Function],
                            ],
                          },
                          "displayName": "HairlineDivider__StyledHairlineDivider",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "HairlineDivider__StyledHairlineDivider-biamlk-0",
                          "target": "hr",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      gradient={false}
                      vertical={false}
                    >
                      <hr
                        className="c1"
                      />
                    </StyledComponent>
                  </HairlineDivider__StyledHairlineDivider>
                </HairlineDivider>
              </div>
            </div>
          </PanelWrapper>
        </div>
      </StyledComponent>
    </Panels__PanelBase>
  </Panels>
</ExpandCollapse>
`;

exports[`ExpandCollapse renders an open panel 1`] = `
.c6 {
  color: #2a2c2e;
  word-wrap: break-word;
  font-size: 1.25rem;
  -webkit-letter-spacing: -1px;
  -moz-letter-spacing: -1px;
  -ms-letter-spacing: -1px;
  letter-spacing: -1px;
  line-height: 1.6;
  word-wrap: break-word;
  font-weight: 400;
}

.c6 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

.c14 {
  color: #2a2c2e;
  word-wrap: break-word;
  font-size: inherit;
  font-weight: inherit;
  display: block;
}

.c14 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

.c7 {
  font-family: 'TELUS Core Icons';
  display: inline-block;
  font-weight: normal;
  font-style: normal;
  speak: none;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  text-transform: none;
  text-rendering: auto;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  line-height: 1;
  vertical-align: middle;
  color: #2B8000;
  font-size: 1rem;
}

.c7::before {
  content: '\\f106';
}

.c1 {
  padding: 0;
  margin: 0;
  border-width: 0;
  -webkit-transform: rotate(-0.00001deg);
  -ms-transform: rotate(-0.00001deg);
  transform: rotate(-0.00001deg);
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: 100%;
  height: 1px;
  background-color: #d8d8d8;
}

.c3 {
  display: block;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c4 > *:not(:last-child) {
  margin-right: 1rem;
}

.c13 {
  display: block;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  padding-top: 1.5rem;
  padding-bottom: 1.5rem;
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

.c12 {
  padding: 0;
  margin: 0;
  border-width: 0;
  height: 32px;
  background-image: radial-gradient(ellipse at top,rgba(150,150,150,0.1) 0%,rgba(0,0,0,0) 70%);
}

.c2 {
  padding: 0;
  margin: 0;
  border-width: 0;
  font-family: "TELUS-Web","Helvetica Neue",Helvetica,Arial,sans-serif;
  color: #2a2c2e;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: none;
  box-shadow: none;
  cursor: pointer;
  width: 100%;
  text-align: left;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
}

.c10 {
  width: 100%;
}

.c0 {
  background-color: #fff;
}

@media (prefers-reduced-motion:reduce) {
  .c5 {
    -webkit-transition: none !important;
    transition: none !important;
  }
}

@media (prefers-reduced-motion:reduce) {
  .c11 {
    -webkit-transition: none !important;
    transition: none !important;
  }
}

<ExpandCollapse
  open={
    Array [
      "panel-1",
    ]
  }
  topDivider={true}
>
  <Panels
    isPanelOpen={[Function]}
    open={
      Array [
        "panel-1",
      ]
    }
    togglePanel={[Function]}
    topDivider={true}
  >
    <Panels__PanelBase
      open={
        Array [
          "panel-1",
        ]
      }
    >
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Panels__PanelBase-sc-78ahii-0",
              "isStatic": true,
              "lastClassName": "c0",
              "rules": Array [
                "background-color: #fff;",
              ],
            },
            "displayName": "Panels__PanelBase",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Panels__PanelBase-sc-78ahii-0",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        open={
          Array [
            "panel-1",
          ]
        }
      >
        <div
          className="c0"
          open={
            Array [
              "panel-1",
            ]
          }
        >
          <HairlineDivider
            gradient={false}
            vertical={false}
          >
            <HairlineDivider__StyledHairlineDivider
              gradient={false}
              vertical={false}
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "HairlineDivider__StyledHairlineDivider-biamlk-0",
                      "isStatic": false,
                      "lastClassName": "c1",
                      "rules": Array [
                        "padding: 0;",
                        "margin: 0;",
                        "border-width: 0;",
                        [Function],
                      ],
                    },
                    "displayName": "HairlineDivider__StyledHairlineDivider",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "HairlineDivider__StyledHairlineDivider-biamlk-0",
                    "target": "hr",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                gradient={false}
                vertical={false}
              >
                <hr
                  className="c1"
                />
              </StyledComponent>
            </HairlineDivider__StyledHairlineDivider>
          </HairlineDivider>
          <PanelWrapper
            key="panel-1"
            onClick={[Function]}
            open={true}
            panelDisabled={false}
            panelHeader="Panel title"
            panelId="panel-1"
          >
            <div
              data-testid="panel-1"
              id="panel-1"
            >
              <div>
                <PanelWrapper__HeaderButtonClickable
                  aria-expanded={true}
                  disabled={false}
                  onClick={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  panelDisabled={false}
                  type="button"
                >
                  <StyledComponent
                    aria-expanded={true}
                    disabled={false}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "PanelWrapper__HeaderButtonClickable-doiyjm-0",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "padding: 0;",
                            "margin: 0;",
                            "border-width: 0;",
                            "font-family: \\"TELUS-Web\\", \\"Helvetica Neue\\", Helvetica, Arial, sans-serif;",
                            "color: #2a2c2e;",
                            "appearance: none;",
                            "background: none;",
                            "box-shadow: none;",
                            "cursor: pointer;",
                            [Function],
                          ],
                        },
                        "displayName": "PanelWrapper__HeaderButtonClickable",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "PanelWrapper__HeaderButtonClickable-doiyjm-0",
                        "target": "button",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onClick={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    panelDisabled={false}
                    type="button"
                  >
                    <button
                      aria-expanded={true}
                      className="c2"
                      disabled={false}
                      onClick={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      type="button"
                    >
                      <Box
                        inline={false}
                        tag="div"
                        vertical={3}
                      >
                        <styled.div
                          inline={false}
                          tag="div"
                          vertical={3}
                        >
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [
                                  [Function],
                                ],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-bdVaJa",
                                  "isStatic": false,
                                  "lastClassName": "c13",
                                  "rules": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                },
                                "displayName": "styled.div",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-bdVaJa",
                                "target": "div",
                                "toString": [Function],
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            inline={false}
                            tag="div"
                            vertical={3}
                          >
                            <div
                              className="c3"
                            >
                              <Box
                                between={3}
                                inline={true}
                                tag="div"
                              >
                                <styled.div
                                  between={3}
                                  inline={true}
                                  tag="div"
                                >
                                  <StyledComponent
                                    between={3}
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [
                                          [Function],
                                        ],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-bdVaJa",
                                          "isStatic": false,
                                          "lastClassName": "c13",
                                          "rules": Array [
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                          ],
                                        },
                                        "displayName": "styled.div",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "sc-bdVaJa",
                                        "target": "div",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    inline={true}
                                    tag="div"
                                  >
                                    <div
                                      className="c4"
                                    >
                                      <PanelWrapper__CaretContainer
                                        isDisabled={false}
                                      >
                                        <StyledComponent
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "PanelWrapper__CaretContainer-doiyjm-1",
                                                "isStatic": false,
                                                "lastClassName": "lkXOVg",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "PanelWrapper__CaretContainer",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "PanelWrapper__CaretContainer-doiyjm-1",
                                              "target": "div",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                          isDisabled={false}
                                        >
                                          <div
                                            className=""
                                          >
                                            <Translate
                                              direction="y"
                                              distance="-0.25rem"
                                              in={false}
                                              timeout={300}
                                            >
                                              <Transition
                                                appear={false}
                                                enter={true}
                                                exit={true}
                                                in={false}
                                                mountOnEnter={false}
                                                onEnter={[Function]}
                                                onEntered={[Function]}
                                                onEntering={[Function]}
                                                onExit={[Function]}
                                                onExited={[Function]}
                                                onExiting={[Function]}
                                                timeout={300}
                                                unmountOnExit={false}
                                              >
                                                <Translate__StyledContainer
                                                  style={
                                                    Object {
                                                      "transition": "transform 300ms",
                                                    }
                                                  }
                                                >
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "Translate__StyledContainer-lgiaqm-0",
                                                          "isStatic": true,
                                                          "lastClassName": "c5",
                                                          "rules": Array [
                                                            "@media (prefers-reduced-motion: reduce) {",
                                                            "transition: none !important;",
                                                            "}",
                                                          ],
                                                        },
                                                        "displayName": "Translate__StyledContainer",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "Translate__StyledContainer-lgiaqm-0",
                                                        "target": "div",
                                                        "toString": [Function],
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    style={
                                                      Object {
                                                        "transition": "transform 300ms",
                                                      }
                                                    }
                                                  >
                                                    <div
                                                      className="c5"
                                                      style={
                                                        Object {
                                                          "transition": "transform 300ms",
                                                        }
                                                      }
                                                    >
                                                      <Text
                                                        block={false}
                                                        bold={false}
                                                        invert={false}
                                                        size="large"
                                                      >
                                                        <Text__StyledText
                                                          block={false}
                                                          bold={false}
                                                          invert={false}
                                                          size="large"
                                                        >
                                                          <StyledComponent
                                                            block={false}
                                                            bold={false}
                                                            forwardedComponent={
                                                              Object {
                                                                "$$typeof": Symbol(react.forward_ref),
                                                                "attrs": Array [],
                                                                "componentStyle": ComponentStyle {
                                                                  "componentId": "Text__StyledText-sc-1m0rr67-0",
                                                                  "isStatic": false,
                                                                  "lastClassName": "c14",
                                                                  "rules": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    "sup {",
                                                                    "top: -0.5em;",
                                                                    "font-size: 0.875rem;",
                                                                    "position: relative;",
                                                                    "vertical-align: baseline;",
                                                                    "padding-left: 0.1em;",
                                                                    "}",
                                                                  ],
                                                                },
                                                                "displayName": "Text__StyledText",
                                                                "foldedComponentIds": Array [],
                                                                "render": [Function],
                                                                "styledComponentId": "Text__StyledText-sc-1m0rr67-0",
                                                                "target": "span",
                                                                "toString": [Function],
                                                                "warnTooManyClasses": [Function],
                                                                "withComponent": [Function],
                                                              }
                                                            }
                                                            forwardedRef={null}
                                                            invert={false}
                                                            size="large"
                                                          >
                                                            <span
                                                              className="c6"
                                                              size="large"
                                                            >
                                                              <DecorativeIcon
                                                                size={16}
                                                                symbol="caretUp"
                                                                variant="primary"
                                                              >
                                                                <Icon
                                                                  aria-hidden="true"
                                                                  size={16}
                                                                  symbol="caretUp"
                                                                  variant="primary"
                                                                >
                                                                  <Icon__StyledIcon
                                                                    aria-hidden="true"
                                                                    iSize={16}
                                                                    symbol="caretUp"
                                                                    variant="primary"
                                                                  >
                                                                    <StyledComponent
                                                                      aria-hidden="true"
                                                                      forwardedComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "attrs": Array [],
                                                                          "componentStyle": ComponentStyle {
                                                                            "componentId": "Icon__StyledIcon-sc-1g20dn8-0",
                                                                            "isStatic": false,
                                                                            "lastClassName": "c7",
                                                                            "rules": Array [
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                            ],
                                                                          },
                                                                          "displayName": "Icon__StyledIcon",
                                                                          "foldedComponentIds": Array [],
                                                                          "render": [Function],
                                                                          "styledComponentId": "Icon__StyledIcon-sc-1g20dn8-0",
                                                                          "target": "i",
                                                                          "toString": [Function],
                                                                          "warnTooManyClasses": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      forwardedRef={null}
                                                                      iSize={16}
                                                                      symbol="caretUp"
                                                                      variant="primary"
                                                                    >
                                                                      <i
                                                                        aria-hidden="true"
                                                                        className="c7"
                                                                      />
                                                                    </StyledComponent>
                                                                  </Icon__StyledIcon>
                                                                </Icon>
                                                              </DecorativeIcon>
                                                            </span>
                                                          </StyledComponent>
                                                        </Text__StyledText>
                                                      </Text>
                                                    </div>
                                                  </StyledComponent>
                                                </Translate__StyledContainer>
                                              </Transition>
                                            </Translate>
                                          </div>
                                        </StyledComponent>
                                      </PanelWrapper__CaretContainer>
                                      <PanelWrapper__HeaderContainer
                                        direction="row"
                                      >
                                        <StyledComponent
                                          direction="row"
                                          forwardedComponent={
                                            Object {
                                              "$$typeof": Symbol(react.forward_ref),
                                              "attrs": Array [],
                                              "componentStyle": ComponentStyle {
                                                "componentId": "PanelWrapper__HeaderContainer-doiyjm-2",
                                                "isStatic": false,
                                                "lastClassName": "c9",
                                                "rules": Array [
                                                  [Function],
                                                ],
                                              },
                                              "displayName": "PanelWrapper__HeaderContainer",
                                              "foldedComponentIds": Array [],
                                              "render": [Function],
                                              "styledComponentId": "PanelWrapper__HeaderContainer-doiyjm-2",
                                              "target": "div",
                                              "toString": [Function],
                                              "warnTooManyClasses": [Function],
                                              "withComponent": [Function],
                                            }
                                          }
                                          forwardedRef={null}
                                        >
                                          <div
                                            className="c8"
                                            direction="row"
                                          >
                                            <PanelWrapper__HeaderContainer
                                              direction="column"
                                            >
                                              <StyledComponent
                                                direction="column"
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "PanelWrapper__HeaderContainer-doiyjm-2",
                                                      "isStatic": false,
                                                      "lastClassName": "c9",
                                                      "rules": Array [
                                                        [Function],
                                                      ],
                                                    },
                                                    "displayName": "PanelWrapper__HeaderContainer",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "PanelWrapper__HeaderContainer-doiyjm-2",
                                                    "target": "div",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                              >
                                                <div
                                                  className="c9"
                                                  direction="column"
                                                >
                                                  <PanelWrapper__HeaderTitleContainer>
                                                    <StyledComponent
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "PanelWrapper__HeaderTitleContainer-doiyjm-3",
                                                            "isStatic": true,
                                                            "lastClassName": "c10",
                                                            "rules": Array [
                                                              "width: 100%;",
                                                            ],
                                                          },
                                                          "displayName": "PanelWrapper__HeaderTitleContainer",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "PanelWrapper__HeaderTitleContainer-doiyjm-3",
                                                          "target": "div",
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                    >
                                                      <div
                                                        className="c10"
                                                      >
                                                        <Text
                                                          block={false}
                                                          bold={false}
                                                          invert={false}
                                                          size="large"
                                                        >
                                                          <Text__StyledText
                                                            block={false}
                                                            bold={false}
                                                            invert={false}
                                                            size="large"
                                                          >
                                                            <StyledComponent
                                                              block={false}
                                                              bold={false}
                                                              forwardedComponent={
                                                                Object {
                                                                  "$$typeof": Symbol(react.forward_ref),
                                                                  "attrs": Array [],
                                                                  "componentStyle": ComponentStyle {
                                                                    "componentId": "Text__StyledText-sc-1m0rr67-0",
                                                                    "isStatic": false,
                                                                    "lastClassName": "c14",
                                                                    "rules": Array [
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      [Function],
                                                                      "sup {",
                                                                      "top: -0.5em;",
                                                                      "font-size: 0.875rem;",
                                                                      "position: relative;",
                                                                      "vertical-align: baseline;",
                                                                      "padding-left: 0.1em;",
                                                                      "}",
                                                                    ],
                                                                  },
                                                                  "displayName": "Text__StyledText",
                                                                  "foldedComponentIds": Array [],
                                                                  "render": [Function],
                                                                  "styledComponentId": "Text__StyledText-sc-1m0rr67-0",
                                                                  "target": "span",
                                                                  "toString": [Function],
                                                                  "warnTooManyClasses": [Function],
                                                                  "withComponent": [Function],
                                                                }
                                                              }
                                                              forwardedRef={null}
                                                              invert={false}
                                                              size="large"
                                                            >
                                                              <span
                                                                className="c6"
                                                                size="large"
                                                              >
                                                                Panel title
                                                              </span>
                                                            </StyledComponent>
                                                          </Text__StyledText>
                                                        </Text>
                                                      </div>
                                                    </StyledComponent>
                                                  </PanelWrapper__HeaderTitleContainer>
                                                </div>
                                              </StyledComponent>
                                            </PanelWrapper__HeaderContainer>
                                          </div>
                                        </StyledComponent>
                                      </PanelWrapper__HeaderContainer>
                                    </div>
                                  </StyledComponent>
                                </styled.div>
                              </Box>
                            </div>
                          </StyledComponent>
                        </styled.div>
                      </Box>
                    </button>
                  </StyledComponent>
                </PanelWrapper__HeaderButtonClickable>
                <FadeAndReveal
                  height={0}
                  in={true}
                  timeout={500}
                >
                  <CSSTransition
                    classNames=""
                    in={true}
                    timeout={
                      Object {
                        "appear": 500,
                        "enter": 500,
                        "exit": 0,
                      }
                    }
                  >
                    <Transition
                      appear={false}
                      enter={true}
                      exit={true}
                      in={true}
                      mountOnEnter={false}
                      onEnter={[Function]}
                      onEntered={[Function]}
                      onEntering={[Function]}
                      onExit={[Function]}
                      onExited={[Function]}
                      onExiting={[Function]}
                      timeout={
                        Object {
                          "appear": 500,
                          "enter": 500,
                          "exit": 0,
                        }
                      }
                      unmountOnExit={false}
                    >
                      <FadeAndReveal__StyledContainer
                        aria-hidden={false}
                        style={
                          Object {
                            "height": "auto",
                            "opacity": 1,
                            "overflow": "hidden",
                            "transition": "unset",
                            "visibility": "visible",
                          }
                        }
                      >
                        <StyledComponent
                          aria-hidden={false}
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "FadeAndReveal__StyledContainer-sc-1drkfnv-0",
                                "isStatic": true,
                                "lastClassName": "c11",
                                "rules": Array [
                                  "@media (prefers-reduced-motion: reduce) {",
                                  "transition: none !important;",
                                  "}",
                                ],
                              },
                              "displayName": "FadeAndReveal__StyledContainer",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "FadeAndReveal__StyledContainer-sc-1drkfnv-0",
                              "target": "div",
                              "toString": [Function],
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          style={
                            Object {
                              "height": "auto",
                              "opacity": 1,
                              "overflow": "hidden",
                              "transition": "unset",
                              "visibility": "visible",
                            }
                          }
                        >
                          <div
                            aria-hidden={false}
                            className="c11"
                            style={
                              Object {
                                "height": "auto",
                                "opacity": 1,
                                "overflow": "hidden",
                                "transition": "unset",
                                "visibility": "visible",
                              }
                            }
                          >
                            <div
                              data-testid="content"
                            >
                              <DimpleDivider>
                                <DimpleDivider__StyledDimpleDivider>
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "DimpleDivider__StyledDimpleDivider-quxnvh-0",
                                          "isStatic": true,
                                          "lastClassName": "c12",
                                          "rules": Array [
                                            "padding: 0;",
                                            "margin: 0;",
                                            "border-width: 0;",
                                            "height: 32px;",
                                            "background-image: radial-gradient(ellipse at top, rgba(150, 150, 150, 0.1) 0%, rgba(0, 0, 0, 0) 70%);",
                                          ],
                                        },
                                        "displayName": "DimpleDivider__StyledDimpleDivider",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "DimpleDivider__StyledDimpleDivider-quxnvh-0",
                                        "target": "hr",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                  >
                                    <hr
                                      className="c12"
                                    />
                                  </StyledComponent>
                                </DimpleDivider__StyledDimpleDivider>
                              </DimpleDivider>
                              <Box
                                inline={false}
                                inset={4}
                                tag="div"
                              >
                                <styled.div
                                  inline={false}
                                  inset={4}
                                  tag="div"
                                >
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [
                                          [Function],
                                        ],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-bdVaJa",
                                          "isStatic": false,
                                          "lastClassName": "c13",
                                          "rules": Array [
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                          ],
                                        },
                                        "displayName": "styled.div",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "sc-bdVaJa",
                                        "target": "div",
                                        "toString": [Function],
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    inline={false}
                                    inset={4}
                                    tag="div"
                                  >
                                    <div
                                      className="c13"
                                    >
                                      <Text
                                        block={true}
                                        bold={false}
                                        invert={false}
                                        size="base"
                                      >
                                        <Text__StyledText
                                          block={true}
                                          bold={false}
                                          invert={false}
                                          size="base"
                                        >
                                          <StyledComponent
                                            block={true}
                                            bold={false}
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "Text__StyledText-sc-1m0rr67-0",
                                                  "isStatic": false,
                                                  "lastClassName": "c14",
                                                  "rules": Array [
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    "sup {",
                                                    "top: -0.5em;",
                                                    "font-size: 0.875rem;",
                                                    "position: relative;",
                                                    "vertical-align: baseline;",
                                                    "padding-left: 0.1em;",
                                                    "}",
                                                  ],
                                                },
                                                "displayName": "Text__StyledText",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "Text__StyledText-sc-1m0rr67-0",
                                                "target": "span",
                                                "toString": [Function],
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            invert={false}
                                            size="base"
                                          >
                                            <span
                                              className="c14"
                                              size="base"
                                            >
                                              <Panel
                                                disabled={false}
                                                header="Panel title"
                                                id="panel-1"
                                                key=".0"
                                              >
                                                <div>
                                                  Panel content
                                                </div>
                                              </Panel>
                                            </span>
                                          </StyledComponent>
                                        </Text__StyledText>
                                      </Text>
                                    </div>
                                  </StyledComponent>
                                </styled.div>
                              </Box>
                            </div>
                          </div>
                        </StyledComponent>
                      </FadeAndReveal__StyledContainer>
                    </Transition>
                  </CSSTransition>
                </FadeAndReveal>
                <HairlineDivider
                  gradient={false}
                  vertical={false}
                >
                  <HairlineDivider__StyledHairlineDivider
                    gradient={false}
                    vertical={false}
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "HairlineDivider__StyledHairlineDivider-biamlk-0",
                            "isStatic": false,
                            "lastClassName": "c1",
                            "rules": Array [
                              "padding: 0;",
                              "margin: 0;",
                              "border-width: 0;",
                              [Function],
                            ],
                          },
                          "displayName": "HairlineDivider__StyledHairlineDivider",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "HairlineDivider__StyledHairlineDivider-biamlk-0",
                          "target": "hr",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      gradient={false}
                      vertical={false}
                    >
                      <hr
                        className="c1"
                      />
                    </StyledComponent>
                  </HairlineDivider__StyledHairlineDivider>
                </HairlineDivider>
              </div>
            </div>
          </PanelWrapper>
        </div>
      </StyledComponent>
    </Panels__PanelBase>
  </Panels>
</ExpandCollapse>
`;
