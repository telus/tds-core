// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Accordion renders a closed accordion 1`] = `
.c1 {
  padding: 0;
  margin: 0;
  border-width: 0;
  -webkit-transform: rotate(-0.00001deg);
  -ms-transform: rotate(-0.00001deg);
  transform: rotate(-0.00001deg);
  width: 100%;
  height: 1px;
  background-color: #d8d8d8;
}

.c4 {
  font-family: 'TELUS Core Icons';
  display: inline-block;
  font-weight: normal;
  font-style: normal;
  speak: none;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  text-transform: none;
  text-rendering: auto;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  line-height: 1;
  vertical-align: middle;
  color: #248700;
  font-size: 1rem;
}

.c4::before {
  content: '\\f105';
}

.c3 {
  color: #2a2c2e;
  word-wrap: break-word;
  font-size: 1.25rem;
  -webkit-letter-spacing: -1px;
  -moz-letter-spacing: -1px;
  -ms-letter-spacing: -1px;
  letter-spacing: -1px;
  line-height: 1.6;
  word-wrap: break-word;
  font-weight: 400;
}

.c3 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

.c9 {
  color: #2a2c2e;
  word-wrap: break-word;
  font-size: inherit;
  font-weight: inherit;
  display: block;
}

.c9 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

.c8 {
  padding: 0;
  margin: 0;
  border-width: 0;
  height: 32px;
  background-image: radial-gradient(ellipse at top,rgba(150,150,150,0.1) 0%,rgba(0,0,0,0) 70%);
}

.c2 {
  padding: 0;
  margin: 0;
  border-width: 0;
  font-family: "TELUS-Web","Helvetica Neue",Helvetica,Arial,sans-serif;
  color: #2a2c2e;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: none;
  box-shadow: none;
  cursor: pointer;
  width: 100%;
  text-align: left;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
}

.c7 {
  width: 100%;
}

.c0 {
  background-color: #fff;
}

<Accordion
  topDivider={true}
>
  <Panels
    isPanelOpen={[Function]}
    togglePanel={[Function]}
    topDivider={true}
  >
    <Panels__PanelBase>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Panels__PanelBase-sc-78ahii-0",
              "isStatic": true,
              "lastClassName": "c0",
              "rules": Array [
                "background-color: #fff;",
              ],
            },
            "displayName": "Panels__PanelBase",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Panels__PanelBase-sc-78ahii-0",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className="c0"
        >
          <HairlineDivider
            gradient={false}
            vertical={false}
          >
            <HairlineDivider__StyledHairlineDivider
              gradient={false}
              vertical={false}
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "HairlineDivider__StyledHairlineDivider-biamlk-0",
                      "isStatic": false,
                      "lastClassName": "c1",
                      "rules": Array [
                        "padding: 0;",
                        "margin: 0;",
                        "border-width: 0;",
                        [Function],
                      ],
                    },
                    "displayName": "HairlineDivider__StyledHairlineDivider",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "HairlineDivider__StyledHairlineDivider-biamlk-0",
                    "target": "hr",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                gradient={false}
                vertical={false}
              >
                <hr
                  className="c1"
                />
              </StyledComponent>
            </HairlineDivider__StyledHairlineDivider>
          </HairlineDivider>
          <PanelWrapper
            key="panel-1"
            onClick={[Function]}
            open={false}
            panelDisabled={false}
            panelHeader="Panel title"
            panelId="panel-1"
          >
            <div
              data-testid="panel-1"
            >
              <div>
                <PanelWrapper__HeaderButtonClickable
                  aria-expanded={false}
                  disabled={false}
                  onClick={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  panelDisabled={false}
                >
                  <StyledComponent
                    aria-expanded={false}
                    disabled={false}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "PanelWrapper__HeaderButtonClickable-doiyjm-0",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "padding: 0;",
                            "margin: 0;",
                            "border-width: 0;",
                            "font-family: \\"TELUS-Web\\", \\"Helvetica Neue\\", Helvetica, Arial, sans-serif;",
                            "color: #2a2c2e;",
                            "appearance: none;",
                            "background: none;",
                            "box-shadow: none;",
                            "cursor: pointer;",
                            [Function],
                          ],
                        },
                        "displayName": "PanelWrapper__HeaderButtonClickable",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "PanelWrapper__HeaderButtonClickable-doiyjm-0",
                        "target": "button",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onClick={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    panelDisabled={false}
                  >
                    <button
                      aria-expanded={false}
                      className="c2"
                      disabled={false}
                      onClick={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                    >
                      <Box
                        inline={false}
                        tag="div"
                        vertical={3}
                      >
                        <div
                          className="TDS_Box-modules__verticalPadding-3___Fsv37"
                        >
                          <Box
                            between={3}
                            inline={true}
                            tag="div"
                          >
                            <div
                              className="TDS_Box-modules__betweenRightMargin-3___1dOvx TDS_Box-modules__inline___jTHcz"
                            >
                              <PanelWrapper__CaretContainer
                                isDisabled={false}
                              >
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "PanelWrapper__CaretContainer-doiyjm-1",
                                        "isStatic": false,
                                        "lastClassName": "lkXOVg",
                                        "rules": Array [
                                          [Function],
                                        ],
                                      },
                                      "displayName": "PanelWrapper__CaretContainer",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "PanelWrapper__CaretContainer-doiyjm-1",
                                      "target": "div",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  isDisabled={false}
                                >
                                  <div
                                    className=""
                                  >
                                    <Translate
                                      direction="y"
                                      distance="0.25rem"
                                      in={false}
                                      timeout={300}
                                    >
                                      <Transition
                                        appear={false}
                                        enter={true}
                                        exit={true}
                                        in={false}
                                        mountOnEnter={false}
                                        onEnter={[Function]}
                                        onEntered={[Function]}
                                        onEntering={[Function]}
                                        onExit={[Function]}
                                        onExited={[Function]}
                                        onExiting={[Function]}
                                        timeout={300}
                                        unmountOnExit={false}
                                      >
                                        <div
                                          style={
                                            Object {
                                              "transition": "transform 300ms",
                                            }
                                          }
                                        >
                                          <Text
                                            block={false}
                                            bold={false}
                                            invert={false}
                                            size="large"
                                          >
                                            <Text__StyledText
                                              block={false}
                                              bold={false}
                                              invert={false}
                                              size="large"
                                            >
                                              <StyledComponent
                                                block={false}
                                                bold={false}
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "Text__StyledText-sc-1m0rr67-0",
                                                      "isStatic": false,
                                                      "lastClassName": "c9",
                                                      "rules": Array [
                                                        [Function],
                                                        [Function],
                                                        [Function],
                                                        [Function],
                                                        [Function],
                                                        "sup {",
                                                        "top: -0.5em;",
                                                        "font-size: 0.875rem;",
                                                        "position: relative;",
                                                        "vertical-align: baseline;",
                                                        "padding-left: 0.1em;",
                                                        "}",
                                                      ],
                                                    },
                                                    "displayName": "Text__StyledText",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "Text__StyledText-sc-1m0rr67-0",
                                                    "target": "span",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                                invert={false}
                                                size="large"
                                              >
                                                <span
                                                  className="c3"
                                                  size="large"
                                                >
                                                  <DecorativeIcon
                                                    size={16}
                                                    symbol="caretDown"
                                                    variant="primary"
                                                  >
                                                    <Icon
                                                      aria-hidden="true"
                                                      size={16}
                                                      symbol="caretDown"
                                                      variant="primary"
                                                    >
                                                      <Icon__StyledIcon
                                                        aria-hidden="true"
                                                        iSize={16}
                                                        symbol="caretDown"
                                                        variant="primary"
                                                      >
                                                        <StyledComponent
                                                          aria-hidden="true"
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "Icon__StyledIcon-sc-1g20dn8-0",
                                                                "isStatic": false,
                                                                "lastClassName": "c4",
                                                                "rules": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "displayName": "Icon__StyledIcon",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "Icon__StyledIcon-sc-1g20dn8-0",
                                                              "target": "i",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          iSize={16}
                                                          symbol="caretDown"
                                                          variant="primary"
                                                        >
                                                          <i
                                                            aria-hidden="true"
                                                            className="c4"
                                                          />
                                                        </StyledComponent>
                                                      </Icon__StyledIcon>
                                                    </Icon>
                                                  </DecorativeIcon>
                                                </span>
                                              </StyledComponent>
                                            </Text__StyledText>
                                          </Text>
                                        </div>
                                      </Transition>
                                    </Translate>
                                  </div>
                                </StyledComponent>
                              </PanelWrapper__CaretContainer>
                              <PanelWrapper__HeaderContainer
                                direction="row"
                              >
                                <StyledComponent
                                  direction="row"
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "PanelWrapper__HeaderContainer-doiyjm-2",
                                        "isStatic": false,
                                        "lastClassName": "c6",
                                        "rules": Array [
                                          [Function],
                                        ],
                                      },
                                      "displayName": "PanelWrapper__HeaderContainer",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "PanelWrapper__HeaderContainer-doiyjm-2",
                                      "target": "div",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <div
                                    className="c5"
                                    direction="row"
                                  >
                                    <PanelWrapper__HeaderContainer
                                      direction="column"
                                    >
                                      <StyledComponent
                                        direction="column"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "PanelWrapper__HeaderContainer-doiyjm-2",
                                              "isStatic": false,
                                              "lastClassName": "c6",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "PanelWrapper__HeaderContainer",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "PanelWrapper__HeaderContainer-doiyjm-2",
                                            "target": "div",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <div
                                          className="c6"
                                          direction="column"
                                        >
                                          <PanelWrapper__HeaderTitleContainer>
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "PanelWrapper__HeaderTitleContainer-doiyjm-3",
                                                    "isStatic": true,
                                                    "lastClassName": "c7",
                                                    "rules": Array [
                                                      "width: 100%;",
                                                    ],
                                                  },
                                                  "displayName": "PanelWrapper__HeaderTitleContainer",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "PanelWrapper__HeaderTitleContainer-doiyjm-3",
                                                  "target": "div",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                            >
                                              <div
                                                className="c7"
                                              >
                                                <Text
                                                  block={false}
                                                  bold={false}
                                                  invert={false}
                                                  size="large"
                                                >
                                                  <Text__StyledText
                                                    block={false}
                                                    bold={false}
                                                    invert={false}
                                                    size="large"
                                                  >
                                                    <StyledComponent
                                                      block={false}
                                                      bold={false}
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "Text__StyledText-sc-1m0rr67-0",
                                                            "isStatic": false,
                                                            "lastClassName": "c9",
                                                            "rules": Array [
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                              "sup {",
                                                              "top: -0.5em;",
                                                              "font-size: 0.875rem;",
                                                              "position: relative;",
                                                              "vertical-align: baseline;",
                                                              "padding-left: 0.1em;",
                                                              "}",
                                                            ],
                                                          },
                                                          "displayName": "Text__StyledText",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "Text__StyledText-sc-1m0rr67-0",
                                                          "target": "span",
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                      invert={false}
                                                      size="large"
                                                    >
                                                      <span
                                                        className="c3"
                                                        size="large"
                                                      >
                                                        Panel title
                                                      </span>
                                                    </StyledComponent>
                                                  </Text__StyledText>
                                                </Text>
                                              </div>
                                            </StyledComponent>
                                          </PanelWrapper__HeaderTitleContainer>
                                        </div>
                                      </StyledComponent>
                                    </PanelWrapper__HeaderContainer>
                                  </div>
                                </StyledComponent>
                              </PanelWrapper__HeaderContainer>
                            </div>
                          </Box>
                        </div>
                      </Box>
                    </button>
                  </StyledComponent>
                </PanelWrapper__HeaderButtonClickable>
                <Reveal
                  duration={500}
                  height={0}
                  in={false}
                  timeout={0}
                >
                  <Transition
                    appear={false}
                    duration={500}
                    enter={true}
                    exit={true}
                    in={false}
                    mountOnEnter={false}
                    onEnter={[Function]}
                    onEntered={[Function]}
                    onEntering={[Function]}
                    onExit={[Function]}
                    onExited={[Function]}
                    onExiting={[Function]}
                    timeout={0}
                    unmountOnExit={false}
                  >
                    <div
                      aria-hidden={true}
                      data-testid="childrenContainer"
                      style={
                        Object {
                          "height": 0,
                          "overflow": "hidden",
                          "transition": "height 500ms",
                          "visibility": "hidden",
                        }
                      }
                    >
                      <div
                        data-testid="content"
                      >
                        <DimpleDivider>
                          <DimpleDivider__StyledDimpleDivider>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "DimpleDivider__StyledDimpleDivider-quxnvh-0",
                                    "isStatic": true,
                                    "lastClassName": "c8",
                                    "rules": Array [
                                      "padding: 0;",
                                      "margin: 0;",
                                      "border-width: 0;",
                                      "height: 32px;",
                                      "background-image: radial-gradient(ellipse at top, rgba(150, 150, 150, 0.1) 0%, rgba(0, 0, 0, 0) 70%);",
                                    ],
                                  },
                                  "displayName": "DimpleDivider__StyledDimpleDivider",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "DimpleDivider__StyledDimpleDivider-quxnvh-0",
                                  "target": "hr",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <hr
                                className="c8"
                              />
                            </StyledComponent>
                          </DimpleDivider__StyledDimpleDivider>
                        </DimpleDivider>
                        <Box
                          inline={false}
                          inset={4}
                          tag="div"
                        >
                          <div
                            className="TDS_Box-modules__horizontalPadding-4___3W1-P TDS_Box-modules__verticalPadding-4___QMNNa"
                          >
                            <Text
                              block={true}
                              bold={false}
                              invert={false}
                              size="base"
                            >
                              <Text__StyledText
                                block={true}
                                bold={false}
                                invert={false}
                                size="base"
                              >
                                <StyledComponent
                                  block={true}
                                  bold={false}
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "Text__StyledText-sc-1m0rr67-0",
                                        "isStatic": false,
                                        "lastClassName": "c9",
                                        "rules": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          "sup {",
                                          "top: -0.5em;",
                                          "font-size: 0.875rem;",
                                          "position: relative;",
                                          "vertical-align: baseline;",
                                          "padding-left: 0.1em;",
                                          "}",
                                        ],
                                      },
                                      "displayName": "Text__StyledText",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "Text__StyledText-sc-1m0rr67-0",
                                      "target": "span",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  invert={false}
                                  size="base"
                                >
                                  <span
                                    className="c9"
                                    size="base"
                                  >
                                    <Panel
                                      disabled={false}
                                      header="Panel title"
                                      id="panel-1"
                                      key=".0"
                                    >
                                      <div>
                                        Panel content
                                      </div>
                                    </Panel>
                                  </span>
                                </StyledComponent>
                              </Text__StyledText>
                            </Text>
                          </div>
                        </Box>
                      </div>
                    </div>
                  </Transition>
                </Reveal>
                <HairlineDivider
                  gradient={false}
                  vertical={false}
                >
                  <HairlineDivider__StyledHairlineDivider
                    gradient={false}
                    vertical={false}
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "HairlineDivider__StyledHairlineDivider-biamlk-0",
                            "isStatic": false,
                            "lastClassName": "c1",
                            "rules": Array [
                              "padding: 0;",
                              "margin: 0;",
                              "border-width: 0;",
                              [Function],
                            ],
                          },
                          "displayName": "HairlineDivider__StyledHairlineDivider",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "HairlineDivider__StyledHairlineDivider-biamlk-0",
                          "target": "hr",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      gradient={false}
                      vertical={false}
                    >
                      <hr
                        className="c1"
                      />
                    </StyledComponent>
                  </HairlineDivider__StyledHairlineDivider>
                </HairlineDivider>
              </div>
            </div>
          </PanelWrapper>
        </div>
      </StyledComponent>
    </Panels__PanelBase>
  </Panels>
</Accordion>
`;

exports[`Accordion renders an open accordion 1`] = `
.c1 {
  padding: 0;
  margin: 0;
  border-width: 0;
  -webkit-transform: rotate(-0.00001deg);
  -ms-transform: rotate(-0.00001deg);
  transform: rotate(-0.00001deg);
  width: 100%;
  height: 1px;
  background-color: #d8d8d8;
}

.c4 {
  font-family: 'TELUS Core Icons';
  display: inline-block;
  font-weight: normal;
  font-style: normal;
  speak: none;
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
  text-transform: none;
  text-rendering: auto;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  line-height: 1;
  vertical-align: middle;
  color: #248700;
  font-size: 1rem;
}

.c4::before {
  content: '\\f106';
}

.c3 {
  color: #2a2c2e;
  word-wrap: break-word;
  font-size: 1.25rem;
  -webkit-letter-spacing: -1px;
  -moz-letter-spacing: -1px;
  -ms-letter-spacing: -1px;
  letter-spacing: -1px;
  line-height: 1.6;
  word-wrap: break-word;
  font-weight: 400;
}

.c3 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

.c9 {
  color: #2a2c2e;
  word-wrap: break-word;
  font-size: inherit;
  font-weight: inherit;
  display: block;
}

.c9 sup {
  top: -0.5em;
  font-size: 0.875rem;
  position: relative;
  vertical-align: baseline;
  padding-left: 0.1em;
}

.c8 {
  padding: 0;
  margin: 0;
  border-width: 0;
  height: 32px;
  background-image: radial-gradient(ellipse at top,rgba(150,150,150,0.1) 0%,rgba(0,0,0,0) 70%);
}

.c2 {
  padding: 0;
  margin: 0;
  border-width: 0;
  font-family: "TELUS-Web","Helvetica Neue",Helvetica,Arial,sans-serif;
  color: #2a2c2e;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: none;
  box-shadow: none;
  cursor: pointer;
  width: 100%;
  text-align: left;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  width: 100%;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
}

.c7 {
  width: 100%;
}

.c0 {
  background-color: #fff;
}

<Accordion
  open="panel-1"
  topDivider={true}
>
  <Panels
    isPanelOpen={[Function]}
    open="panel-1"
    togglePanel={[Function]}
    topDivider={true}
  >
    <Panels__PanelBase
      open="panel-1"
    >
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "Panels__PanelBase-sc-78ahii-0",
              "isStatic": true,
              "lastClassName": "c0",
              "rules": Array [
                "background-color: #fff;",
              ],
            },
            "displayName": "Panels__PanelBase",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "Panels__PanelBase-sc-78ahii-0",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        open="panel-1"
      >
        <div
          className="c0"
          open="panel-1"
        >
          <HairlineDivider
            gradient={false}
            vertical={false}
          >
            <HairlineDivider__StyledHairlineDivider
              gradient={false}
              vertical={false}
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "HairlineDivider__StyledHairlineDivider-biamlk-0",
                      "isStatic": false,
                      "lastClassName": "c1",
                      "rules": Array [
                        "padding: 0;",
                        "margin: 0;",
                        "border-width: 0;",
                        [Function],
                      ],
                    },
                    "displayName": "HairlineDivider__StyledHairlineDivider",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "HairlineDivider__StyledHairlineDivider-biamlk-0",
                    "target": "hr",
                    "toString": [Function],
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                gradient={false}
                vertical={false}
              >
                <hr
                  className="c1"
                />
              </StyledComponent>
            </HairlineDivider__StyledHairlineDivider>
          </HairlineDivider>
          <PanelWrapper
            key="panel-1"
            onClick={[Function]}
            open={true}
            panelDisabled={false}
            panelHeader="Panel title"
            panelId="panel-1"
          >
            <div
              data-testid="panel-1"
            >
              <div>
                <PanelWrapper__HeaderButtonClickable
                  aria-expanded={true}
                  disabled={false}
                  onClick={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  panelDisabled={false}
                >
                  <StyledComponent
                    aria-expanded={true}
                    disabled={false}
                    forwardedComponent={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": Array [],
                        "componentStyle": ComponentStyle {
                          "componentId": "PanelWrapper__HeaderButtonClickable-doiyjm-0",
                          "isStatic": false,
                          "lastClassName": "c2",
                          "rules": Array [
                            "padding: 0;",
                            "margin: 0;",
                            "border-width: 0;",
                            "font-family: \\"TELUS-Web\\", \\"Helvetica Neue\\", Helvetica, Arial, sans-serif;",
                            "color: #2a2c2e;",
                            "appearance: none;",
                            "background: none;",
                            "box-shadow: none;",
                            "cursor: pointer;",
                            [Function],
                          ],
                        },
                        "displayName": "PanelWrapper__HeaderButtonClickable",
                        "foldedComponentIds": Array [],
                        "render": [Function],
                        "styledComponentId": "PanelWrapper__HeaderButtonClickable-doiyjm-0",
                        "target": "button",
                        "toString": [Function],
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onClick={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    panelDisabled={false}
                  >
                    <button
                      aria-expanded={true}
                      className="c2"
                      disabled={false}
                      onClick={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                    >
                      <Box
                        inline={false}
                        tag="div"
                        vertical={3}
                      >
                        <div
                          className="TDS_Box-modules__verticalPadding-3___Fsv37"
                        >
                          <Box
                            between={3}
                            inline={true}
                            tag="div"
                          >
                            <div
                              className="TDS_Box-modules__betweenRightMargin-3___1dOvx TDS_Box-modules__inline___jTHcz"
                            >
                              <PanelWrapper__CaretContainer
                                isDisabled={false}
                              >
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "PanelWrapper__CaretContainer-doiyjm-1",
                                        "isStatic": false,
                                        "lastClassName": "lkXOVg",
                                        "rules": Array [
                                          [Function],
                                        ],
                                      },
                                      "displayName": "PanelWrapper__CaretContainer",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "PanelWrapper__CaretContainer-doiyjm-1",
                                      "target": "div",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  isDisabled={false}
                                >
                                  <div
                                    className=""
                                  >
                                    <Translate
                                      direction="y"
                                      distance="-0.25rem"
                                      in={false}
                                      timeout={300}
                                    >
                                      <Transition
                                        appear={false}
                                        enter={true}
                                        exit={true}
                                        in={false}
                                        mountOnEnter={false}
                                        onEnter={[Function]}
                                        onEntered={[Function]}
                                        onEntering={[Function]}
                                        onExit={[Function]}
                                        onExited={[Function]}
                                        onExiting={[Function]}
                                        timeout={300}
                                        unmountOnExit={false}
                                      >
                                        <div
                                          style={
                                            Object {
                                              "transition": "transform 300ms",
                                            }
                                          }
                                        >
                                          <Text
                                            block={false}
                                            bold={false}
                                            invert={false}
                                            size="large"
                                          >
                                            <Text__StyledText
                                              block={false}
                                              bold={false}
                                              invert={false}
                                              size="large"
                                            >
                                              <StyledComponent
                                                block={false}
                                                bold={false}
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "Text__StyledText-sc-1m0rr67-0",
                                                      "isStatic": false,
                                                      "lastClassName": "c9",
                                                      "rules": Array [
                                                        [Function],
                                                        [Function],
                                                        [Function],
                                                        [Function],
                                                        [Function],
                                                        "sup {",
                                                        "top: -0.5em;",
                                                        "font-size: 0.875rem;",
                                                        "position: relative;",
                                                        "vertical-align: baseline;",
                                                        "padding-left: 0.1em;",
                                                        "}",
                                                      ],
                                                    },
                                                    "displayName": "Text__StyledText",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "Text__StyledText-sc-1m0rr67-0",
                                                    "target": "span",
                                                    "toString": [Function],
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                                invert={false}
                                                size="large"
                                              >
                                                <span
                                                  className="c3"
                                                  size="large"
                                                >
                                                  <DecorativeIcon
                                                    size={16}
                                                    symbol="caretUp"
                                                    variant="primary"
                                                  >
                                                    <Icon
                                                      aria-hidden="true"
                                                      size={16}
                                                      symbol="caretUp"
                                                      variant="primary"
                                                    >
                                                      <Icon__StyledIcon
                                                        aria-hidden="true"
                                                        iSize={16}
                                                        symbol="caretUp"
                                                        variant="primary"
                                                      >
                                                        <StyledComponent
                                                          aria-hidden="true"
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "Icon__StyledIcon-sc-1g20dn8-0",
                                                                "isStatic": false,
                                                                "lastClassName": "c4",
                                                                "rules": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "displayName": "Icon__StyledIcon",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "Icon__StyledIcon-sc-1g20dn8-0",
                                                              "target": "i",
                                                              "toString": [Function],
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          iSize={16}
                                                          symbol="caretUp"
                                                          variant="primary"
                                                        >
                                                          <i
                                                            aria-hidden="true"
                                                            className="c4"
                                                          />
                                                        </StyledComponent>
                                                      </Icon__StyledIcon>
                                                    </Icon>
                                                  </DecorativeIcon>
                                                </span>
                                              </StyledComponent>
                                            </Text__StyledText>
                                          </Text>
                                        </div>
                                      </Transition>
                                    </Translate>
                                  </div>
                                </StyledComponent>
                              </PanelWrapper__CaretContainer>
                              <PanelWrapper__HeaderContainer
                                direction="row"
                              >
                                <StyledComponent
                                  direction="row"
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "PanelWrapper__HeaderContainer-doiyjm-2",
                                        "isStatic": false,
                                        "lastClassName": "c6",
                                        "rules": Array [
                                          [Function],
                                        ],
                                      },
                                      "displayName": "PanelWrapper__HeaderContainer",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "PanelWrapper__HeaderContainer-doiyjm-2",
                                      "target": "div",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                >
                                  <div
                                    className="c5"
                                    direction="row"
                                  >
                                    <PanelWrapper__HeaderContainer
                                      direction="column"
                                    >
                                      <StyledComponent
                                        direction="column"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "PanelWrapper__HeaderContainer-doiyjm-2",
                                              "isStatic": false,
                                              "lastClassName": "c6",
                                              "rules": Array [
                                                [Function],
                                              ],
                                            },
                                            "displayName": "PanelWrapper__HeaderContainer",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "PanelWrapper__HeaderContainer-doiyjm-2",
                                            "target": "div",
                                            "toString": [Function],
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                      >
                                        <div
                                          className="c6"
                                          direction="column"
                                        >
                                          <PanelWrapper__HeaderTitleContainer>
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "PanelWrapper__HeaderTitleContainer-doiyjm-3",
                                                    "isStatic": true,
                                                    "lastClassName": "c7",
                                                    "rules": Array [
                                                      "width: 100%;",
                                                    ],
                                                  },
                                                  "displayName": "PanelWrapper__HeaderTitleContainer",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "PanelWrapper__HeaderTitleContainer-doiyjm-3",
                                                  "target": "div",
                                                  "toString": [Function],
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                            >
                                              <div
                                                className="c7"
                                              >
                                                <Text
                                                  block={false}
                                                  bold={false}
                                                  invert={false}
                                                  size="large"
                                                >
                                                  <Text__StyledText
                                                    block={false}
                                                    bold={false}
                                                    invert={false}
                                                    size="large"
                                                  >
                                                    <StyledComponent
                                                      block={false}
                                                      bold={false}
                                                      forwardedComponent={
                                                        Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "attrs": Array [],
                                                          "componentStyle": ComponentStyle {
                                                            "componentId": "Text__StyledText-sc-1m0rr67-0",
                                                            "isStatic": false,
                                                            "lastClassName": "c9",
                                                            "rules": Array [
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                              "sup {",
                                                              "top: -0.5em;",
                                                              "font-size: 0.875rem;",
                                                              "position: relative;",
                                                              "vertical-align: baseline;",
                                                              "padding-left: 0.1em;",
                                                              "}",
                                                            ],
                                                          },
                                                          "displayName": "Text__StyledText",
                                                          "foldedComponentIds": Array [],
                                                          "render": [Function],
                                                          "styledComponentId": "Text__StyledText-sc-1m0rr67-0",
                                                          "target": "span",
                                                          "toString": [Function],
                                                          "warnTooManyClasses": [Function],
                                                          "withComponent": [Function],
                                                        }
                                                      }
                                                      forwardedRef={null}
                                                      invert={false}
                                                      size="large"
                                                    >
                                                      <span
                                                        className="c3"
                                                        size="large"
                                                      >
                                                        Panel title
                                                      </span>
                                                    </StyledComponent>
                                                  </Text__StyledText>
                                                </Text>
                                              </div>
                                            </StyledComponent>
                                          </PanelWrapper__HeaderTitleContainer>
                                        </div>
                                      </StyledComponent>
                                    </PanelWrapper__HeaderContainer>
                                  </div>
                                </StyledComponent>
                              </PanelWrapper__HeaderContainer>
                            </div>
                          </Box>
                        </div>
                      </Box>
                    </button>
                  </StyledComponent>
                </PanelWrapper__HeaderButtonClickable>
                <Reveal
                  duration={500}
                  height={0}
                  in={true}
                  timeout={500}
                >
                  <Transition
                    appear={false}
                    duration={500}
                    enter={true}
                    exit={true}
                    in={true}
                    mountOnEnter={false}
                    onEnter={[Function]}
                    onEntered={[Function]}
                    onEntering={[Function]}
                    onExit={[Function]}
                    onExited={[Function]}
                    onExiting={[Function]}
                    timeout={500}
                    unmountOnExit={false}
                  >
                    <div
                      aria-hidden={false}
                      data-testid="childrenContainer"
                      style={
                        Object {
                          "height": "auto",
                          "overflow": "visible",
                          "transition": "height 500ms",
                        }
                      }
                    >
                      <div
                        data-testid="content"
                      >
                        <DimpleDivider>
                          <DimpleDivider__StyledDimpleDivider>
                            <StyledComponent
                              forwardedComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "attrs": Array [],
                                  "componentStyle": ComponentStyle {
                                    "componentId": "DimpleDivider__StyledDimpleDivider-quxnvh-0",
                                    "isStatic": true,
                                    "lastClassName": "c8",
                                    "rules": Array [
                                      "padding: 0;",
                                      "margin: 0;",
                                      "border-width: 0;",
                                      "height: 32px;",
                                      "background-image: radial-gradient(ellipse at top, rgba(150, 150, 150, 0.1) 0%, rgba(0, 0, 0, 0) 70%);",
                                    ],
                                  },
                                  "displayName": "DimpleDivider__StyledDimpleDivider",
                                  "foldedComponentIds": Array [],
                                  "render": [Function],
                                  "styledComponentId": "DimpleDivider__StyledDimpleDivider-quxnvh-0",
                                  "target": "hr",
                                  "toString": [Function],
                                  "warnTooManyClasses": [Function],
                                  "withComponent": [Function],
                                }
                              }
                              forwardedRef={null}
                            >
                              <hr
                                className="c8"
                              />
                            </StyledComponent>
                          </DimpleDivider__StyledDimpleDivider>
                        </DimpleDivider>
                        <Box
                          inline={false}
                          inset={4}
                          tag="div"
                        >
                          <div
                            className="TDS_Box-modules__horizontalPadding-4___3W1-P TDS_Box-modules__verticalPadding-4___QMNNa"
                          >
                            <Text
                              block={true}
                              bold={false}
                              invert={false}
                              size="base"
                            >
                              <Text__StyledText
                                block={true}
                                bold={false}
                                invert={false}
                                size="base"
                              >
                                <StyledComponent
                                  block={true}
                                  bold={false}
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "Text__StyledText-sc-1m0rr67-0",
                                        "isStatic": false,
                                        "lastClassName": "c9",
                                        "rules": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          [Function],
                                          "sup {",
                                          "top: -0.5em;",
                                          "font-size: 0.875rem;",
                                          "position: relative;",
                                          "vertical-align: baseline;",
                                          "padding-left: 0.1em;",
                                          "}",
                                        ],
                                      },
                                      "displayName": "Text__StyledText",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "Text__StyledText-sc-1m0rr67-0",
                                      "target": "span",
                                      "toString": [Function],
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  invert={false}
                                  size="base"
                                >
                                  <span
                                    className="c9"
                                    size="base"
                                  >
                                    <Panel
                                      disabled={false}
                                      header="Panel title"
                                      id="panel-1"
                                      key=".0"
                                    >
                                      <div>
                                        Panel content
                                      </div>
                                    </Panel>
                                  </span>
                                </StyledComponent>
                              </Text__StyledText>
                            </Text>
                          </div>
                        </Box>
                      </div>
                    </div>
                  </Transition>
                </Reveal>
                <HairlineDivider
                  gradient={false}
                  vertical={false}
                >
                  <HairlineDivider__StyledHairlineDivider
                    gradient={false}
                    vertical={false}
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "HairlineDivider__StyledHairlineDivider-biamlk-0",
                            "isStatic": false,
                            "lastClassName": "c1",
                            "rules": Array [
                              "padding: 0;",
                              "margin: 0;",
                              "border-width: 0;",
                              [Function],
                            ],
                          },
                          "displayName": "HairlineDivider__StyledHairlineDivider",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "HairlineDivider__StyledHairlineDivider-biamlk-0",
                          "target": "hr",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      gradient={false}
                      vertical={false}
                    >
                      <hr
                        className="c1"
                      />
                    </StyledComponent>
                  </HairlineDivider__StyledHairlineDivider>
                </HairlineDivider>
              </div>
            </div>
          </PanelWrapper>
        </div>
      </StyledComponent>
    </Panels__PanelBase>
  </Panels>
</Accordion>
`;
